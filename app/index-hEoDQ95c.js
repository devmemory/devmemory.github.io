import{c as Fx,u as zx,j as Ue,r as ec}from"./index-D-VfemnN.js";import{r as be,g as e_,b as Bx,u as kx,e as Hx}from"./vendor-D5jgh6NY.js";import{_ as t_}from"./extends-CCbyfPlC.js";import{E as _s,M as Mi}from"./constants-BSb06lDE.js";import{C as Ir}from"./index-BrGSRGif.js";import{C as Vx,u as Gx}from"./useCustomQuery-Cf1mGVj6.js";import{P as Wx,A as Xx}from"./api-DxUCaQc-.js";/**
 * @license
 * Copyright 2010-2024 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const pu="164",as={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},ls={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},n_=0,Wf=1,i_=2,Yx=3,r_=0,mu=1,Ma=2,Si=3,cr=0,An=1,Fi=2,lr=0,vs=1,su=2,Xf=3,Yf=4,s_=5,Lr=100,o_=101,a_=102,l_=103,c_=104,u_=200,h_=201,f_=202,d_=203,ou=204,au=205,p_=206,m_=207,g_=208,__=209,v_=210,y_=211,x_=212,S_=213,M_=214,w_=0,E_=1,T_=2,ba=3,A_=4,b_=5,C_=6,R_=7,ja=0,P_=1,I_=2,ki=0,L_=1,D_=2,N_=3,Fd=4,U_=5,O_=6,F_=7,qf="attached",z_="detached",gu=300,ur=301,Nr=302,Ca=303,Ra=304,No=306,Pa=1e3,fi=1001,Ia=1002,mn=1003,zd=1004,qx=1004,So=1005,Zx=1005,rn=1006,wa=1007,jx=1007,zi=1008,Jx=1008,Vi=1009,B_=1010,k_=1011,Bd=1012,kd=1013,ws=1014,di=1015,Ja=1016,Hd=1017,Vd=1018,Uo=1020,H_=35902,V_=1021,G_=1022,Gn=1023,W_=1024,X_=1025,ys=1026,Ro=1027,Gd=1028,Wd=1029,Y_=1030,Xd=1031,Yd=1033,Kc=33776,Qc=33777,$c=33778,eu=33779,Zf=35840,jf=35841,Jf=35842,Kf=35843,Qf=36196,$f=37492,ed=37496,td=37808,nd=37809,id=37810,rd=37811,sd=37812,od=37813,ad=37814,ld=37815,cd=37816,ud=37817,hd=37818,fd=37819,dd=37820,pd=37821,tu=36492,md=36494,gd=36495,q_=36283,_d=36284,vd=36285,yd=36286,Z_=2200,j_=2201,J_=2202,La=2300,Da=2301,nu=2302,hs=2400,fs=2401,Na=2402,_u=2500,qd=2501,Kx=0,Qx=1,$x=2,K_=3200,Q_=3201,Or=0,$_=1,sr="",hi="srgb",fr="srgb-linear",vu="display-p3",Ka="display-p3-linear",Ua="linear",Ot="srgb",Oa="rec709",Fa="p3",eS=0,cs=7680,tS=7681,nS=7682,iS=7683,rS=34055,sS=34056,oS=5386,aS=512,lS=513,cS=514,uS=515,hS=516,fS=517,dS=518,xd=519,ev=512,tv=513,nv=514,Zd=515,iv=516,rv=517,sv=518,ov=519,za=35044,pS=35048,mS=35040,gS=35045,_S=35049,vS=35041,yS=35046,xS=35050,SS=35042,MS="100",Sd="300 es",Bi=2e3,Ba=2001;class Gi{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const n=this._listeners;return n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const i=this._listeners[e];if(i!==void 0){const s=i.indexOf(t);s!==-1&&i.splice(s,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const n=this._listeners[e.type];if(n!==void 0){e.target=this;const i=n.slice(0);for(let s=0,l=i.length;s<l;s++)i[s].call(this,e);e.target=null}}}const wn=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let ng=1234567;const xs=Math.PI/180,Po=180/Math.PI;function $n(){const r=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(wn[r&255]+wn[r>>8&255]+wn[r>>16&255]+wn[r>>24&255]+"-"+wn[e&255]+wn[e>>8&255]+"-"+wn[e>>16&15|64]+wn[e>>24&255]+"-"+wn[t&63|128]+wn[t>>8&255]+"-"+wn[t>>16&255]+wn[t>>24&255]+wn[n&255]+wn[n>>8&255]+wn[n>>16&255]+wn[n>>24&255]).toLowerCase()}function Zt(r,e,t){return Math.max(e,Math.min(t,r))}function jd(r,e){return(r%e+e)%e}function wS(r,e,t,n,i){return n+(r-e)*(i-n)/(t-e)}function ES(r,e,t){return r!==e?(t-r)/(e-r):0}function Ea(r,e,t){return(1-t)*r+t*e}function TS(r,e,t,n){return Ea(r,e,1-Math.exp(-t*n))}function AS(r,e=1){return e-Math.abs(jd(r,e*2)-e)}function bS(r,e,t){return r<=e?0:r>=t?1:(r=(r-e)/(t-e),r*r*(3-2*r))}function CS(r,e,t){return r<=e?0:r>=t?1:(r=(r-e)/(t-e),r*r*r*(r*(r*6-15)+10))}function RS(r,e){return r+Math.floor(Math.random()*(e-r+1))}function PS(r,e){return r+Math.random()*(e-r)}function IS(r){return r*(.5-Math.random())}function LS(r){r!==void 0&&(ng=r);let e=ng+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}function DS(r){return r*xs}function NS(r){return r*Po}function US(r){return(r&r-1)===0&&r!==0}function OS(r){return Math.pow(2,Math.ceil(Math.log(r)/Math.LN2))}function FS(r){return Math.pow(2,Math.floor(Math.log(r)/Math.LN2))}function zS(r,e,t,n,i){const s=Math.cos,l=Math.sin,c=s(t/2),u=l(t/2),h=s((e+n)/2),f=l((e+n)/2),p=s((e-n)/2),g=l((e-n)/2),m=s((n-e)/2),y=l((n-e)/2);switch(i){case"XYX":r.set(c*f,u*p,u*g,c*h);break;case"YZY":r.set(u*g,c*f,u*p,c*h);break;case"ZXZ":r.set(u*p,u*g,c*f,c*h);break;case"XZX":r.set(c*f,u*y,u*m,c*h);break;case"YXY":r.set(u*m,c*f,u*y,c*h);break;case"ZYZ":r.set(u*y,u*m,c*f,c*h);break;default:}}function Un(r,e){switch(e.constructor){case Float32Array:return r;case Uint32Array:return r/4294967295;case Uint16Array:return r/65535;case Uint8Array:return r/255;case Int32Array:return Math.max(r/2147483647,-1);case Int16Array:return Math.max(r/32767,-1);case Int8Array:return Math.max(r/127,-1);default:throw new Error("Invalid component type.")}}function dt(r,e){switch(e.constructor){case Float32Array:return r;case Uint32Array:return Math.round(r*4294967295);case Uint16Array:return Math.round(r*65535);case Uint8Array:return Math.round(r*255);case Int32Array:return Math.round(r*2147483647);case Int16Array:return Math.round(r*32767);case Int8Array:return Math.round(r*127);default:throw new Error("Invalid component type.")}}const av={DEG2RAD:xs,RAD2DEG:Po,generateUUID:$n,clamp:Zt,euclideanModulo:jd,mapLinear:wS,inverseLerp:ES,lerp:Ea,damp:TS,pingpong:AS,smoothstep:bS,smootherstep:CS,randInt:RS,randFloat:PS,randFloatSpread:IS,seededRandom:LS,degToRad:DS,radToDeg:NS,isPowerOfTwo:US,ceilPowerOfTwo:OS,floorPowerOfTwo:FS,setQuaternionFromProperEuler:zS,normalize:dt,denormalize:Un};class ce{constructor(e=0,t=0){ce.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6],this.y=i[1]*t+i[4]*n+i[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(Zt(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),i=Math.sin(t),s=this.x-e.x,l=this.y-e.y;return this.x=s*n-l*i+e.x,this.y=s*i+l*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class ft{constructor(e,t,n,i,s,l,c,u,h){ft.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],e!==void 0&&this.set(e,t,n,i,s,l,c,u,h)}set(e,t,n,i,s,l,c,u,h){const f=this.elements;return f[0]=e,f[1]=i,f[2]=c,f[3]=t,f[4]=s,f[5]=u,f[6]=n,f[7]=l,f[8]=h,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,s=this.elements,l=n[0],c=n[3],u=n[6],h=n[1],f=n[4],p=n[7],g=n[2],m=n[5],y=n[8],M=i[0],x=i[3],v=i[6],E=i[1],w=i[4],A=i[7],U=i[2],I=i[5],L=i[8];return s[0]=l*M+c*E+u*U,s[3]=l*x+c*w+u*I,s[6]=l*v+c*A+u*L,s[1]=h*M+f*E+p*U,s[4]=h*x+f*w+p*I,s[7]=h*v+f*A+p*L,s[2]=g*M+m*E+y*U,s[5]=g*x+m*w+y*I,s[8]=g*v+m*A+y*L,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],l=e[4],c=e[5],u=e[6],h=e[7],f=e[8];return t*l*f-t*c*h-n*s*f+n*c*u+i*s*h-i*l*u}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],l=e[4],c=e[5],u=e[6],h=e[7],f=e[8],p=f*l-c*h,g=c*u-f*s,m=h*s-l*u,y=t*p+n*g+i*m;if(y===0)return this.set(0,0,0,0,0,0,0,0,0);const M=1/y;return e[0]=p*M,e[1]=(i*h-f*n)*M,e[2]=(c*n-i*l)*M,e[3]=g*M,e[4]=(f*t-i*u)*M,e[5]=(i*s-c*t)*M,e[6]=m*M,e[7]=(n*u-h*t)*M,e[8]=(l*t-n*s)*M,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,i,s,l,c){const u=Math.cos(s),h=Math.sin(s);return this.set(n*u,n*h,-n*(u*l+h*c)+l+e,-i*h,i*u,-i*(-h*l+u*c)+c+t,0,0,1),this}scale(e,t){return this.premultiply(Zh.makeScale(e,t)),this}rotate(e){return this.premultiply(Zh.makeRotation(-e)),this}translate(e,t){return this.premultiply(Zh.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,n,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<9;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const Zh=new ft;function lv(r){for(let e=r.length-1;e>=0;--e)if(r[e]>=65535)return!0;return!1}const BS={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function Mo(r,e){return new BS[r](e)}function ka(r){return document.createElementNS("http://www.w3.org/1999/xhtml",r)}function cv(){const r=ka("canvas");return r.style.display="block",r}const ig={};function uv(r){r in ig||(ig[r]=!0)}const rg=new ft().set(.8224621,.177538,0,.0331941,.9668058,0,.0170827,.0723974,.9105199),sg=new ft().set(1.2249401,-.2249404,0,-.0420569,1.0420571,0,-.0196376,-.0786361,1.0982735),tc={[fr]:{transfer:Ua,primaries:Oa,toReference:r=>r,fromReference:r=>r},[hi]:{transfer:Ot,primaries:Oa,toReference:r=>r.convertSRGBToLinear(),fromReference:r=>r.convertLinearToSRGB()},[Ka]:{transfer:Ua,primaries:Fa,toReference:r=>r.applyMatrix3(sg),fromReference:r=>r.applyMatrix3(rg)},[vu]:{transfer:Ot,primaries:Fa,toReference:r=>r.convertSRGBToLinear().applyMatrix3(sg),fromReference:r=>r.applyMatrix3(rg).convertLinearToSRGB()}},kS=new Set([fr,Ka]),Pt={enabled:!0,_workingColorSpace:fr,get workingColorSpace(){return this._workingColorSpace},set workingColorSpace(r){if(!kS.has(r))throw new Error(`Unsupported working color space, "${r}".`);this._workingColorSpace=r},convert:function(r,e,t){if(this.enabled===!1||e===t||!e||!t)return r;const n=tc[e].toReference,i=tc[t].fromReference;return i(n(r))},fromWorkingColorSpace:function(r,e){return this.convert(r,this._workingColorSpace,e)},toWorkingColorSpace:function(r,e){return this.convert(r,e,this._workingColorSpace)},getPrimaries:function(r){return tc[r].primaries},getTransfer:function(r){return r===sr?Ua:tc[r].transfer}};function Co(r){return r<.04045?r*.0773993808:Math.pow(r*.9478672986+.0521327014,2.4)}function jh(r){return r<.0031308?r*12.92:1.055*Math.pow(r,.41666)-.055}let Zs;class hv{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{Zs===void 0&&(Zs=ka("canvas")),Zs.width=e.width,Zs.height=e.height;const n=Zs.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=Zs}return t.width>2048||t.height>2048?t.toDataURL("image/jpeg",.6):t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=ka("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const i=n.getImageData(0,0,e.width,e.height),s=i.data;for(let l=0;l<s.length;l++)s[l]=Co(s[l]/255)*255;return n.putImageData(i,0,0),t}else if(e.data){const t=e.data.slice(0);for(let n=0;n<t.length;n++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[n]=Math.floor(Co(t[n]/255)*255):t[n]=Co(t[n]);return{data:t,width:e.width,height:e.height}}else return e}}let HS=0;class ds{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:HS++}),this.uuid=$n(),this.data=e,this.dataReady=!0,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(i!==null){let s;if(Array.isArray(i)){s=[];for(let l=0,c=i.length;l<c;l++)i[l].isDataTexture?s.push(Jh(i[l].image)):s.push(Jh(i[l]))}else s=Jh(i);n.url=s}return t||(e.images[this.uuid]=n),n}}function Jh(r){return typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&r instanceof ImageBitmap?hv.getDataURL(r):r.data?{data:Array.from(r.data),width:r.width,height:r.height,type:r.data.constructor.name}:{}}let VS=0;class Xt extends Gi{constructor(e=Xt.DEFAULT_IMAGE,t=Xt.DEFAULT_MAPPING,n=fi,i=fi,s=rn,l=zi,c=Gn,u=Vi,h=Xt.DEFAULT_ANISOTROPY,f=sr){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:VS++}),this.uuid=$n(),this.name="",this.source=new ds(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=n,this.wrapT=i,this.magFilter=s,this.minFilter=l,this.anisotropy=h,this.format=c,this.internalFormat=null,this.type=u,this.offset=new ce(0,0),this.repeat=new ce(1,1),this.center=new ce(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new ft,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=f,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.pmremVersion=0}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const n={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==gu)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case Pa:e.x=e.x-Math.floor(e.x);break;case fi:e.x=e.x<0?0:1;break;case Ia:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case Pa:e.y=e.y-Math.floor(e.y);break;case fi:e.y=e.y<0?0:1;break;case Ia:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(e){e===!0&&this.pmremVersion++}}Xt.DEFAULT_IMAGE=null;Xt.DEFAULT_MAPPING=gu;Xt.DEFAULT_ANISOTROPY=1;class It{constructor(e=0,t=0,n=0,i=1){It.prototype.isVector4=!0,this.x=e,this.y=t,this.z=n,this.w=i}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,i){return this.x=e,this.y=t,this.z=n,this.w=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,s=this.w,l=e.elements;return this.x=l[0]*t+l[4]*n+l[8]*i+l[12]*s,this.y=l[1]*t+l[5]*n+l[9]*i+l[13]*s,this.z=l[2]*t+l[6]*n+l[10]*i+l[14]*s,this.w=l[3]*t+l[7]*n+l[11]*i+l[15]*s,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,i,s;const u=e.elements,h=u[0],f=u[4],p=u[8],g=u[1],m=u[5],y=u[9],M=u[2],x=u[6],v=u[10];if(Math.abs(f-g)<.01&&Math.abs(p-M)<.01&&Math.abs(y-x)<.01){if(Math.abs(f+g)<.1&&Math.abs(p+M)<.1&&Math.abs(y+x)<.1&&Math.abs(h+m+v-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const w=(h+1)/2,A=(m+1)/2,U=(v+1)/2,I=(f+g)/4,L=(p+M)/4,B=(y+x)/4;return w>A&&w>U?w<.01?(n=0,i=.707106781,s=.707106781):(n=Math.sqrt(w),i=I/n,s=L/n):A>U?A<.01?(n=.707106781,i=0,s=.707106781):(i=Math.sqrt(A),n=I/i,s=B/i):U<.01?(n=.707106781,i=.707106781,s=0):(s=Math.sqrt(U),n=L/s,i=B/s),this.set(n,i,s,t),this}let E=Math.sqrt((x-y)*(x-y)+(p-M)*(p-M)+(g-f)*(g-f));return Math.abs(E)<.001&&(E=1),this.x=(x-y)/E,this.y=(p-M)/E,this.z=(g-f)/E,this.w=Math.acos((h+m+v-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class fv extends Gi{constructor(e=1,t=1,n={}){super(),this.isRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new It(0,0,e,t),this.scissorTest=!1,this.viewport=new It(0,0,e,t);const i={width:e,height:t,depth:1};n=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:rn,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1},n);const s=new Xt(i,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.colorSpace);s.flipY=!1,s.generateMipmaps=n.generateMipmaps,s.internalFormat=n.internalFormat,this.textures=[];const l=n.count;for(let c=0;c<l;c++)this.textures[c]=s.clone(),this.textures[c].isRenderTargetTexture=!0;this.depthBuffer=n.depthBuffer,this.stencilBuffer=n.stencilBuffer,this.resolveDepthBuffer=n.resolveDepthBuffer,this.resolveStencilBuffer=n.resolveStencilBuffer,this.depthTexture=n.depthTexture,this.samples=n.samples}get texture(){return this.textures[0]}set texture(e){this.textures[0]=e}setSize(e,t,n=1){if(this.width!==e||this.height!==t||this.depth!==n){this.width=e,this.height=t,this.depth=n;for(let i=0,s=this.textures.length;i<s;i++)this.textures[i].image.width=e,this.textures[i].image.height=t,this.textures[i].image.depth=n;this.dispose()}this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.textures.length=0;for(let n=0,i=e.textures.length;n<i;n++)this.textures[n]=e.textures[n].clone(),this.textures[n].isRenderTargetTexture=!0;const t=Object.assign({},e.texture.image);return this.texture.source=new ds(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.resolveDepthBuffer=e.resolveDepthBuffer,this.resolveStencilBuffer=e.resolveStencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class Ei extends fv{constructor(e=1,t=1,n={}){super(e,t,n),this.isWebGLRenderTarget=!0}}class yu extends Xt{constructor(e=null,t=1,n=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=mn,this.minFilter=mn,this.wrapR=fi,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class GS extends Ei{constructor(e=1,t=1,n=1,i={}){super(e,t,i),this.isWebGLArrayRenderTarget=!0,this.depth=n,this.texture=new yu(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class Jd extends Xt{constructor(e=null,t=1,n=1,i=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=mn,this.minFilter=mn,this.wrapR=fi,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class WS extends Ei{constructor(e=1,t=1,n=1,i={}){super(e,t,i),this.isWebGL3DRenderTarget=!0,this.depth=n,this.texture=new Jd(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class bn{constructor(e=0,t=0,n=0,i=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=n,this._w=i}static slerpFlat(e,t,n,i,s,l,c){let u=n[i+0],h=n[i+1],f=n[i+2],p=n[i+3];const g=s[l+0],m=s[l+1],y=s[l+2],M=s[l+3];if(c===0){e[t+0]=u,e[t+1]=h,e[t+2]=f,e[t+3]=p;return}if(c===1){e[t+0]=g,e[t+1]=m,e[t+2]=y,e[t+3]=M;return}if(p!==M||u!==g||h!==m||f!==y){let x=1-c;const v=u*g+h*m+f*y+p*M,E=v>=0?1:-1,w=1-v*v;if(w>Number.EPSILON){const U=Math.sqrt(w),I=Math.atan2(U,v*E);x=Math.sin(x*I)/U,c=Math.sin(c*I)/U}const A=c*E;if(u=u*x+g*A,h=h*x+m*A,f=f*x+y*A,p=p*x+M*A,x===1-c){const U=1/Math.sqrt(u*u+h*h+f*f+p*p);u*=U,h*=U,f*=U,p*=U}}e[t]=u,e[t+1]=h,e[t+2]=f,e[t+3]=p}static multiplyQuaternionsFlat(e,t,n,i,s,l){const c=n[i],u=n[i+1],h=n[i+2],f=n[i+3],p=s[l],g=s[l+1],m=s[l+2],y=s[l+3];return e[t]=c*y+f*p+u*m-h*g,e[t+1]=u*y+f*g+h*p-c*m,e[t+2]=h*y+f*m+c*g-u*p,e[t+3]=f*y-c*p-u*g-h*m,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t=!0){const n=e._x,i=e._y,s=e._z,l=e._order,c=Math.cos,u=Math.sin,h=c(n/2),f=c(i/2),p=c(s/2),g=u(n/2),m=u(i/2),y=u(s/2);switch(l){case"XYZ":this._x=g*f*p+h*m*y,this._y=h*m*p-g*f*y,this._z=h*f*y+g*m*p,this._w=h*f*p-g*m*y;break;case"YXZ":this._x=g*f*p+h*m*y,this._y=h*m*p-g*f*y,this._z=h*f*y-g*m*p,this._w=h*f*p+g*m*y;break;case"ZXY":this._x=g*f*p-h*m*y,this._y=h*m*p+g*f*y,this._z=h*f*y+g*m*p,this._w=h*f*p-g*m*y;break;case"ZYX":this._x=g*f*p-h*m*y,this._y=h*m*p+g*f*y,this._z=h*f*y-g*m*p,this._w=h*f*p+g*m*y;break;case"YZX":this._x=g*f*p+h*m*y,this._y=h*m*p+g*f*y,this._z=h*f*y-g*m*p,this._w=h*f*p-g*m*y;break;case"XZY":this._x=g*f*p-h*m*y,this._y=h*m*p-g*f*y,this._z=h*f*y+g*m*p,this._w=h*f*p+g*m*y;break;default:}return t===!0&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,i=Math.sin(n);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],i=t[4],s=t[8],l=t[1],c=t[5],u=t[9],h=t[2],f=t[6],p=t[10],g=n+c+p;if(g>0){const m=.5/Math.sqrt(g+1);this._w=.25/m,this._x=(f-u)*m,this._y=(s-h)*m,this._z=(l-i)*m}else if(n>c&&n>p){const m=2*Math.sqrt(1+n-c-p);this._w=(f-u)/m,this._x=.25*m,this._y=(i+l)/m,this._z=(s+h)/m}else if(c>p){const m=2*Math.sqrt(1+c-n-p);this._w=(s-h)/m,this._x=(i+l)/m,this._y=.25*m,this._z=(u+f)/m}else{const m=2*Math.sqrt(1+p-n-c);this._w=(l-i)/m,this._x=(s+h)/m,this._y=(u+f)/m,this._z=.25*m}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(Zt(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(n===0)return this;const i=Math.min(1,t/n);return this.slerp(e,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,i=e._y,s=e._z,l=e._w,c=t._x,u=t._y,h=t._z,f=t._w;return this._x=n*f+l*c+i*h-s*u,this._y=i*f+l*u+s*c-n*h,this._z=s*f+l*h+n*u-i*c,this._w=l*f-n*c-i*u-s*h,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const n=this._x,i=this._y,s=this._z,l=this._w;let c=l*e._w+n*e._x+i*e._y+s*e._z;if(c<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,c=-c):this.copy(e),c>=1)return this._w=l,this._x=n,this._y=i,this._z=s,this;const u=1-c*c;if(u<=Number.EPSILON){const m=1-t;return this._w=m*l+t*this._w,this._x=m*n+t*this._x,this._y=m*i+t*this._y,this._z=m*s+t*this._z,this.normalize(),this}const h=Math.sqrt(u),f=Math.atan2(h,c),p=Math.sin((1-t)*f)/h,g=Math.sin(t*f)/h;return this._w=l*p+this._w*g,this._x=n*p+this._x*g,this._y=i*p+this._y*g,this._z=s*p+this._z*g,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=2*Math.PI*Math.random(),t=2*Math.PI*Math.random(),n=Math.random(),i=Math.sqrt(1-n),s=Math.sqrt(n);return this.set(i*Math.sin(e),i*Math.cos(e),s*Math.sin(t),s*Math.cos(t))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class N{constructor(e=0,t=0,n=0){N.prototype.isVector3=!0,this.x=e,this.y=t,this.z=n}set(e,t,n){return n===void 0&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(og.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(og.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,i=this.z,s=e.elements;return this.x=s[0]*t+s[3]*n+s[6]*i,this.y=s[1]*t+s[4]*n+s[7]*i,this.z=s[2]*t+s[5]*n+s[8]*i,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,s=e.elements,l=1/(s[3]*t+s[7]*n+s[11]*i+s[15]);return this.x=(s[0]*t+s[4]*n+s[8]*i+s[12])*l,this.y=(s[1]*t+s[5]*n+s[9]*i+s[13])*l,this.z=(s[2]*t+s[6]*n+s[10]*i+s[14])*l,this}applyQuaternion(e){const t=this.x,n=this.y,i=this.z,s=e.x,l=e.y,c=e.z,u=e.w,h=2*(l*i-c*n),f=2*(c*t-s*i),p=2*(s*n-l*t);return this.x=t+u*h+l*p-c*f,this.y=n+u*f+c*h-s*p,this.z=i+u*p+s*f-l*h,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,i=this.z,s=e.elements;return this.x=s[0]*t+s[4]*n+s[8]*i,this.y=s[1]*t+s[5]*n+s[9]*i,this.z=s[2]*t+s[6]*n+s[10]*i,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,i=e.y,s=e.z,l=t.x,c=t.y,u=t.z;return this.x=i*u-s*c,this.y=s*l-n*u,this.z=n*c-i*l,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return Kh.copy(this).projectOnVector(e),this.sub(Kh)}reflect(e){return this.sub(Kh.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(Zt(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,i=this.z-e.z;return t*t+n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const i=Math.sin(t)*e;return this.x=i*Math.sin(n),this.y=Math.cos(t)*e,this.z=i*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),i=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=i,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=Math.random()*Math.PI*2,t=Math.random()*2-1,n=Math.sqrt(1-t*t);return this.x=n*Math.cos(e),this.y=t,this.z=n*Math.sin(e),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const Kh=new N,og=new bn;class On{constructor(e=new N(1/0,1/0,1/0),t=new N(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t+=3)this.expandByPoint(vi.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,n=e.count;t<n;t++)this.expandByPoint(vi.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=vi.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const n=e.geometry;if(n!==void 0){const s=n.getAttribute("position");if(t===!0&&s!==void 0&&e.isInstancedMesh!==!0)for(let l=0,c=s.count;l<c;l++)e.isMesh===!0?e.getVertexPosition(l,vi):vi.fromBufferAttribute(s,l),vi.applyMatrix4(e.matrixWorld),this.expandByPoint(vi);else e.boundingBox!==void 0?(e.boundingBox===null&&e.computeBoundingBox(),nc.copy(e.boundingBox)):(n.boundingBox===null&&n.computeBoundingBox(),nc.copy(n.boundingBox)),nc.applyMatrix4(e.matrixWorld),this.union(nc)}const i=e.children;for(let s=0,l=i.length;s<l;s++)this.expandByObject(i[s],t);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,vi),vi.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(oa),ic.subVectors(this.max,oa),js.subVectors(e.a,oa),Js.subVectors(e.b,oa),Ks.subVectors(e.c,oa),wr.subVectors(Js,js),Er.subVectors(Ks,Js),jr.subVectors(js,Ks);let t=[0,-wr.z,wr.y,0,-Er.z,Er.y,0,-jr.z,jr.y,wr.z,0,-wr.x,Er.z,0,-Er.x,jr.z,0,-jr.x,-wr.y,wr.x,0,-Er.y,Er.x,0,-jr.y,jr.x,0];return!Qh(t,js,Js,Ks,ic)||(t=[1,0,0,0,1,0,0,0,1],!Qh(t,js,Js,Ks,ic))?!1:(rc.crossVectors(wr,Er),t=[rc.x,rc.y,rc.z],Qh(t,js,Js,Ks,ic))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,vi).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(vi).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(Qi[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Qi[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Qi[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Qi[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Qi[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Qi[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Qi[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Qi[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Qi),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const Qi=[new N,new N,new N,new N,new N,new N,new N,new N],vi=new N,nc=new On,js=new N,Js=new N,Ks=new N,wr=new N,Er=new N,jr=new N,oa=new N,ic=new N,rc=new N,Jr=new N;function Qh(r,e,t,n,i){for(let s=0,l=r.length-3;s<=l;s+=3){Jr.fromArray(r,s);const c=i.x*Math.abs(Jr.x)+i.y*Math.abs(Jr.y)+i.z*Math.abs(Jr.z),u=e.dot(Jr),h=t.dot(Jr),f=n.dot(Jr);if(Math.max(-Math.max(u,h,f),Math.min(u,h,f))>c)return!1}return!0}const XS=new On,aa=new N,$h=new N;class Cn{constructor(e=new N,t=-1){this.isSphere=!0,this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;t!==void 0?n.copy(t):XS.setFromPoints(e).getCenter(n);let i=0;for(let s=0,l=e.length;s<l;s++)i=Math.max(i,n.distanceToSquared(e[s]));return this.radius=Math.sqrt(i),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;aa.subVectors(e,this.center);const t=aa.lengthSq();if(t>this.radius*this.radius){const n=Math.sqrt(t),i=(n-this.radius)*.5;this.center.addScaledVector(aa,i/n),this.radius+=i}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):($h.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(aa.copy(e.center).add($h)),this.expandByPoint(aa.copy(e.center).sub($h))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const $i=new N,ef=new N,sc=new N,Tr=new N,tf=new N,oc=new N,nf=new N;class bs{constructor(e=new N,t=new N(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,$i)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=$i.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):($i.copy(this.origin).addScaledVector(this.direction,t),$i.distanceToSquared(e))}distanceSqToSegment(e,t,n,i){ef.copy(e).add(t).multiplyScalar(.5),sc.copy(t).sub(e).normalize(),Tr.copy(this.origin).sub(ef);const s=e.distanceTo(t)*.5,l=-this.direction.dot(sc),c=Tr.dot(this.direction),u=-Tr.dot(sc),h=Tr.lengthSq(),f=Math.abs(1-l*l);let p,g,m,y;if(f>0)if(p=l*u-c,g=l*c-u,y=s*f,p>=0)if(g>=-y)if(g<=y){const M=1/f;p*=M,g*=M,m=p*(p+l*g+2*c)+g*(l*p+g+2*u)+h}else g=s,p=Math.max(0,-(l*g+c)),m=-p*p+g*(g+2*u)+h;else g=-s,p=Math.max(0,-(l*g+c)),m=-p*p+g*(g+2*u)+h;else g<=-y?(p=Math.max(0,-(-l*s+c)),g=p>0?-s:Math.min(Math.max(-s,-u),s),m=-p*p+g*(g+2*u)+h):g<=y?(p=0,g=Math.min(Math.max(-s,-u),s),m=g*(g+2*u)+h):(p=Math.max(0,-(l*s+c)),g=p>0?s:Math.min(Math.max(-s,-u),s),m=-p*p+g*(g+2*u)+h);else g=l>0?-s:s,p=Math.max(0,-(l*g+c)),m=-p*p+g*(g+2*u)+h;return n&&n.copy(this.origin).addScaledVector(this.direction,p),i&&i.copy(ef).addScaledVector(sc,g),m}intersectSphere(e,t){$i.subVectors(e.center,this.origin);const n=$i.dot(this.direction),i=$i.dot($i)-n*n,s=e.radius*e.radius;if(i>s)return null;const l=Math.sqrt(s-i),c=n-l,u=n+l;return u<0?null:c<0?this.at(u,t):this.at(c,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return n===null?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,i,s,l,c,u;const h=1/this.direction.x,f=1/this.direction.y,p=1/this.direction.z,g=this.origin;return h>=0?(n=(e.min.x-g.x)*h,i=(e.max.x-g.x)*h):(n=(e.max.x-g.x)*h,i=(e.min.x-g.x)*h),f>=0?(s=(e.min.y-g.y)*f,l=(e.max.y-g.y)*f):(s=(e.max.y-g.y)*f,l=(e.min.y-g.y)*f),n>l||s>i||((s>n||isNaN(n))&&(n=s),(l<i||isNaN(i))&&(i=l),p>=0?(c=(e.min.z-g.z)*p,u=(e.max.z-g.z)*p):(c=(e.max.z-g.z)*p,u=(e.min.z-g.z)*p),n>u||c>i)||((c>n||n!==n)&&(n=c),(u<i||i!==i)&&(i=u),i<0)?null:this.at(n>=0?n:i,t)}intersectsBox(e){return this.intersectBox(e,$i)!==null}intersectTriangle(e,t,n,i,s){tf.subVectors(t,e),oc.subVectors(n,e),nf.crossVectors(tf,oc);let l=this.direction.dot(nf),c;if(l>0){if(i)return null;c=1}else if(l<0)c=-1,l=-l;else return null;Tr.subVectors(this.origin,e);const u=c*this.direction.dot(oc.crossVectors(Tr,oc));if(u<0)return null;const h=c*this.direction.dot(tf.cross(Tr));if(h<0||u+h>l)return null;const f=-c*Tr.dot(nf);return f<0?null:this.at(f/l,s)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class et{constructor(e,t,n,i,s,l,c,u,h,f,p,g,m,y,M,x){et.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],e!==void 0&&this.set(e,t,n,i,s,l,c,u,h,f,p,g,m,y,M,x)}set(e,t,n,i,s,l,c,u,h,f,p,g,m,y,M,x){const v=this.elements;return v[0]=e,v[4]=t,v[8]=n,v[12]=i,v[1]=s,v[5]=l,v[9]=c,v[13]=u,v[2]=h,v[6]=f,v[10]=p,v[14]=g,v[3]=m,v[7]=y,v[11]=M,v[15]=x,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new et().fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,i=1/Qs.setFromMatrixColumn(e,0).length(),s=1/Qs.setFromMatrixColumn(e,1).length(),l=1/Qs.setFromMatrixColumn(e,2).length();return t[0]=n[0]*i,t[1]=n[1]*i,t[2]=n[2]*i,t[3]=0,t[4]=n[4]*s,t[5]=n[5]*s,t[6]=n[6]*s,t[7]=0,t[8]=n[8]*l,t[9]=n[9]*l,t[10]=n[10]*l,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,n=e.x,i=e.y,s=e.z,l=Math.cos(n),c=Math.sin(n),u=Math.cos(i),h=Math.sin(i),f=Math.cos(s),p=Math.sin(s);if(e.order==="XYZ"){const g=l*f,m=l*p,y=c*f,M=c*p;t[0]=u*f,t[4]=-u*p,t[8]=h,t[1]=m+y*h,t[5]=g-M*h,t[9]=-c*u,t[2]=M-g*h,t[6]=y+m*h,t[10]=l*u}else if(e.order==="YXZ"){const g=u*f,m=u*p,y=h*f,M=h*p;t[0]=g+M*c,t[4]=y*c-m,t[8]=l*h,t[1]=l*p,t[5]=l*f,t[9]=-c,t[2]=m*c-y,t[6]=M+g*c,t[10]=l*u}else if(e.order==="ZXY"){const g=u*f,m=u*p,y=h*f,M=h*p;t[0]=g-M*c,t[4]=-l*p,t[8]=y+m*c,t[1]=m+y*c,t[5]=l*f,t[9]=M-g*c,t[2]=-l*h,t[6]=c,t[10]=l*u}else if(e.order==="ZYX"){const g=l*f,m=l*p,y=c*f,M=c*p;t[0]=u*f,t[4]=y*h-m,t[8]=g*h+M,t[1]=u*p,t[5]=M*h+g,t[9]=m*h-y,t[2]=-h,t[6]=c*u,t[10]=l*u}else if(e.order==="YZX"){const g=l*u,m=l*h,y=c*u,M=c*h;t[0]=u*f,t[4]=M-g*p,t[8]=y*p+m,t[1]=p,t[5]=l*f,t[9]=-c*f,t[2]=-h*f,t[6]=m*p+y,t[10]=g-M*p}else if(e.order==="XZY"){const g=l*u,m=l*h,y=c*u,M=c*h;t[0]=u*f,t[4]=-p,t[8]=h*f,t[1]=g*p+M,t[5]=l*f,t[9]=m*p-y,t[2]=y*p-m,t[6]=c*f,t[10]=M*p+g}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(YS,e,qS)}lookAt(e,t,n){const i=this.elements;return Jn.subVectors(e,t),Jn.lengthSq()===0&&(Jn.z=1),Jn.normalize(),Ar.crossVectors(n,Jn),Ar.lengthSq()===0&&(Math.abs(n.z)===1?Jn.x+=1e-4:Jn.z+=1e-4,Jn.normalize(),Ar.crossVectors(n,Jn)),Ar.normalize(),ac.crossVectors(Jn,Ar),i[0]=Ar.x,i[4]=ac.x,i[8]=Jn.x,i[1]=Ar.y,i[5]=ac.y,i[9]=Jn.y,i[2]=Ar.z,i[6]=ac.z,i[10]=Jn.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,s=this.elements,l=n[0],c=n[4],u=n[8],h=n[12],f=n[1],p=n[5],g=n[9],m=n[13],y=n[2],M=n[6],x=n[10],v=n[14],E=n[3],w=n[7],A=n[11],U=n[15],I=i[0],L=i[4],B=i[8],R=i[12],b=i[1],z=i[5],Y=i[9],k=i[13],J=i[2],se=i[6],le=i[10],xe=i[14],H=i[3],te=i[7],j=i[11],fe=i[15];return s[0]=l*I+c*b+u*J+h*H,s[4]=l*L+c*z+u*se+h*te,s[8]=l*B+c*Y+u*le+h*j,s[12]=l*R+c*k+u*xe+h*fe,s[1]=f*I+p*b+g*J+m*H,s[5]=f*L+p*z+g*se+m*te,s[9]=f*B+p*Y+g*le+m*j,s[13]=f*R+p*k+g*xe+m*fe,s[2]=y*I+M*b+x*J+v*H,s[6]=y*L+M*z+x*se+v*te,s[10]=y*B+M*Y+x*le+v*j,s[14]=y*R+M*k+x*xe+v*fe,s[3]=E*I+w*b+A*J+U*H,s[7]=E*L+w*z+A*se+U*te,s[11]=E*B+w*Y+A*le+U*j,s[15]=E*R+w*k+A*xe+U*fe,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],i=e[8],s=e[12],l=e[1],c=e[5],u=e[9],h=e[13],f=e[2],p=e[6],g=e[10],m=e[14],y=e[3],M=e[7],x=e[11],v=e[15];return y*(+s*u*p-i*h*p-s*c*g+n*h*g+i*c*m-n*u*m)+M*(+t*u*m-t*h*g+s*l*g-i*l*m+i*h*f-s*u*f)+x*(+t*h*p-t*c*m-s*l*p+n*l*m+s*c*f-n*h*f)+v*(-i*c*f-t*u*p+t*c*g+i*l*p-n*l*g+n*u*f)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const i=this.elements;return e.isVector3?(i[12]=e.x,i[13]=e.y,i[14]=e.z):(i[12]=e,i[13]=t,i[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],l=e[4],c=e[5],u=e[6],h=e[7],f=e[8],p=e[9],g=e[10],m=e[11],y=e[12],M=e[13],x=e[14],v=e[15],E=p*x*h-M*g*h+M*u*m-c*x*m-p*u*v+c*g*v,w=y*g*h-f*x*h-y*u*m+l*x*m+f*u*v-l*g*v,A=f*M*h-y*p*h+y*c*m-l*M*m-f*c*v+l*p*v,U=y*p*u-f*M*u-y*c*g+l*M*g+f*c*x-l*p*x,I=t*E+n*w+i*A+s*U;if(I===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const L=1/I;return e[0]=E*L,e[1]=(M*g*s-p*x*s-M*i*m+n*x*m+p*i*v-n*g*v)*L,e[2]=(c*x*s-M*u*s+M*i*h-n*x*h-c*i*v+n*u*v)*L,e[3]=(p*u*s-c*g*s-p*i*h+n*g*h+c*i*m-n*u*m)*L,e[4]=w*L,e[5]=(f*x*s-y*g*s+y*i*m-t*x*m-f*i*v+t*g*v)*L,e[6]=(y*u*s-l*x*s-y*i*h+t*x*h+l*i*v-t*u*v)*L,e[7]=(l*g*s-f*u*s+f*i*h-t*g*h-l*i*m+t*u*m)*L,e[8]=A*L,e[9]=(y*p*s-f*M*s-y*n*m+t*M*m+f*n*v-t*p*v)*L,e[10]=(l*M*s-y*c*s+y*n*h-t*M*h-l*n*v+t*c*v)*L,e[11]=(f*c*s-l*p*s-f*n*h+t*p*h+l*n*m-t*c*m)*L,e[12]=U*L,e[13]=(f*M*i-y*p*i+y*n*g-t*M*g-f*n*x+t*p*x)*L,e[14]=(y*c*i-l*M*i-y*n*u+t*M*u+l*n*x-t*c*x)*L,e[15]=(l*p*i-f*c*i+f*n*u-t*p*u-l*n*g+t*c*g)*L,this}scale(e){const t=this.elements,n=e.x,i=e.y,s=e.z;return t[0]*=n,t[4]*=i,t[8]*=s,t[1]*=n,t[5]*=i,t[9]*=s,t[2]*=n,t[6]*=i,t[10]*=s,t[3]*=n,t[7]*=i,t[11]*=s,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,i))}makeTranslation(e,t,n){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),i=Math.sin(t),s=1-n,l=e.x,c=e.y,u=e.z,h=s*l,f=s*c;return this.set(h*l+n,h*c-i*u,h*u+i*c,0,h*c+i*u,f*c+n,f*u-i*l,0,h*u-i*c,f*u+i*l,s*u*u+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,i,s,l){return this.set(1,n,s,0,e,1,l,0,t,i,1,0,0,0,0,1),this}compose(e,t,n){const i=this.elements,s=t._x,l=t._y,c=t._z,u=t._w,h=s+s,f=l+l,p=c+c,g=s*h,m=s*f,y=s*p,M=l*f,x=l*p,v=c*p,E=u*h,w=u*f,A=u*p,U=n.x,I=n.y,L=n.z;return i[0]=(1-(M+v))*U,i[1]=(m+A)*U,i[2]=(y-w)*U,i[3]=0,i[4]=(m-A)*I,i[5]=(1-(g+v))*I,i[6]=(x+E)*I,i[7]=0,i[8]=(y+w)*L,i[9]=(x-E)*L,i[10]=(1-(g+M))*L,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,this}decompose(e,t,n){const i=this.elements;let s=Qs.set(i[0],i[1],i[2]).length();const l=Qs.set(i[4],i[5],i[6]).length(),c=Qs.set(i[8],i[9],i[10]).length();this.determinant()<0&&(s=-s),e.x=i[12],e.y=i[13],e.z=i[14],yi.copy(this);const h=1/s,f=1/l,p=1/c;return yi.elements[0]*=h,yi.elements[1]*=h,yi.elements[2]*=h,yi.elements[4]*=f,yi.elements[5]*=f,yi.elements[6]*=f,yi.elements[8]*=p,yi.elements[9]*=p,yi.elements[10]*=p,t.setFromRotationMatrix(yi),n.x=s,n.y=l,n.z=c,this}makePerspective(e,t,n,i,s,l,c=Bi){const u=this.elements,h=2*s/(t-e),f=2*s/(n-i),p=(t+e)/(t-e),g=(n+i)/(n-i);let m,y;if(c===Bi)m=-(l+s)/(l-s),y=-2*l*s/(l-s);else if(c===Ba)m=-l/(l-s),y=-l*s/(l-s);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+c);return u[0]=h,u[4]=0,u[8]=p,u[12]=0,u[1]=0,u[5]=f,u[9]=g,u[13]=0,u[2]=0,u[6]=0,u[10]=m,u[14]=y,u[3]=0,u[7]=0,u[11]=-1,u[15]=0,this}makeOrthographic(e,t,n,i,s,l,c=Bi){const u=this.elements,h=1/(t-e),f=1/(n-i),p=1/(l-s),g=(t+e)*h,m=(n+i)*f;let y,M;if(c===Bi)y=(l+s)*p,M=-2*p;else if(c===Ba)y=s*p,M=-1*p;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+c);return u[0]=2*h,u[4]=0,u[8]=0,u[12]=-g,u[1]=0,u[5]=2*f,u[9]=0,u[13]=-m,u[2]=0,u[6]=0,u[10]=M,u[14]=-y,u[3]=0,u[7]=0,u[11]=0,u[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<16;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}const Qs=new N,yi=new et,YS=new N(0,0,0),qS=new N(1,1,1),Ar=new N,ac=new N,Jn=new N,ag=new et,lg=new bn;class ei{constructor(e=0,t=0,n=0,i=ei.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=n,this._order=i}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,i=this._order){return this._x=e,this._y=t,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const i=e.elements,s=i[0],l=i[4],c=i[8],u=i[1],h=i[5],f=i[9],p=i[2],g=i[6],m=i[10];switch(t){case"XYZ":this._y=Math.asin(Zt(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-f,m),this._z=Math.atan2(-l,s)):(this._x=Math.atan2(g,h),this._z=0);break;case"YXZ":this._x=Math.asin(-Zt(f,-1,1)),Math.abs(f)<.9999999?(this._y=Math.atan2(c,m),this._z=Math.atan2(u,h)):(this._y=Math.atan2(-p,s),this._z=0);break;case"ZXY":this._x=Math.asin(Zt(g,-1,1)),Math.abs(g)<.9999999?(this._y=Math.atan2(-p,m),this._z=Math.atan2(-l,h)):(this._y=0,this._z=Math.atan2(u,s));break;case"ZYX":this._y=Math.asin(-Zt(p,-1,1)),Math.abs(p)<.9999999?(this._x=Math.atan2(g,m),this._z=Math.atan2(u,s)):(this._x=0,this._z=Math.atan2(-l,h));break;case"YZX":this._z=Math.asin(Zt(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(-f,h),this._y=Math.atan2(-p,s)):(this._x=0,this._y=Math.atan2(c,m));break;case"XZY":this._z=Math.asin(-Zt(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(g,h),this._y=Math.atan2(c,s)):(this._x=Math.atan2(-f,m),this._y=0);break;default:}return this._order=t,n===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return ag.makeRotationFromQuaternion(e),this.setFromRotationMatrix(ag,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return lg.setFromEuler(this),this.setFromQuaternion(lg,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}ei.DEFAULT_ORDER="XYZ";class Ss{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let ZS=0;const cg=new N,$s=new bn,er=new et,lc=new N,la=new N,jS=new N,JS=new bn,ug=new N(1,0,0),hg=new N(0,1,0),fg=new N(0,0,1),dg={type:"added"},KS={type:"removed"},eo={type:"childadded",child:null},rf={type:"childremoved",child:null};class bt extends Gi{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:ZS++}),this.uuid=$n(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=bt.DEFAULT_UP.clone();const e=new N,t=new ei,n=new bn,i=new N(1,1,1);function s(){n.setFromEuler(t,!1)}function l(){t.setFromQuaternion(n,void 0,!1)}t._onChange(s),n._onChange(l),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new et},normalMatrix:{value:new ft}}),this.matrix=new et,this.matrixWorld=new et,this.matrixAutoUpdate=bt.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=bt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new Ss,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return $s.setFromAxisAngle(e,t),this.quaternion.multiply($s),this}rotateOnWorldAxis(e,t){return $s.setFromAxisAngle(e,t),this.quaternion.premultiply($s),this}rotateX(e){return this.rotateOnAxis(ug,e)}rotateY(e){return this.rotateOnAxis(hg,e)}rotateZ(e){return this.rotateOnAxis(fg,e)}translateOnAxis(e,t){return cg.copy(e).applyQuaternion(this.quaternion),this.position.add(cg.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(ug,e)}translateY(e){return this.translateOnAxis(hg,e)}translateZ(e){return this.translateOnAxis(fg,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(er.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?lc.copy(e):lc.set(e,t,n);const i=this.parent;this.updateWorldMatrix(!0,!1),la.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?er.lookAt(la,lc,this.up):er.lookAt(lc,la,this.up),this.quaternion.setFromRotationMatrix(er),i&&(er.extractRotation(i.matrixWorld),$s.setFromRotationMatrix(er),this.quaternion.premultiply($s.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?this:(e&&e.isObject3D&&(e.removeFromParent(),e.parent=this,this.children.push(e),e.dispatchEvent(dg),eo.child=e,this.dispatchEvent(eo),eo.child=null),this)}remove(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(KS),rf.child=e,this.dispatchEvent(rf),rf.child=null),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),er.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),er.multiply(e.parent.matrixWorld)),e.applyMatrix4(er),e.removeFromParent(),e.parent=this,this.children.push(e),e.updateWorldMatrix(!1,!0),e.dispatchEvent(dg),eo.child=e,this.dispatchEvent(eo),eo.child=null,this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,i=this.children.length;n<i;n++){const l=this.children[n].getObjectByProperty(e,t);if(l!==void 0)return l}}getObjectsByProperty(e,t,n=[]){this[e]===t&&n.push(this);const i=this.children;for(let s=0,l=i.length;s<l;s++)i[s].getObjectsByProperty(e,t,n);return n}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(la,e,jS),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(la,JS,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,i=t.length;n<i;n++){const s=t[n];(s.matrixWorldAutoUpdate===!0||e===!0)&&s.updateMatrixWorld(e)}}updateWorldMatrix(e,t){const n=this.parent;if(e===!0&&n!==null&&n.matrixWorldAutoUpdate===!0&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),t===!0){const i=this.children;for(let s=0,l=i.length;s<l;s++){const c=i[s];c.matrixWorldAutoUpdate===!0&&c.updateWorldMatrix(!1,!0)}}}toJSON(e){const t=e===void 0||typeof e=="string",n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),i.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(i.type="BatchedMesh",i.perObjectFrustumCulled=this.perObjectFrustumCulled,i.sortObjects=this.sortObjects,i.drawRanges=this._drawRanges,i.reservedRanges=this._reservedRanges,i.visibility=this._visibility,i.active=this._active,i.bounds=this._bounds.map(c=>({boxInitialized:c.boxInitialized,boxMin:c.box.min.toArray(),boxMax:c.box.max.toArray(),sphereInitialized:c.sphereInitialized,sphereRadius:c.sphere.radius,sphereCenter:c.sphere.center.toArray()})),i.maxGeometryCount=this._maxGeometryCount,i.maxVertexCount=this._maxVertexCount,i.maxIndexCount=this._maxIndexCount,i.geometryInitialized=this._geometryInitialized,i.geometryCount=this._geometryCount,i.matricesTexture=this._matricesTexture.toJSON(e),this.boundingSphere!==null&&(i.boundingSphere={center:i.boundingSphere.center.toArray(),radius:i.boundingSphere.radius}),this.boundingBox!==null&&(i.boundingBox={min:i.boundingBox.min.toArray(),max:i.boundingBox.max.toArray()}));function s(c,u){return c[u.uuid]===void 0&&(c[u.uuid]=u.toJSON(e)),u.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(i.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=s(e.geometries,this.geometry);const c=this.geometry.parameters;if(c!==void 0&&c.shapes!==void 0){const u=c.shapes;if(Array.isArray(u))for(let h=0,f=u.length;h<f;h++){const p=u[h];s(e.shapes,p)}else s(e.shapes,u)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(s(e.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const c=[];for(let u=0,h=this.material.length;u<h;u++)c.push(s(e.materials,this.material[u]));i.material=c}else i.material=s(e.materials,this.material);if(this.children.length>0){i.children=[];for(let c=0;c<this.children.length;c++)i.children.push(this.children[c].toJSON(e).object)}if(this.animations.length>0){i.animations=[];for(let c=0;c<this.animations.length;c++){const u=this.animations[c];i.animations.push(s(e.animations,u))}}if(t){const c=l(e.geometries),u=l(e.materials),h=l(e.textures),f=l(e.images),p=l(e.shapes),g=l(e.skeletons),m=l(e.animations),y=l(e.nodes);c.length>0&&(n.geometries=c),u.length>0&&(n.materials=u),h.length>0&&(n.textures=h),f.length>0&&(n.images=f),p.length>0&&(n.shapes=p),g.length>0&&(n.skeletons=g),m.length>0&&(n.animations=m),y.length>0&&(n.nodes=y)}return n.object=i,n;function l(c){const u=[];for(const h in c){const f=c[h];delete f.metadata,u.push(f)}return u}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let n=0;n<e.children.length;n++){const i=e.children[n];this.add(i.clone())}return this}}bt.DEFAULT_UP=new N(0,1,0);bt.DEFAULT_MATRIX_AUTO_UPDATE=!0;bt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const xi=new N,tr=new N,sf=new N,nr=new N,to=new N,no=new N,pg=new N,of=new N,af=new N,lf=new N;class Qn{constructor(e=new N,t=new N,n=new N){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,i){i.subVectors(n,t),xi.subVectors(e,t),i.cross(xi);const s=i.lengthSq();return s>0?i.multiplyScalar(1/Math.sqrt(s)):i.set(0,0,0)}static getBarycoord(e,t,n,i,s){xi.subVectors(i,t),tr.subVectors(n,t),sf.subVectors(e,t);const l=xi.dot(xi),c=xi.dot(tr),u=xi.dot(sf),h=tr.dot(tr),f=tr.dot(sf),p=l*h-c*c;if(p===0)return s.set(0,0,0),null;const g=1/p,m=(h*u-c*f)*g,y=(l*f-c*u)*g;return s.set(1-m-y,y,m)}static containsPoint(e,t,n,i){return this.getBarycoord(e,t,n,i,nr)===null?!1:nr.x>=0&&nr.y>=0&&nr.x+nr.y<=1}static getInterpolation(e,t,n,i,s,l,c,u){return this.getBarycoord(e,t,n,i,nr)===null?(u.x=0,u.y=0,"z"in u&&(u.z=0),"w"in u&&(u.w=0),null):(u.setScalar(0),u.addScaledVector(s,nr.x),u.addScaledVector(l,nr.y),u.addScaledVector(c,nr.z),u)}static isFrontFacing(e,t,n,i){return xi.subVectors(n,t),tr.subVectors(e,t),xi.cross(tr).dot(i)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,i){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[i]),this}setFromAttributeAndIndices(e,t,n,i){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,i),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return xi.subVectors(this.c,this.b),tr.subVectors(this.a,this.b),xi.cross(tr).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return Qn.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return Qn.getBarycoord(e,this.a,this.b,this.c,t)}getInterpolation(e,t,n,i,s){return Qn.getInterpolation(e,this.a,this.b,this.c,t,n,i,s)}containsPoint(e){return Qn.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return Qn.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,i=this.b,s=this.c;let l,c;to.subVectors(i,n),no.subVectors(s,n),of.subVectors(e,n);const u=to.dot(of),h=no.dot(of);if(u<=0&&h<=0)return t.copy(n);af.subVectors(e,i);const f=to.dot(af),p=no.dot(af);if(f>=0&&p<=f)return t.copy(i);const g=u*p-f*h;if(g<=0&&u>=0&&f<=0)return l=u/(u-f),t.copy(n).addScaledVector(to,l);lf.subVectors(e,s);const m=to.dot(lf),y=no.dot(lf);if(y>=0&&m<=y)return t.copy(s);const M=m*h-u*y;if(M<=0&&h>=0&&y<=0)return c=h/(h-y),t.copy(n).addScaledVector(no,c);const x=f*y-m*p;if(x<=0&&p-f>=0&&m-y>=0)return pg.subVectors(s,i),c=(p-f)/(p-f+(m-y)),t.copy(i).addScaledVector(pg,c);const v=1/(x+M+g);return l=M*v,c=g*v,t.copy(n).addScaledVector(to,l).addScaledVector(no,c)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}const dv={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},br={h:0,s:0,l:0},cc={h:0,s:0,l:0};function cf(r,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?r+(e-r)*6*t:t<1/2?e:t<2/3?r+(e-r)*6*(2/3-t):r}class Oe{constructor(e,t,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,n)}set(e,t,n){if(t===void 0&&n===void 0){const i=e;i&&i.isColor?this.copy(i):typeof i=="number"?this.setHex(i):typeof i=="string"&&this.setStyle(i)}else this.setRGB(e,t,n);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=hi){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,Pt.toWorkingColorSpace(this,t),this}setRGB(e,t,n,i=Pt.workingColorSpace){return this.r=e,this.g=t,this.b=n,Pt.toWorkingColorSpace(this,i),this}setHSL(e,t,n,i=Pt.workingColorSpace){if(e=jd(e,1),t=Zt(t,0,1),n=Zt(n,0,1),t===0)this.r=this.g=this.b=n;else{const s=n<=.5?n*(1+t):n+t-n*t,l=2*n-s;this.r=cf(l,s,e+1/3),this.g=cf(l,s,e),this.b=cf(l,s,e-1/3)}return Pt.toWorkingColorSpace(this,i),this}setStyle(e,t=hi){function n(s){s!==void 0&&parseFloat(s)<1}let i;if(i=/^(\w+)\(([^\)]*)\)/.exec(e)){let s;const l=i[1],c=i[2];switch(l){case"rgb":case"rgba":if(s=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(s[4]),this.setRGB(Math.min(255,parseInt(s[1],10))/255,Math.min(255,parseInt(s[2],10))/255,Math.min(255,parseInt(s[3],10))/255,t);if(s=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(s[4]),this.setRGB(Math.min(100,parseInt(s[1],10))/100,Math.min(100,parseInt(s[2],10))/100,Math.min(100,parseInt(s[3],10))/100,t);break;case"hsl":case"hsla":if(s=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(s[4]),this.setHSL(parseFloat(s[1])/360,parseFloat(s[2])/100,parseFloat(s[3])/100,t);break;default:}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(e)){const s=i[1],l=s.length;if(l===3)return this.setRGB(parseInt(s.charAt(0),16)/15,parseInt(s.charAt(1),16)/15,parseInt(s.charAt(2),16)/15,t);if(l===6)return this.setHex(parseInt(s,16),t)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=hi){const n=dv[e.toLowerCase()];return n!==void 0&&this.setHex(n,t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=Co(e.r),this.g=Co(e.g),this.b=Co(e.b),this}copyLinearToSRGB(e){return this.r=jh(e.r),this.g=jh(e.g),this.b=jh(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=hi){return Pt.fromWorkingColorSpace(En.copy(this),e),Math.round(Zt(En.r*255,0,255))*65536+Math.round(Zt(En.g*255,0,255))*256+Math.round(Zt(En.b*255,0,255))}getHexString(e=hi){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=Pt.workingColorSpace){Pt.fromWorkingColorSpace(En.copy(this),t);const n=En.r,i=En.g,s=En.b,l=Math.max(n,i,s),c=Math.min(n,i,s);let u,h;const f=(c+l)/2;if(c===l)u=0,h=0;else{const p=l-c;switch(h=f<=.5?p/(l+c):p/(2-l-c),l){case n:u=(i-s)/p+(i<s?6:0);break;case i:u=(s-n)/p+2;break;case s:u=(n-i)/p+4;break}u/=6}return e.h=u,e.s=h,e.l=f,e}getRGB(e,t=Pt.workingColorSpace){return Pt.fromWorkingColorSpace(En.copy(this),t),e.r=En.r,e.g=En.g,e.b=En.b,e}getStyle(e=hi){Pt.fromWorkingColorSpace(En.copy(this),e);const t=En.r,n=En.g,i=En.b;return e!==hi?`color(${e} ${t.toFixed(3)} ${n.toFixed(3)} ${i.toFixed(3)})`:`rgb(${Math.round(t*255)},${Math.round(n*255)},${Math.round(i*255)})`}offsetHSL(e,t,n){return this.getHSL(br),this.setHSL(br.h+e,br.s+t,br.l+n)}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(br),e.getHSL(cc);const n=Ea(br.h,cc.h,t),i=Ea(br.s,cc.s,t),s=Ea(br.l,cc.l,t);return this.setHSL(n,i,s),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,n=this.g,i=this.b,s=e.elements;return this.r=s[0]*t+s[3]*n+s[6]*i,this.g=s[1]*t+s[4]*n+s[7]*i,this.b=s[2]*t+s[5]*n+s[8]*i,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const En=new Oe;Oe.NAMES=dv;let QS=0;class _n extends Gi{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:QS++}),this.uuid=$n(),this.name="",this.type="Material",this.blending=vs,this.side=cr,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=ou,this.blendDst=au,this.blendEquation=Lr,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new Oe(0,0,0),this.blendAlpha=0,this.depthFunc=ba,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=xd,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=cs,this.stencilZFail=cs,this.stencilZPass=cs,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const n=e[t];if(n===void 0)continue;const i=this[t];i!==void 0&&(i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[t]=n)}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const n={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.dispersion!==void 0&&(n.dispersion=this.dispersion),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.anisotropy!==void 0&&(n.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(n.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(n.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapRotation!==void 0&&(n.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==vs&&(n.blending=this.blending),this.side!==cr&&(n.side=this.side),this.vertexColors===!0&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=!0),this.blendSrc!==ou&&(n.blendSrc=this.blendSrc),this.blendDst!==au&&(n.blendDst=this.blendDst),this.blendEquation!==Lr&&(n.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(n.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(n.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(n.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(n.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(n.blendAlpha=this.blendAlpha),this.depthFunc!==ba&&(n.depthFunc=this.depthFunc),this.depthTest===!1&&(n.depthTest=this.depthTest),this.depthWrite===!1&&(n.depthWrite=this.depthWrite),this.colorWrite===!1&&(n.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(n.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==xd&&(n.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(n.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(n.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==cs&&(n.stencilFail=this.stencilFail),this.stencilZFail!==cs&&(n.stencilZFail=this.stencilZFail),this.stencilZPass!==cs&&(n.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(n.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaHash===!0&&(n.alphaHash=!0),this.alphaToCoverage===!0&&(n.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=!0),this.forceSinglePass===!0&&(n.forceSinglePass=!0),this.wireframe===!0&&(n.wireframe=!0),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=!0),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData);function i(s){const l=[];for(const c in s){const u=s[c];delete u.metadata,l.push(u)}return l}if(t){const s=i(e.textures),l=i(e.images);s.length>0&&(n.textures=s),l.length>0&&(n.images=l)}return n}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.blendColor.copy(e.blendColor),this.blendAlpha=e.blendAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(t!==null){const i=t.length;n=new Array(i);for(let s=0;s!==i;++s)n[s]=t[s].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}class Fr extends _n{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new Oe(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new ei,this.combine=ja,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const or=$S();function $S(){const r=new ArrayBuffer(4),e=new Float32Array(r),t=new Uint32Array(r),n=new Uint32Array(512),i=new Uint32Array(512);for(let u=0;u<256;++u){const h=u-127;h<-27?(n[u]=0,n[u|256]=32768,i[u]=24,i[u|256]=24):h<-14?(n[u]=1024>>-h-14,n[u|256]=1024>>-h-14|32768,i[u]=-h-1,i[u|256]=-h-1):h<=15?(n[u]=h+15<<10,n[u|256]=h+15<<10|32768,i[u]=13,i[u|256]=13):h<128?(n[u]=31744,n[u|256]=64512,i[u]=24,i[u|256]=24):(n[u]=31744,n[u|256]=64512,i[u]=13,i[u|256]=13)}const s=new Uint32Array(2048),l=new Uint32Array(64),c=new Uint32Array(64);for(let u=1;u<1024;++u){let h=u<<13,f=0;for(;!(h&8388608);)h<<=1,f-=8388608;h&=-8388609,f+=947912704,s[u]=h|f}for(let u=1024;u<2048;++u)s[u]=939524096+(u-1024<<13);for(let u=1;u<31;++u)l[u]=u<<23;l[31]=1199570944,l[32]=2147483648;for(let u=33;u<63;++u)l[u]=2147483648+(u-32<<23);l[63]=3347054592;for(let u=1;u<64;++u)u!==32&&(c[u]=1024);return{floatView:e,uint32View:t,baseTable:n,shiftTable:i,mantissaTable:s,exponentTable:l,offsetTable:c}}function Vn(r){Math.abs(r)>65504,r=Zt(r,-65504,65504),or.floatView[0]=r;const e=or.uint32View[0],t=e>>23&511;return or.baseTable[t]+((e&8388607)>>or.shiftTable[t])}function xa(r){const e=r>>10;return or.uint32View[0]=or.mantissaTable[or.offsetTable[e]+(r&1023)]+or.exponentTable[e],or.floatView[0]}const eM={toHalfFloat:Vn,fromHalfFloat:xa},nn=new N,uc=new ce;class Lt{constructor(e,t,n=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n,this.usage=za,this._updateRange={offset:0,count:-1},this.updateRanges=[],this.gpuType=di,this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}get updateRange(){return uv("THREE.BufferAttribute: updateRange() is deprecated and will be removed in r169. Use addUpdateRange() instead."),this._updateRange}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let i=0,s=this.itemSize;i<s;i++)this.array[e+i]=t.array[n+i];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,n=this.count;t<n;t++)uc.fromBufferAttribute(this,t),uc.applyMatrix3(e),this.setXY(t,uc.x,uc.y);else if(this.itemSize===3)for(let t=0,n=this.count;t<n;t++)nn.fromBufferAttribute(this,t),nn.applyMatrix3(e),this.setXYZ(t,nn.x,nn.y,nn.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)nn.fromBufferAttribute(this,t),nn.applyMatrix4(e),this.setXYZ(t,nn.x,nn.y,nn.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)nn.fromBufferAttribute(this,t),nn.applyNormalMatrix(e),this.setXYZ(t,nn.x,nn.y,nn.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)nn.fromBufferAttribute(this,t),nn.transformDirection(e),this.setXYZ(t,nn.x,nn.y,nn.z);return this}set(e,t=0){return this.array.set(e,t),this}getComponent(e,t){let n=this.array[e*this.itemSize+t];return this.normalized&&(n=Un(n,this.array)),n}setComponent(e,t,n){return this.normalized&&(n=dt(n,this.array)),this.array[e*this.itemSize+t]=n,this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=Un(t,this.array)),t}setX(e,t){return this.normalized&&(t=dt(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=Un(t,this.array)),t}setY(e,t){return this.normalized&&(t=dt(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=Un(t,this.array)),t}setZ(e,t){return this.normalized&&(t=dt(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=Un(t,this.array)),t}setW(e,t){return this.normalized&&(t=dt(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=dt(t,this.array),n=dt(n,this.array)),this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=dt(t,this.array),n=dt(n,this.array),i=dt(i,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this}setXYZW(e,t,n,i,s){return e*=this.itemSize,this.normalized&&(t=dt(t,this.array),n=dt(n,this.array),i=dt(i,this.array),s=dt(s,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this.array[e+3]=s,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==za&&(e.usage=this.usage),e}}class tM extends Lt{constructor(e,t,n){super(new Int8Array(e),t,n)}}class nM extends Lt{constructor(e,t,n){super(new Uint8Array(e),t,n)}}class iM extends Lt{constructor(e,t,n){super(new Uint8ClampedArray(e),t,n)}}class rM extends Lt{constructor(e,t,n){super(new Int16Array(e),t,n)}}class Kd extends Lt{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class sM extends Lt{constructor(e,t,n){super(new Int32Array(e),t,n)}}class Qd extends Lt{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class oM extends Lt{constructor(e,t,n){super(new Uint16Array(e),t,n),this.isFloat16BufferAttribute=!0}getX(e){let t=xa(this.array[e*this.itemSize]);return this.normalized&&(t=Un(t,this.array)),t}setX(e,t){return this.normalized&&(t=dt(t,this.array)),this.array[e*this.itemSize]=Vn(t),this}getY(e){let t=xa(this.array[e*this.itemSize+1]);return this.normalized&&(t=Un(t,this.array)),t}setY(e,t){return this.normalized&&(t=dt(t,this.array)),this.array[e*this.itemSize+1]=Vn(t),this}getZ(e){let t=xa(this.array[e*this.itemSize+2]);return this.normalized&&(t=Un(t,this.array)),t}setZ(e,t){return this.normalized&&(t=dt(t,this.array)),this.array[e*this.itemSize+2]=Vn(t),this}getW(e){let t=xa(this.array[e*this.itemSize+3]);return this.normalized&&(t=Un(t,this.array)),t}setW(e,t){return this.normalized&&(t=dt(t,this.array)),this.array[e*this.itemSize+3]=Vn(t),this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=dt(t,this.array),n=dt(n,this.array)),this.array[e+0]=Vn(t),this.array[e+1]=Vn(n),this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=dt(t,this.array),n=dt(n,this.array),i=dt(i,this.array)),this.array[e+0]=Vn(t),this.array[e+1]=Vn(n),this.array[e+2]=Vn(i),this}setXYZW(e,t,n,i,s){return e*=this.itemSize,this.normalized&&(t=dt(t,this.array),n=dt(n,this.array),i=dt(i,this.array),s=dt(s,this.array)),this.array[e+0]=Vn(t),this.array[e+1]=Vn(n),this.array[e+2]=Vn(i),this.array[e+3]=Vn(s),this}}class ke extends Lt{constructor(e,t,n){super(new Float32Array(e),t,n)}}let aM=0;const ui=new et,uf=new bt,io=new N,Kn=new On,ca=new On,dn=new N;class _t extends Gi{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:aM++}),this.uuid=$n(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(lv(e)?Qd:Kd)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const s=new ft().getNormalMatrix(e);n.applyNormalMatrix(s),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(e),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return ui.makeRotationFromQuaternion(e),this.applyMatrix4(ui),this}rotateX(e){return ui.makeRotationX(e),this.applyMatrix4(ui),this}rotateY(e){return ui.makeRotationY(e),this.applyMatrix4(ui),this}rotateZ(e){return ui.makeRotationZ(e),this.applyMatrix4(ui),this}translate(e,t,n){return ui.makeTranslation(e,t,n),this.applyMatrix4(ui),this}scale(e,t,n){return ui.makeScale(e,t,n),this.applyMatrix4(ui),this}lookAt(e){return uf.lookAt(e),uf.updateMatrix(),this.applyMatrix4(uf.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(io).negate(),this.translate(io.x,io.y,io.z),this}setFromPoints(e){const t=[];for(let n=0,i=e.length;n<i;n++){const s=e[n];t.push(s.x,s.y,s.z||0)}return this.setAttribute("position",new ke(t,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new On);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){this.boundingBox.set(new N(-1/0,-1/0,-1/0),new N(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,i=t.length;n<i;n++){const s=t[n];Kn.setFromBufferAttribute(s),this.morphTargetsRelative?(dn.addVectors(this.boundingBox.min,Kn.min),this.boundingBox.expandByPoint(dn),dn.addVectors(this.boundingBox.max,Kn.max),this.boundingBox.expandByPoint(dn)):(this.boundingBox.expandByPoint(Kn.min),this.boundingBox.expandByPoint(Kn.max))}}else this.boundingBox.makeEmpty();isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Cn);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){this.boundingSphere.set(new N,1/0);return}if(e){const n=this.boundingSphere.center;if(Kn.setFromBufferAttribute(e),t)for(let s=0,l=t.length;s<l;s++){const c=t[s];ca.setFromBufferAttribute(c),this.morphTargetsRelative?(dn.addVectors(Kn.min,ca.min),Kn.expandByPoint(dn),dn.addVectors(Kn.max,ca.max),Kn.expandByPoint(dn)):(Kn.expandByPoint(ca.min),Kn.expandByPoint(ca.max))}Kn.getCenter(n);let i=0;for(let s=0,l=e.count;s<l;s++)dn.fromBufferAttribute(e,s),i=Math.max(i,n.distanceToSquared(dn));if(t)for(let s=0,l=t.length;s<l;s++){const c=t[s],u=this.morphTargetsRelative;for(let h=0,f=c.count;h<f;h++)dn.fromBufferAttribute(c,h),u&&(io.fromBufferAttribute(e,h),dn.add(io)),i=Math.max(i,n.distanceToSquared(dn))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0)return;const n=t.position,i=t.normal,s=t.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new Lt(new Float32Array(4*n.count),4));const l=this.getAttribute("tangent"),c=[],u=[];for(let B=0;B<n.count;B++)c[B]=new N,u[B]=new N;const h=new N,f=new N,p=new N,g=new ce,m=new ce,y=new ce,M=new N,x=new N;function v(B,R,b){h.fromBufferAttribute(n,B),f.fromBufferAttribute(n,R),p.fromBufferAttribute(n,b),g.fromBufferAttribute(s,B),m.fromBufferAttribute(s,R),y.fromBufferAttribute(s,b),f.sub(h),p.sub(h),m.sub(g),y.sub(g);const z=1/(m.x*y.y-y.x*m.y);isFinite(z)&&(M.copy(f).multiplyScalar(y.y).addScaledVector(p,-m.y).multiplyScalar(z),x.copy(p).multiplyScalar(m.x).addScaledVector(f,-y.x).multiplyScalar(z),c[B].add(M),c[R].add(M),c[b].add(M),u[B].add(x),u[R].add(x),u[b].add(x))}let E=this.groups;E.length===0&&(E=[{start:0,count:e.count}]);for(let B=0,R=E.length;B<R;++B){const b=E[B],z=b.start,Y=b.count;for(let k=z,J=z+Y;k<J;k+=3)v(e.getX(k+0),e.getX(k+1),e.getX(k+2))}const w=new N,A=new N,U=new N,I=new N;function L(B){U.fromBufferAttribute(i,B),I.copy(U);const R=c[B];w.copy(R),w.sub(U.multiplyScalar(U.dot(R))).normalize(),A.crossVectors(I,R);const z=A.dot(u[B])<0?-1:1;l.setXYZW(B,w.x,w.y,w.z,z)}for(let B=0,R=E.length;B<R;++B){const b=E[B],z=b.start,Y=b.count;for(let k=z,J=z+Y;k<J;k+=3)L(e.getX(k+0)),L(e.getX(k+1)),L(e.getX(k+2))}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new Lt(new Float32Array(t.count*3),3),this.setAttribute("normal",n);else for(let g=0,m=n.count;g<m;g++)n.setXYZ(g,0,0,0);const i=new N,s=new N,l=new N,c=new N,u=new N,h=new N,f=new N,p=new N;if(e)for(let g=0,m=e.count;g<m;g+=3){const y=e.getX(g+0),M=e.getX(g+1),x=e.getX(g+2);i.fromBufferAttribute(t,y),s.fromBufferAttribute(t,M),l.fromBufferAttribute(t,x),f.subVectors(l,s),p.subVectors(i,s),f.cross(p),c.fromBufferAttribute(n,y),u.fromBufferAttribute(n,M),h.fromBufferAttribute(n,x),c.add(f),u.add(f),h.add(f),n.setXYZ(y,c.x,c.y,c.z),n.setXYZ(M,u.x,u.y,u.z),n.setXYZ(x,h.x,h.y,h.z)}else for(let g=0,m=t.count;g<m;g+=3)i.fromBufferAttribute(t,g+0),s.fromBufferAttribute(t,g+1),l.fromBufferAttribute(t,g+2),f.subVectors(l,s),p.subVectors(i,s),f.cross(p),n.setXYZ(g+0,f.x,f.y,f.z),n.setXYZ(g+1,f.x,f.y,f.z),n.setXYZ(g+2,f.x,f.y,f.z);this.normalizeNormals(),n.needsUpdate=!0}}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)dn.fromBufferAttribute(e,t),dn.normalize(),e.setXYZ(t,dn.x,dn.y,dn.z)}toNonIndexed(){function e(c,u){const h=c.array,f=c.itemSize,p=c.normalized,g=new h.constructor(u.length*f);let m=0,y=0;for(let M=0,x=u.length;M<x;M++){c.isInterleavedBufferAttribute?m=u[M]*c.data.stride+c.offset:m=u[M]*f;for(let v=0;v<f;v++)g[y++]=h[m++]}return new Lt(g,f,p)}if(this.index===null)return this;const t=new _t,n=this.index.array,i=this.attributes;for(const c in i){const u=i[c],h=e(u,n);t.setAttribute(c,h)}const s=this.morphAttributes;for(const c in s){const u=[],h=s[c];for(let f=0,p=h.length;f<p;f++){const g=h[f],m=e(g,n);u.push(m)}t.morphAttributes[c]=u}t.morphTargetsRelative=this.morphTargetsRelative;const l=this.groups;for(let c=0,u=l.length;c<u;c++){const h=l[c];t.addGroup(h.start,h.count,h.materialIndex)}return t}toJSON(){const e={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const u=this.parameters;for(const h in u)u[h]!==void 0&&(e[h]=u[h]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const u in n){const h=n[u];e.data.attributes[u]=h.toJSON(e.data)}const i={};let s=!1;for(const u in this.morphAttributes){const h=this.morphAttributes[u],f=[];for(let p=0,g=h.length;p<g;p++){const m=h[p];f.push(m.toJSON(e.data))}f.length>0&&(i[u]=f,s=!0)}s&&(e.data.morphAttributes=i,e.data.morphTargetsRelative=this.morphTargetsRelative);const l=this.groups;l.length>0&&(e.data.groups=JSON.parse(JSON.stringify(l)));const c=this.boundingSphere;return c!==null&&(e.data.boundingSphere={center:c.center.toArray(),radius:c.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;n!==null&&this.setIndex(n.clone(t));const i=e.attributes;for(const h in i){const f=i[h];this.setAttribute(h,f.clone(t))}const s=e.morphAttributes;for(const h in s){const f=[],p=s[h];for(let g=0,m=p.length;g<m;g++)f.push(p[g].clone(t));this.morphAttributes[h]=f}this.morphTargetsRelative=e.morphTargetsRelative;const l=e.groups;for(let h=0,f=l.length;h<f;h++){const p=l[h];this.addGroup(p.start,p.count,p.materialIndex)}const c=e.boundingBox;c!==null&&(this.boundingBox=c.clone());const u=e.boundingSphere;return u!==null&&(this.boundingSphere=u.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const mg=new et,Kr=new bs,hc=new Cn,gg=new N,ro=new N,so=new N,oo=new N,hf=new N,fc=new N,dc=new ce,pc=new ce,mc=new ce,_g=new N,vg=new N,yg=new N,gc=new N,_c=new N;class sn extends bt{constructor(e=new _t,t=new Fr){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,l=i.length;s<l;s++){const c=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=s}}}}getVertexPosition(e,t){const n=this.geometry,i=n.attributes.position,s=n.morphAttributes.position,l=n.morphTargetsRelative;t.fromBufferAttribute(i,e);const c=this.morphTargetInfluences;if(s&&c){fc.set(0,0,0);for(let u=0,h=s.length;u<h;u++){const f=c[u],p=s[u];f!==0&&(hf.fromBufferAttribute(p,e),l?fc.addScaledVector(hf,f):fc.addScaledVector(hf.sub(t),f))}t.add(fc)}return t}raycast(e,t){const n=this.geometry,i=this.material,s=this.matrixWorld;i!==void 0&&(n.boundingSphere===null&&n.computeBoundingSphere(),hc.copy(n.boundingSphere),hc.applyMatrix4(s),Kr.copy(e.ray).recast(e.near),!(hc.containsPoint(Kr.origin)===!1&&(Kr.intersectSphere(hc,gg)===null||Kr.origin.distanceToSquared(gg)>(e.far-e.near)**2))&&(mg.copy(s).invert(),Kr.copy(e.ray).applyMatrix4(mg),!(n.boundingBox!==null&&Kr.intersectsBox(n.boundingBox)===!1)&&this._computeIntersections(e,t,Kr)))}_computeIntersections(e,t,n){let i;const s=this.geometry,l=this.material,c=s.index,u=s.attributes.position,h=s.attributes.uv,f=s.attributes.uv1,p=s.attributes.normal,g=s.groups,m=s.drawRange;if(c!==null)if(Array.isArray(l))for(let y=0,M=g.length;y<M;y++){const x=g[y],v=l[x.materialIndex],E=Math.max(x.start,m.start),w=Math.min(c.count,Math.min(x.start+x.count,m.start+m.count));for(let A=E,U=w;A<U;A+=3){const I=c.getX(A),L=c.getX(A+1),B=c.getX(A+2);i=vc(this,v,e,n,h,f,p,I,L,B),i&&(i.faceIndex=Math.floor(A/3),i.face.materialIndex=x.materialIndex,t.push(i))}}else{const y=Math.max(0,m.start),M=Math.min(c.count,m.start+m.count);for(let x=y,v=M;x<v;x+=3){const E=c.getX(x),w=c.getX(x+1),A=c.getX(x+2);i=vc(this,l,e,n,h,f,p,E,w,A),i&&(i.faceIndex=Math.floor(x/3),t.push(i))}}else if(u!==void 0)if(Array.isArray(l))for(let y=0,M=g.length;y<M;y++){const x=g[y],v=l[x.materialIndex],E=Math.max(x.start,m.start),w=Math.min(u.count,Math.min(x.start+x.count,m.start+m.count));for(let A=E,U=w;A<U;A+=3){const I=A,L=A+1,B=A+2;i=vc(this,v,e,n,h,f,p,I,L,B),i&&(i.faceIndex=Math.floor(A/3),i.face.materialIndex=x.materialIndex,t.push(i))}}else{const y=Math.max(0,m.start),M=Math.min(u.count,m.start+m.count);for(let x=y,v=M;x<v;x+=3){const E=x,w=x+1,A=x+2;i=vc(this,l,e,n,h,f,p,E,w,A),i&&(i.faceIndex=Math.floor(x/3),t.push(i))}}}}function lM(r,e,t,n,i,s,l,c){let u;if(e.side===An?u=n.intersectTriangle(l,s,i,!0,c):u=n.intersectTriangle(i,s,l,e.side===cr,c),u===null)return null;_c.copy(c),_c.applyMatrix4(r.matrixWorld);const h=t.ray.origin.distanceTo(_c);return h<t.near||h>t.far?null:{distance:h,point:_c.clone(),object:r}}function vc(r,e,t,n,i,s,l,c,u,h){r.getVertexPosition(c,ro),r.getVertexPosition(u,so),r.getVertexPosition(h,oo);const f=lM(r,e,t,n,ro,so,oo,gc);if(f){i&&(dc.fromBufferAttribute(i,c),pc.fromBufferAttribute(i,u),mc.fromBufferAttribute(i,h),f.uv=Qn.getInterpolation(gc,ro,so,oo,dc,pc,mc,new ce)),s&&(dc.fromBufferAttribute(s,c),pc.fromBufferAttribute(s,u),mc.fromBufferAttribute(s,h),f.uv1=Qn.getInterpolation(gc,ro,so,oo,dc,pc,mc,new ce)),l&&(_g.fromBufferAttribute(l,c),vg.fromBufferAttribute(l,u),yg.fromBufferAttribute(l,h),f.normal=Qn.getInterpolation(gc,ro,so,oo,_g,vg,yg,new N),f.normal.dot(n.direction)>0&&f.normal.multiplyScalar(-1));const p={a:c,b:u,c:h,normal:new N,materialIndex:0};Qn.getNormal(ro,so,oo,p.normal),f.face=p}return f}class Cs extends _t{constructor(e=1,t=1,n=1,i=1,s=1,l=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:i,heightSegments:s,depthSegments:l};const c=this;i=Math.floor(i),s=Math.floor(s),l=Math.floor(l);const u=[],h=[],f=[],p=[];let g=0,m=0;y("z","y","x",-1,-1,n,t,e,l,s,0),y("z","y","x",1,-1,n,t,-e,l,s,1),y("x","z","y",1,1,e,n,t,i,l,2),y("x","z","y",1,-1,e,n,-t,i,l,3),y("x","y","z",1,-1,e,t,n,i,s,4),y("x","y","z",-1,-1,e,t,-n,i,s,5),this.setIndex(u),this.setAttribute("position",new ke(h,3)),this.setAttribute("normal",new ke(f,3)),this.setAttribute("uv",new ke(p,2));function y(M,x,v,E,w,A,U,I,L,B,R){const b=A/L,z=U/B,Y=A/2,k=U/2,J=I/2,se=L+1,le=B+1;let xe=0,H=0;const te=new N;for(let j=0;j<le;j++){const fe=j*z-k;for(let Le=0;Le<se;Le++){const Be=Le*b-Y;te[M]=Be*E,te[x]=fe*w,te[v]=J,h.push(te.x,te.y,te.z),te[M]=0,te[x]=0,te[v]=I>0?1:-1,f.push(te.x,te.y,te.z),p.push(Le/L),p.push(1-j/B),xe+=1}}for(let j=0;j<B;j++)for(let fe=0;fe<L;fe++){const Le=g+fe+se*j,Be=g+fe+se*(j+1),ne=g+(fe+1)+se*(j+1),_e=g+(fe+1)+se*j;u.push(Le,Be,_e),u.push(Be,ne,_e),H+=6}c.addGroup(m,H,R),m+=H,g+=xe}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Cs(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function Io(r){const e={};for(const t in r){e[t]={};for(const n in r[t]){const i=r[t][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?i.isRenderTargetTexture?e[t][n]=null:e[t][n]=i.clone():Array.isArray(i)?e[t][n]=i.slice():e[t][n]=i}}return e}function Nn(r){const e={};for(let t=0;t<r.length;t++){const n=Io(r[t]);for(const i in n)e[i]=n[i]}return e}function cM(r){const e=[];for(let t=0;t<r.length;t++)e.push(r[t].clone());return e}function pv(r){const e=r.getRenderTarget();return e===null?r.outputColorSpace:e.isXRRenderTarget===!0?e.texture.colorSpace:Pt.workingColorSpace}const mv={clone:Io,merge:Nn};var uM=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,hM=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class Ti extends _n{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=uM,this.fragmentShader=hM,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Io(e.uniforms),this.uniformsGroups=cM(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const i in this.uniforms){const l=this.uniforms[i].value;l&&l.isTexture?t.uniforms[i]={type:"t",value:l.toJSON(e).uuid}:l&&l.isColor?t.uniforms[i]={type:"c",value:l.getHex()}:l&&l.isVector2?t.uniforms[i]={type:"v2",value:l.toArray()}:l&&l.isVector3?t.uniforms[i]={type:"v3",value:l.toArray()}:l&&l.isVector4?t.uniforms[i]={type:"v4",value:l.toArray()}:l&&l.isMatrix3?t.uniforms[i]={type:"m3",value:l.toArray()}:l&&l.isMatrix4?t.uniforms[i]={type:"m4",value:l.toArray()}:t.uniforms[i]={value:l}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}class Qa extends bt{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new et,this.projectionMatrix=new et,this.projectionMatrixInverse=new et,this.coordinateSystem=Bi}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){return super.getWorldDirection(e).negate()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}const Cr=new N,xg=new ce,Sg=new ce;class pn extends Qa{constructor(e=50,t=1,n=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=Po*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(xs*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return Po*2*Math.atan(Math.tan(xs*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(e,t,n){Cr.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),t.set(Cr.x,Cr.y).multiplyScalar(-e/Cr.z),Cr.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),n.set(Cr.x,Cr.y).multiplyScalar(-e/Cr.z)}getViewSize(e,t){return this.getViewBounds(e,xg,Sg),t.subVectors(Sg,xg)}setViewOffset(e,t,n,i,s,l){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=l,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(xs*.5*this.fov)/this.zoom,n=2*t,i=this.aspect*n,s=-.5*i;const l=this.view;if(this.view!==null&&this.view.enabled){const u=l.fullWidth,h=l.fullHeight;s+=l.offsetX*i/u,t-=l.offsetY*n/h,i*=l.width/u,n*=l.height/h}const c=this.filmOffset;c!==0&&(s+=e*c/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+i,t,t-n,e,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const ao=-90,lo=1;class gv extends bt{constructor(e,t,n){super(),this.type="CubeCamera",this.renderTarget=n,this.coordinateSystem=null,this.activeMipmapLevel=0;const i=new pn(ao,lo,e,t);i.layers=this.layers,this.add(i);const s=new pn(ao,lo,e,t);s.layers=this.layers,this.add(s);const l=new pn(ao,lo,e,t);l.layers=this.layers,this.add(l);const c=new pn(ao,lo,e,t);c.layers=this.layers,this.add(c);const u=new pn(ao,lo,e,t);u.layers=this.layers,this.add(u);const h=new pn(ao,lo,e,t);h.layers=this.layers,this.add(h)}updateCoordinateSystem(){const e=this.coordinateSystem,t=this.children.concat(),[n,i,s,l,c,u]=t;for(const h of t)this.remove(h);if(e===Bi)n.up.set(0,1,0),n.lookAt(1,0,0),i.up.set(0,1,0),i.lookAt(-1,0,0),s.up.set(0,0,-1),s.lookAt(0,1,0),l.up.set(0,0,1),l.lookAt(0,-1,0),c.up.set(0,1,0),c.lookAt(0,0,1),u.up.set(0,1,0),u.lookAt(0,0,-1);else if(e===Ba)n.up.set(0,-1,0),n.lookAt(-1,0,0),i.up.set(0,-1,0),i.lookAt(1,0,0),s.up.set(0,0,1),s.lookAt(0,1,0),l.up.set(0,0,-1),l.lookAt(0,-1,0),c.up.set(0,-1,0),c.lookAt(0,0,1),u.up.set(0,-1,0),u.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(const h of t)this.add(h),h.updateMatrixWorld()}update(e,t){this.parent===null&&this.updateMatrixWorld();const{renderTarget:n,activeMipmapLevel:i}=this;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[s,l,c,u,h,f]=this.children,p=e.getRenderTarget(),g=e.getActiveCubeFace(),m=e.getActiveMipmapLevel(),y=e.xr.enabled;e.xr.enabled=!1;const M=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0,i),e.render(t,s),e.setRenderTarget(n,1,i),e.render(t,l),e.setRenderTarget(n,2,i),e.render(t,c),e.setRenderTarget(n,3,i),e.render(t,u),e.setRenderTarget(n,4,i),e.render(t,h),n.texture.generateMipmaps=M,e.setRenderTarget(n,5,i),e.render(t,f),e.setRenderTarget(p,g,m),e.xr.enabled=y,n.texture.needsPMREMUpdate=!0}}class $a extends Xt{constructor(e,t,n,i,s,l,c,u,h,f){e=e!==void 0?e:[],t=t!==void 0?t:ur,super(e,t,n,i,s,l,c,u,h,f),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class _v extends Ei{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const n={width:e,height:e,depth:1},i=[n,n,n,n,n,n];this.texture=new $a(i,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:rn}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new Cs(5,5,5),s=new Ti({name:"CubemapFromEquirect",uniforms:Io(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:An,blending:lr});s.uniforms.tEquirect.value=t;const l=new sn(i,s),c=t.minFilter;return t.minFilter===zi&&(t.minFilter=rn),new gv(1,10,this).update(e,l),t.minFilter=c,l.geometry.dispose(),l.material.dispose(),this}clear(e,t,n,i){const s=e.getRenderTarget();for(let l=0;l<6;l++)e.setRenderTarget(this,l),e.clear(t,n,i);e.setRenderTarget(s)}}const ff=new N,fM=new N,dM=new ft;class rr{constructor(e=new N(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,i){return this.normal.set(e,t,n),this.constant=i,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const i=ff.subVectors(n,t).cross(fM.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(i,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const n=e.delta(ff),i=this.normal.dot(n);if(i===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const s=-(e.start.dot(this.normal)+this.constant)/i;return s<0||s>1?null:t.copy(e.start).addScaledVector(n,s)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||dM.getNormalMatrix(e),i=this.coplanarPoint(ff).applyMatrix4(e),s=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(s),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const Qr=new Cn,yc=new N;class el{constructor(e=new rr,t=new rr,n=new rr,i=new rr,s=new rr,l=new rr){this.planes=[e,t,n,i,s,l]}set(e,t,n,i,s,l){const c=this.planes;return c[0].copy(e),c[1].copy(t),c[2].copy(n),c[3].copy(i),c[4].copy(s),c[5].copy(l),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e,t=Bi){const n=this.planes,i=e.elements,s=i[0],l=i[1],c=i[2],u=i[3],h=i[4],f=i[5],p=i[6],g=i[7],m=i[8],y=i[9],M=i[10],x=i[11],v=i[12],E=i[13],w=i[14],A=i[15];if(n[0].setComponents(u-s,g-h,x-m,A-v).normalize(),n[1].setComponents(u+s,g+h,x+m,A+v).normalize(),n[2].setComponents(u+l,g+f,x+y,A+E).normalize(),n[3].setComponents(u-l,g-f,x-y,A-E).normalize(),n[4].setComponents(u-c,g-p,x-M,A-w).normalize(),t===Bi)n[5].setComponents(u+c,g+p,x+M,A+w).normalize();else if(t===Ba)n[5].setComponents(c,p,M,w).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);return this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),Qr.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;t.boundingSphere===null&&t.computeBoundingSphere(),Qr.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(Qr)}intersectsSprite(e){return Qr.center.set(0,0,0),Qr.radius=.7071067811865476,Qr.applyMatrix4(e.matrixWorld),this.intersectsSphere(Qr)}intersectsSphere(e){const t=this.planes,n=e.center,i=-e.radius;for(let s=0;s<6;s++)if(t[s].distanceToPoint(n)<i)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const i=t[n];if(yc.x=i.normal.x>0?e.max.x:e.min.x,yc.y=i.normal.y>0?e.max.y:e.min.y,yc.z=i.normal.z>0?e.max.z:e.min.z,i.distanceToPoint(yc)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function vv(){let r=null,e=!1,t=null,n=null;function i(s,l){t(s,l),n=r.requestAnimationFrame(i)}return{start:function(){e!==!0&&t!==null&&(n=r.requestAnimationFrame(i),e=!0)},stop:function(){r.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(s){t=s},setContext:function(s){r=s}}}function pM(r){const e=new WeakMap;function t(c,u){const h=c.array,f=c.usage,p=h.byteLength,g=r.createBuffer();r.bindBuffer(u,g),r.bufferData(u,h,f),c.onUploadCallback();let m;if(h instanceof Float32Array)m=r.FLOAT;else if(h instanceof Uint16Array)c.isFloat16BufferAttribute?m=r.HALF_FLOAT:m=r.UNSIGNED_SHORT;else if(h instanceof Int16Array)m=r.SHORT;else if(h instanceof Uint32Array)m=r.UNSIGNED_INT;else if(h instanceof Int32Array)m=r.INT;else if(h instanceof Int8Array)m=r.BYTE;else if(h instanceof Uint8Array)m=r.UNSIGNED_BYTE;else if(h instanceof Uint8ClampedArray)m=r.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+h);return{buffer:g,type:m,bytesPerElement:h.BYTES_PER_ELEMENT,version:c.version,size:p}}function n(c,u,h){const f=u.array,p=u._updateRange,g=u.updateRanges;if(r.bindBuffer(h,c),p.count===-1&&g.length===0&&r.bufferSubData(h,0,f),g.length!==0){for(let m=0,y=g.length;m<y;m++){const M=g[m];r.bufferSubData(h,M.start*f.BYTES_PER_ELEMENT,f,M.start,M.count)}u.clearUpdateRanges()}p.count!==-1&&(r.bufferSubData(h,p.offset*f.BYTES_PER_ELEMENT,f,p.offset,p.count),p.count=-1),u.onUploadCallback()}function i(c){return c.isInterleavedBufferAttribute&&(c=c.data),e.get(c)}function s(c){c.isInterleavedBufferAttribute&&(c=c.data);const u=e.get(c);u&&(r.deleteBuffer(u.buffer),e.delete(c))}function l(c,u){if(c.isGLBufferAttribute){const f=e.get(c);(!f||f.version<c.version)&&e.set(c,{buffer:c.buffer,type:c.type,bytesPerElement:c.elementSize,version:c.version});return}c.isInterleavedBufferAttribute&&(c=c.data);const h=e.get(c);if(h===void 0)e.set(c,t(c,u));else if(h.version<c.version){if(h.size!==c.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");n(h.buffer,c,u),h.version=c.version}}return{get:i,remove:s,update:l}}class Oo extends _t{constructor(e=1,t=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:i};const s=e/2,l=t/2,c=Math.floor(n),u=Math.floor(i),h=c+1,f=u+1,p=e/c,g=t/u,m=[],y=[],M=[],x=[];for(let v=0;v<f;v++){const E=v*g-l;for(let w=0;w<h;w++){const A=w*p-s;y.push(A,-E,0),M.push(0,0,1),x.push(w/c),x.push(1-v/u)}}for(let v=0;v<u;v++)for(let E=0;E<c;E++){const w=E+h*v,A=E+h*(v+1),U=E+1+h*(v+1),I=E+1+h*v;m.push(w,A,I),m.push(A,U,I)}this.setIndex(m),this.setAttribute("position",new ke(y,3)),this.setAttribute("normal",new ke(M,3)),this.setAttribute("uv",new ke(x,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Oo(e.width,e.height,e.widthSegments,e.heightSegments)}}var mM=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,gM=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,_M=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,vM=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,yM=`#ifdef USE_ALPHATEST
	#ifdef ALPHA_TO_COVERAGE
	diffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );
	if ( diffuseColor.a == 0.0 ) discard;
	#else
	if ( diffuseColor.a < alphaTest ) discard;
	#endif
#endif`,xM=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,SM=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_CLEARCOAT ) 
		clearcoatSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_SHEEN ) 
		sheenSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,MM=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,wM=`#ifdef USE_BATCHING
	attribute float batchId;
	uniform highp sampler2D batchingTexture;
	mat4 getBatchingMatrix( const in float i ) {
		int size = textureSize( batchingTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,EM=`#ifdef USE_BATCHING
	mat4 batchingMatrix = getBatchingMatrix( batchId );
#endif`,TM=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,AM=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,bM=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,CM=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,RM=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );
		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,PM=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#ifdef ALPHA_TO_COVERAGE
		float distanceToPlane, distanceGradient;
		float clipOpacity = 1.0;
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
			distanceGradient = fwidth( distanceToPlane ) / 2.0;
			clipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			if ( clipOpacity == 0.0 ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			float unionClipOpacity = 1.0;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
				distanceGradient = fwidth( distanceToPlane ) / 2.0;
				unionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			}
			#pragma unroll_loop_end
			clipOpacity *= 1.0 - unionClipOpacity;
		#endif
		diffuseColor.a *= clipOpacity;
		if ( diffuseColor.a == 0.0 ) discard;
	#else
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			bool clipped = true;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
			}
			#pragma unroll_loop_end
			if ( clipped ) discard;
		#endif
	#endif
#endif`,IM=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,LM=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,DM=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,NM=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,UM=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,OM=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,FM=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,zM=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );
	return dot( weights, rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,BM=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,kM=`vec3 transformedNormal = objectNormal;
#ifdef USE_TANGENT
	vec3 transformedTangent = objectTangent;
#endif
#ifdef USE_BATCHING
	mat3 bm = mat3( batchingMatrix );
	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );
	transformedNormal = bm * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = bm * transformedTangent;
	#endif
#endif
#ifdef USE_INSTANCING
	mat3 im = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );
	transformedNormal = im * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = im * transformedTangent;
	#endif
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,HM=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,VM=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,GM=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,WM=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,XM="gl_FragColor = linearToOutputTexel( gl_FragColor );",YM=`
const mat3 LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = mat3(
	vec3( 0.8224621, 0.177538, 0.0 ),
	vec3( 0.0331941, 0.9668058, 0.0 ),
	vec3( 0.0170827, 0.0723974, 0.9105199 )
);
const mat3 LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = mat3(
	vec3( 1.2249401, - 0.2249404, 0.0 ),
	vec3( - 0.0420569, 1.0420571, 0.0 ),
	vec3( - 0.0196376, - 0.0786361, 1.0982735 )
);
vec4 LinearSRGBToLinearDisplayP3( in vec4 value ) {
	return vec4( value.rgb * LINEAR_SRGB_TO_LINEAR_DISPLAY_P3, value.a );
}
vec4 LinearDisplayP3ToLinearSRGB( in vec4 value ) {
	return vec4( value.rgb * LINEAR_DISPLAY_P3_TO_LINEAR_SRGB, value.a );
}
vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}
vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return sRGBTransferOETF( value );
}`,qM=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,ZM=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform mat3 envMapRotation;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,jM=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,JM=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,KM=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,QM=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,$M=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,e1=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,t1=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,n1=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,i1=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,r1=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,s1=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,o1=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( LEGACY_LIGHTS )
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#else
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,a1=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,l1=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,c1=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,u1=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,h1=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,f1=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_DISPERSION
	material.dispersion = dispersion;
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	if( material.anisotropy == 0.0 ) {
		anisotropyV = vec2( 1.0, 0.0 );
	} else {
		anisotropyV /= material.anisotropy;
		material.anisotropy = saturate( material.anisotropy );
	}
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;
#endif`,d1=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	float dispersion;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecularDirect = vec3( 0.0 );
vec3 clearcoatSpecularIndirect = vec3( 0.0 );
vec3 sheenSpecularDirect = vec3( 0.0 );
vec3 sheenSpecularIndirect = vec3(0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,p1=`
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal = vec3( 0.0 );
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,m1=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,g1=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,_1=`#if defined( USE_LOGDEPTHBUF )
	gl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,v1=`#if defined( USE_LOGDEPTHBUF )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,y1=`#ifdef USE_LOGDEPTHBUF
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,x1=`#ifdef USE_LOGDEPTHBUF
	vFragDepth = 1.0 + gl_Position.w;
	vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
#endif`,S1=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,M1=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,w1=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,E1=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,T1=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,A1=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,b1=`#ifdef USE_INSTANCING_MORPH
	float morphTargetInfluences[MORPHTARGETS_COUNT];
	float morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		morphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;
	}
#endif`,C1=`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,R1=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,P1=`#ifdef USE_MORPHTARGETS
	#ifndef USE_INSTANCING_MORPH
		uniform float morphTargetBaseInfluence;
	#endif
	#ifdef MORPHTARGETS_TEXTURE
		#ifndef USE_INSTANCING_MORPH
			uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		#endif
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,I1=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,L1=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,D1=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,N1=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,U1=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,O1=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,F1=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,z1=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,B1=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,k1=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,H1=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,V1=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,G1=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec2 packDepthToRG( in highp float v ) {
	return packDepthToRGBA( v ).yx;
}
float unpackRGToDepth( const in highp vec2 v ) {
	return unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,W1=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,X1=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_BATCHING
	mvPosition = batchingMatrix * mvPosition;
#endif
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,Y1=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,q1=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,Z1=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,j1=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,J1=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		float shadow = 1.0;
		vec3 lightToPosition = shadowCoord.xyz;
		
		float lightToPositionLength = length( lightToPosition );
		if ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {
			float dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );			dp += shadowBias;
			vec3 bd3D = normalize( lightToPosition );
			vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
			#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
				vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
				shadow = (
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
				) * ( 1.0 / 9.0 );
			#else
				shadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
			#endif
		}
		return shadow;
	}
#endif`,K1=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,Q1=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,$1=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,ew=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,tw=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	mat4 getBoneMatrix( const in float i ) {
		int size = textureSize( boneTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,nw=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,iw=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,rw=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,sw=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,ow=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,aw=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
const mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(
	vec3( 1.6605, - 0.1246, - 0.0182 ),
	vec3( - 0.5876, 1.1329, - 0.1006 ),
	vec3( - 0.0728, - 0.0083, 1.1187 )
);
const mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(
	vec3( 0.6274, 0.0691, 0.0164 ),
	vec3( 0.3293, 0.9195, 0.0880 ),
	vec3( 0.0433, 0.0113, 0.8956 )
);
vec3 agxDefaultContrastApprox( vec3 x ) {
	vec3 x2 = x * x;
	vec3 x4 = x2 * x2;
	return + 15.5 * x4 * x2
		- 40.14 * x4 * x
		+ 31.96 * x4
		- 6.868 * x2 * x
		+ 0.4298 * x2
		+ 0.1191 * x
		- 0.00232;
}
vec3 AgXToneMapping( vec3 color ) {
	const mat3 AgXInsetMatrix = mat3(
		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),
		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),
		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )
	);
	const mat3 AgXOutsetMatrix = mat3(
		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),
		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),
		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )
	);
	const float AgxMinEv = - 12.47393;	const float AgxMaxEv = 4.026069;
	color *= toneMappingExposure;
	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;
	color = AgXInsetMatrix * color;
	color = max( color, 1e-10 );	color = log2( color );
	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );
	color = clamp( color, 0.0, 1.0 );
	color = agxDefaultContrastApprox( color );
	color = AgXOutsetMatrix * color;
	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );
	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;
	color = clamp( color, 0.0, 1.0 );
	return color;
}
vec3 NeutralToneMapping( vec3 color ) {
	const float StartCompression = 0.8 - 0.04;
	const float Desaturation = 0.15;
	color *= toneMappingExposure;
	float x = min( color.r, min( color.g, color.b ) );
	float offset = x < 0.08 ? x - 6.25 * x * x : 0.04;
	color -= offset;
	float peak = max( color.r, max( color.g, color.b ) );
	if ( peak < StartCompression ) return color;
	float d = 1. - StartCompression;
	float newPeak = 1. - d * d / ( peak + d - StartCompression );
	color *= newPeak / peak;
	float g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );
	return mix( color, vec3( newPeak ), g );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,lw=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,cw=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec4 transmittedLight;
		vec3 transmittance;
		#ifdef USE_DISPERSION
			float halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;
			vec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );
			for ( int i = 0; i < 3; i ++ ) {
				vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );
				vec3 refractedRayExit = position + transmissionRay;
		
				vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
				vec2 refractionCoords = ndcPos.xy / ndcPos.w;
				refractionCoords += 1.0;
				refractionCoords /= 2.0;
		
				vec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );
				transmittedLight[ i ] = transmissionSample[ i ];
				transmittedLight.a += transmissionSample.a;
				transmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];
			}
			transmittedLight.a /= 3.0;
		
		#else
		
			vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
			vec3 refractedRayExit = position + transmissionRay;
			vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
			vec2 refractionCoords = ndcPos.xy / ndcPos.w;
			refractionCoords += 1.0;
			refractionCoords /= 2.0;
			transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
			transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		
		#endif
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,uw=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,hw=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,fw=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,dw=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_BATCHING
		worldPosition = batchingMatrix * worldPosition;
	#endif
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const pw=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,mw=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,gw=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,_w=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
uniform mat3 backgroundRotation;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,vw=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,yw=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,xw=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,Sw=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,Mw=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,ww=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,Ew=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,Tw=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,Aw=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,bw=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,Cw=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,Rw=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Pw=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Iw=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Lw=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,Dw=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Nw=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,Uw=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,Ow=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Fw=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,zw=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,Bw=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_DISPERSION
	uniform float dispersion;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,kw=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Hw=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Vw=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,Gw=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,Ww=`#include <common>
#include <batching_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Xw=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,Yw=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,qw=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,gt={alphahash_fragment:mM,alphahash_pars_fragment:gM,alphamap_fragment:_M,alphamap_pars_fragment:vM,alphatest_fragment:yM,alphatest_pars_fragment:xM,aomap_fragment:SM,aomap_pars_fragment:MM,batching_pars_vertex:wM,batching_vertex:EM,begin_vertex:TM,beginnormal_vertex:AM,bsdfs:bM,iridescence_fragment:CM,bumpmap_pars_fragment:RM,clipping_planes_fragment:PM,clipping_planes_pars_fragment:IM,clipping_planes_pars_vertex:LM,clipping_planes_vertex:DM,color_fragment:NM,color_pars_fragment:UM,color_pars_vertex:OM,color_vertex:FM,common:zM,cube_uv_reflection_fragment:BM,defaultnormal_vertex:kM,displacementmap_pars_vertex:HM,displacementmap_vertex:VM,emissivemap_fragment:GM,emissivemap_pars_fragment:WM,colorspace_fragment:XM,colorspace_pars_fragment:YM,envmap_fragment:qM,envmap_common_pars_fragment:ZM,envmap_pars_fragment:jM,envmap_pars_vertex:JM,envmap_physical_pars_fragment:a1,envmap_vertex:KM,fog_vertex:QM,fog_pars_vertex:$M,fog_fragment:e1,fog_pars_fragment:t1,gradientmap_pars_fragment:n1,lightmap_pars_fragment:i1,lights_lambert_fragment:r1,lights_lambert_pars_fragment:s1,lights_pars_begin:o1,lights_toon_fragment:l1,lights_toon_pars_fragment:c1,lights_phong_fragment:u1,lights_phong_pars_fragment:h1,lights_physical_fragment:f1,lights_physical_pars_fragment:d1,lights_fragment_begin:p1,lights_fragment_maps:m1,lights_fragment_end:g1,logdepthbuf_fragment:_1,logdepthbuf_pars_fragment:v1,logdepthbuf_pars_vertex:y1,logdepthbuf_vertex:x1,map_fragment:S1,map_pars_fragment:M1,map_particle_fragment:w1,map_particle_pars_fragment:E1,metalnessmap_fragment:T1,metalnessmap_pars_fragment:A1,morphinstance_vertex:b1,morphcolor_vertex:C1,morphnormal_vertex:R1,morphtarget_pars_vertex:P1,morphtarget_vertex:I1,normal_fragment_begin:L1,normal_fragment_maps:D1,normal_pars_fragment:N1,normal_pars_vertex:U1,normal_vertex:O1,normalmap_pars_fragment:F1,clearcoat_normal_fragment_begin:z1,clearcoat_normal_fragment_maps:B1,clearcoat_pars_fragment:k1,iridescence_pars_fragment:H1,opaque_fragment:V1,packing:G1,premultiplied_alpha_fragment:W1,project_vertex:X1,dithering_fragment:Y1,dithering_pars_fragment:q1,roughnessmap_fragment:Z1,roughnessmap_pars_fragment:j1,shadowmap_pars_fragment:J1,shadowmap_pars_vertex:K1,shadowmap_vertex:Q1,shadowmask_pars_fragment:$1,skinbase_vertex:ew,skinning_pars_vertex:tw,skinning_vertex:nw,skinnormal_vertex:iw,specularmap_fragment:rw,specularmap_pars_fragment:sw,tonemapping_fragment:ow,tonemapping_pars_fragment:aw,transmission_fragment:lw,transmission_pars_fragment:cw,uv_pars_fragment:uw,uv_pars_vertex:hw,uv_vertex:fw,worldpos_vertex:dw,background_vert:pw,background_frag:mw,backgroundCube_vert:gw,backgroundCube_frag:_w,cube_vert:vw,cube_frag:yw,depth_vert:xw,depth_frag:Sw,distanceRGBA_vert:Mw,distanceRGBA_frag:ww,equirect_vert:Ew,equirect_frag:Tw,linedashed_vert:Aw,linedashed_frag:bw,meshbasic_vert:Cw,meshbasic_frag:Rw,meshlambert_vert:Pw,meshlambert_frag:Iw,meshmatcap_vert:Lw,meshmatcap_frag:Dw,meshnormal_vert:Nw,meshnormal_frag:Uw,meshphong_vert:Ow,meshphong_frag:Fw,meshphysical_vert:zw,meshphysical_frag:Bw,meshtoon_vert:kw,meshtoon_frag:Hw,points_vert:Vw,points_frag:Gw,shadow_vert:Ww,shadow_frag:Xw,sprite_vert:Yw,sprite_frag:qw},Ce={common:{diffuse:{value:new Oe(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new ft},alphaMap:{value:null},alphaMapTransform:{value:new ft},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new ft}},envmap:{envMap:{value:null},envMapRotation:{value:new ft},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new ft}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new ft}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new ft},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new ft},normalScale:{value:new ce(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new ft},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new ft}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new ft}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new ft}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Oe(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Oe(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new ft},alphaTest:{value:0},uvTransform:{value:new ft}},sprite:{diffuse:{value:new Oe(16777215)},opacity:{value:1},center:{value:new ce(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new ft},alphaMap:{value:null},alphaMapTransform:{value:new ft},alphaTest:{value:0}}},wi={basic:{uniforms:Nn([Ce.common,Ce.specularmap,Ce.envmap,Ce.aomap,Ce.lightmap,Ce.fog]),vertexShader:gt.meshbasic_vert,fragmentShader:gt.meshbasic_frag},lambert:{uniforms:Nn([Ce.common,Ce.specularmap,Ce.envmap,Ce.aomap,Ce.lightmap,Ce.emissivemap,Ce.bumpmap,Ce.normalmap,Ce.displacementmap,Ce.fog,Ce.lights,{emissive:{value:new Oe(0)}}]),vertexShader:gt.meshlambert_vert,fragmentShader:gt.meshlambert_frag},phong:{uniforms:Nn([Ce.common,Ce.specularmap,Ce.envmap,Ce.aomap,Ce.lightmap,Ce.emissivemap,Ce.bumpmap,Ce.normalmap,Ce.displacementmap,Ce.fog,Ce.lights,{emissive:{value:new Oe(0)},specular:{value:new Oe(1118481)},shininess:{value:30}}]),vertexShader:gt.meshphong_vert,fragmentShader:gt.meshphong_frag},standard:{uniforms:Nn([Ce.common,Ce.envmap,Ce.aomap,Ce.lightmap,Ce.emissivemap,Ce.bumpmap,Ce.normalmap,Ce.displacementmap,Ce.roughnessmap,Ce.metalnessmap,Ce.fog,Ce.lights,{emissive:{value:new Oe(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:gt.meshphysical_vert,fragmentShader:gt.meshphysical_frag},toon:{uniforms:Nn([Ce.common,Ce.aomap,Ce.lightmap,Ce.emissivemap,Ce.bumpmap,Ce.normalmap,Ce.displacementmap,Ce.gradientmap,Ce.fog,Ce.lights,{emissive:{value:new Oe(0)}}]),vertexShader:gt.meshtoon_vert,fragmentShader:gt.meshtoon_frag},matcap:{uniforms:Nn([Ce.common,Ce.bumpmap,Ce.normalmap,Ce.displacementmap,Ce.fog,{matcap:{value:null}}]),vertexShader:gt.meshmatcap_vert,fragmentShader:gt.meshmatcap_frag},points:{uniforms:Nn([Ce.points,Ce.fog]),vertexShader:gt.points_vert,fragmentShader:gt.points_frag},dashed:{uniforms:Nn([Ce.common,Ce.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:gt.linedashed_vert,fragmentShader:gt.linedashed_frag},depth:{uniforms:Nn([Ce.common,Ce.displacementmap]),vertexShader:gt.depth_vert,fragmentShader:gt.depth_frag},normal:{uniforms:Nn([Ce.common,Ce.bumpmap,Ce.normalmap,Ce.displacementmap,{opacity:{value:1}}]),vertexShader:gt.meshnormal_vert,fragmentShader:gt.meshnormal_frag},sprite:{uniforms:Nn([Ce.sprite,Ce.fog]),vertexShader:gt.sprite_vert,fragmentShader:gt.sprite_frag},background:{uniforms:{uvTransform:{value:new ft},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:gt.background_vert,fragmentShader:gt.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new ft}},vertexShader:gt.backgroundCube_vert,fragmentShader:gt.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:gt.cube_vert,fragmentShader:gt.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:gt.equirect_vert,fragmentShader:gt.equirect_frag},distanceRGBA:{uniforms:Nn([Ce.common,Ce.displacementmap,{referencePosition:{value:new N},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:gt.distanceRGBA_vert,fragmentShader:gt.distanceRGBA_frag},shadow:{uniforms:Nn([Ce.lights,Ce.fog,{color:{value:new Oe(0)},opacity:{value:1}}]),vertexShader:gt.shadow_vert,fragmentShader:gt.shadow_frag}};wi.physical={uniforms:Nn([wi.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new ft},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new ft},clearcoatNormalScale:{value:new ce(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new ft},dispersion:{value:0},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new ft},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new ft},sheen:{value:0},sheenColor:{value:new Oe(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new ft},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new ft},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new ft},transmissionSamplerSize:{value:new ce},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new ft},attenuationDistance:{value:0},attenuationColor:{value:new Oe(0)},specularColor:{value:new Oe(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new ft},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new ft},anisotropyVector:{value:new ce},anisotropyMap:{value:null},anisotropyMapTransform:{value:new ft}}]),vertexShader:gt.meshphysical_vert,fragmentShader:gt.meshphysical_frag};const xc={r:0,b:0,g:0},$r=new ei,Zw=new et;function jw(r,e,t,n,i,s,l){const c=new Oe(0);let u=s===!0?0:1,h,f,p=null,g=0,m=null;function y(E){let w=E.isScene===!0?E.background:null;return w&&w.isTexture&&(w=(E.backgroundBlurriness>0?t:e).get(w)),w}function M(E){let w=!1;const A=y(E);A===null?v(c,u):A&&A.isColor&&(v(A,1),w=!0);const U=r.xr.getEnvironmentBlendMode();U==="additive"?n.buffers.color.setClear(0,0,0,1,l):U==="alpha-blend"&&n.buffers.color.setClear(0,0,0,0,l),(r.autoClear||w)&&r.clear(r.autoClearColor,r.autoClearDepth,r.autoClearStencil)}function x(E,w){const A=y(w);A&&(A.isCubeTexture||A.mapping===No)?(f===void 0&&(f=new sn(new Cs(1,1,1),new Ti({name:"BackgroundCubeMaterial",uniforms:Io(wi.backgroundCube.uniforms),vertexShader:wi.backgroundCube.vertexShader,fragmentShader:wi.backgroundCube.fragmentShader,side:An,depthTest:!1,depthWrite:!1,fog:!1})),f.geometry.deleteAttribute("normal"),f.geometry.deleteAttribute("uv"),f.onBeforeRender=function(U,I,L){this.matrixWorld.copyPosition(L.matrixWorld)},Object.defineProperty(f.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(f)),$r.copy(w.backgroundRotation),$r.x*=-1,$r.y*=-1,$r.z*=-1,A.isCubeTexture&&A.isRenderTargetTexture===!1&&($r.y*=-1,$r.z*=-1),f.material.uniforms.envMap.value=A,f.material.uniforms.flipEnvMap.value=A.isCubeTexture&&A.isRenderTargetTexture===!1?-1:1,f.material.uniforms.backgroundBlurriness.value=w.backgroundBlurriness,f.material.uniforms.backgroundIntensity.value=w.backgroundIntensity,f.material.uniforms.backgroundRotation.value.setFromMatrix4(Zw.makeRotationFromEuler($r)),f.material.toneMapped=Pt.getTransfer(A.colorSpace)!==Ot,(p!==A||g!==A.version||m!==r.toneMapping)&&(f.material.needsUpdate=!0,p=A,g=A.version,m=r.toneMapping),f.layers.enableAll(),E.unshift(f,f.geometry,f.material,0,0,null)):A&&A.isTexture&&(h===void 0&&(h=new sn(new Oo(2,2),new Ti({name:"BackgroundMaterial",uniforms:Io(wi.background.uniforms),vertexShader:wi.background.vertexShader,fragmentShader:wi.background.fragmentShader,side:cr,depthTest:!1,depthWrite:!1,fog:!1})),h.geometry.deleteAttribute("normal"),Object.defineProperty(h.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(h)),h.material.uniforms.t2D.value=A,h.material.uniforms.backgroundIntensity.value=w.backgroundIntensity,h.material.toneMapped=Pt.getTransfer(A.colorSpace)!==Ot,A.matrixAutoUpdate===!0&&A.updateMatrix(),h.material.uniforms.uvTransform.value.copy(A.matrix),(p!==A||g!==A.version||m!==r.toneMapping)&&(h.material.needsUpdate=!0,p=A,g=A.version,m=r.toneMapping),h.layers.enableAll(),E.unshift(h,h.geometry,h.material,0,0,null))}function v(E,w){E.getRGB(xc,pv(r)),n.buffers.color.setClear(xc.r,xc.g,xc.b,w,l)}return{getClearColor:function(){return c},setClearColor:function(E,w=1){c.set(E),u=w,v(c,u)},getClearAlpha:function(){return u},setClearAlpha:function(E){u=E,v(c,u)},render:M,addToRenderList:x}}function Jw(r,e){const t=r.getParameter(r.MAX_VERTEX_ATTRIBS),n={},i=g(null);let s=i,l=!1;function c(b,z,Y,k,J){let se=!1;const le=p(k,Y,z);s!==le&&(s=le,h(s.object)),se=m(b,k,Y,J),se&&y(b,k,Y,J),J!==null&&e.update(J,r.ELEMENT_ARRAY_BUFFER),(se||l)&&(l=!1,A(b,z,Y,k),J!==null&&r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,e.get(J).buffer))}function u(){return r.createVertexArray()}function h(b){return r.bindVertexArray(b)}function f(b){return r.deleteVertexArray(b)}function p(b,z,Y){const k=Y.wireframe===!0;let J=n[b.id];J===void 0&&(J={},n[b.id]=J);let se=J[z.id];se===void 0&&(se={},J[z.id]=se);let le=se[k];return le===void 0&&(le=g(u()),se[k]=le),le}function g(b){const z=[],Y=[],k=[];for(let J=0;J<t;J++)z[J]=0,Y[J]=0,k[J]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:z,enabledAttributes:Y,attributeDivisors:k,object:b,attributes:{},index:null}}function m(b,z,Y,k){const J=s.attributes,se=z.attributes;let le=0;const xe=Y.getAttributes();for(const H in xe)if(xe[H].location>=0){const j=J[H];let fe=se[H];if(fe===void 0&&(H==="instanceMatrix"&&b.instanceMatrix&&(fe=b.instanceMatrix),H==="instanceColor"&&b.instanceColor&&(fe=b.instanceColor)),j===void 0||j.attribute!==fe||fe&&j.data!==fe.data)return!0;le++}return s.attributesNum!==le||s.index!==k}function y(b,z,Y,k){const J={},se=z.attributes;let le=0;const xe=Y.getAttributes();for(const H in xe)if(xe[H].location>=0){let j=se[H];j===void 0&&(H==="instanceMatrix"&&b.instanceMatrix&&(j=b.instanceMatrix),H==="instanceColor"&&b.instanceColor&&(j=b.instanceColor));const fe={};fe.attribute=j,j&&j.data&&(fe.data=j.data),J[H]=fe,le++}s.attributes=J,s.attributesNum=le,s.index=k}function M(){const b=s.newAttributes;for(let z=0,Y=b.length;z<Y;z++)b[z]=0}function x(b){v(b,0)}function v(b,z){const Y=s.newAttributes,k=s.enabledAttributes,J=s.attributeDivisors;Y[b]=1,k[b]===0&&(r.enableVertexAttribArray(b),k[b]=1),J[b]!==z&&(r.vertexAttribDivisor(b,z),J[b]=z)}function E(){const b=s.newAttributes,z=s.enabledAttributes;for(let Y=0,k=z.length;Y<k;Y++)z[Y]!==b[Y]&&(r.disableVertexAttribArray(Y),z[Y]=0)}function w(b,z,Y,k,J,se,le){le===!0?r.vertexAttribIPointer(b,z,Y,J,se):r.vertexAttribPointer(b,z,Y,k,J,se)}function A(b,z,Y,k){M();const J=k.attributes,se=Y.getAttributes(),le=z.defaultAttributeValues;for(const xe in se){const H=se[xe];if(H.location>=0){let te=J[xe];if(te===void 0&&(xe==="instanceMatrix"&&b.instanceMatrix&&(te=b.instanceMatrix),xe==="instanceColor"&&b.instanceColor&&(te=b.instanceColor)),te!==void 0){const j=te.normalized,fe=te.itemSize,Le=e.get(te);if(Le===void 0)continue;const Be=Le.buffer,ne=Le.type,_e=Le.bytesPerElement,Re=ne===r.INT||ne===r.UNSIGNED_INT||te.gpuType===kd;if(te.isInterleavedBufferAttribute){const ye=te.data,nt=ye.stride,it=te.offset;if(ye.isInstancedInterleavedBuffer){for(let W=0;W<H.locationSize;W++)v(H.location+W,ye.meshPerAttribute);b.isInstancedMesh!==!0&&k._maxInstanceCount===void 0&&(k._maxInstanceCount=ye.meshPerAttribute*ye.count)}else for(let W=0;W<H.locationSize;W++)x(H.location+W);r.bindBuffer(r.ARRAY_BUFFER,Be);for(let W=0;W<H.locationSize;W++)w(H.location+W,fe/H.locationSize,ne,j,nt*_e,(it+fe/H.locationSize*W)*_e,Re)}else{if(te.isInstancedBufferAttribute){for(let ye=0;ye<H.locationSize;ye++)v(H.location+ye,te.meshPerAttribute);b.isInstancedMesh!==!0&&k._maxInstanceCount===void 0&&(k._maxInstanceCount=te.meshPerAttribute*te.count)}else for(let ye=0;ye<H.locationSize;ye++)x(H.location+ye);r.bindBuffer(r.ARRAY_BUFFER,Be);for(let ye=0;ye<H.locationSize;ye++)w(H.location+ye,fe/H.locationSize,ne,j,fe*_e,fe/H.locationSize*ye*_e,Re)}}else if(le!==void 0){const j=le[xe];if(j!==void 0)switch(j.length){case 2:r.vertexAttrib2fv(H.location,j);break;case 3:r.vertexAttrib3fv(H.location,j);break;case 4:r.vertexAttrib4fv(H.location,j);break;default:r.vertexAttrib1fv(H.location,j)}}}}E()}function U(){B();for(const b in n){const z=n[b];for(const Y in z){const k=z[Y];for(const J in k)f(k[J].object),delete k[J];delete z[Y]}delete n[b]}}function I(b){if(n[b.id]===void 0)return;const z=n[b.id];for(const Y in z){const k=z[Y];for(const J in k)f(k[J].object),delete k[J];delete z[Y]}delete n[b.id]}function L(b){for(const z in n){const Y=n[z];if(Y[b.id]===void 0)continue;const k=Y[b.id];for(const J in k)f(k[J].object),delete k[J];delete Y[b.id]}}function B(){R(),l=!0,s!==i&&(s=i,h(s.object))}function R(){i.geometry=null,i.program=null,i.wireframe=!1}return{setup:c,reset:B,resetDefaultState:R,dispose:U,releaseStatesOfGeometry:I,releaseStatesOfProgram:L,initAttributes:M,enableAttribute:x,disableUnusedAttributes:E}}function Kw(r,e,t){let n;function i(h){n=h}function s(h,f){r.drawArrays(n,h,f),t.update(f,n,1)}function l(h,f,p){p!==0&&(r.drawArraysInstanced(n,h,f,p),t.update(f,n,p))}function c(h,f,p){if(p===0)return;const g=e.get("WEBGL_multi_draw");if(g===null)for(let m=0;m<p;m++)this.render(h[m],f[m]);else{g.multiDrawArraysWEBGL(n,h,0,f,0,p);let m=0;for(let y=0;y<p;y++)m+=f[y];t.update(m,n,1)}}function u(h,f,p,g){if(p===0)return;const m=e.get("WEBGL_multi_draw");if(m===null)for(let y=0;y<h.length;y++)l(h[y],f[y],g[y]);else{m.multiDrawArraysInstancedWEBGL(n,h,0,f,0,g,0,p);let y=0;for(let M=0;M<p;M++)y+=f[M];for(let M=0;M<g.length;M++)t.update(y,n,g[M])}}this.setMode=i,this.render=s,this.renderInstances=l,this.renderMultiDraw=c,this.renderMultiDrawInstances=u}function Qw(r,e,t,n){let i;function s(){if(i!==void 0)return i;if(e.has("EXT_texture_filter_anisotropic")===!0){const I=e.get("EXT_texture_filter_anisotropic");i=r.getParameter(I.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else i=0;return i}function l(I){return!(I!==Gn&&n.convert(I)!==r.getParameter(r.IMPLEMENTATION_COLOR_READ_FORMAT))}function c(I){const L=I===Ja&&(e.has("EXT_color_buffer_half_float")||e.has("EXT_color_buffer_float"));return!(I!==Vi&&n.convert(I)!==r.getParameter(r.IMPLEMENTATION_COLOR_READ_TYPE)&&I!==di&&!L)}function u(I){if(I==="highp"){if(r.getShaderPrecisionFormat(r.VERTEX_SHADER,r.HIGH_FLOAT).precision>0&&r.getShaderPrecisionFormat(r.FRAGMENT_SHADER,r.HIGH_FLOAT).precision>0)return"highp";I="mediump"}return I==="mediump"&&r.getShaderPrecisionFormat(r.VERTEX_SHADER,r.MEDIUM_FLOAT).precision>0&&r.getShaderPrecisionFormat(r.FRAGMENT_SHADER,r.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let h=t.precision!==void 0?t.precision:"highp";const f=u(h);f!==h&&(h=f);const p=t.logarithmicDepthBuffer===!0,g=r.getParameter(r.MAX_TEXTURE_IMAGE_UNITS),m=r.getParameter(r.MAX_VERTEX_TEXTURE_IMAGE_UNITS),y=r.getParameter(r.MAX_TEXTURE_SIZE),M=r.getParameter(r.MAX_CUBE_MAP_TEXTURE_SIZE),x=r.getParameter(r.MAX_VERTEX_ATTRIBS),v=r.getParameter(r.MAX_VERTEX_UNIFORM_VECTORS),E=r.getParameter(r.MAX_VARYING_VECTORS),w=r.getParameter(r.MAX_FRAGMENT_UNIFORM_VECTORS),A=m>0,U=r.getParameter(r.MAX_SAMPLES);return{isWebGL2:!0,getMaxAnisotropy:s,getMaxPrecision:u,textureFormatReadable:l,textureTypeReadable:c,precision:h,logarithmicDepthBuffer:p,maxTextures:g,maxVertexTextures:m,maxTextureSize:y,maxCubemapSize:M,maxAttributes:x,maxVertexUniforms:v,maxVaryings:E,maxFragmentUniforms:w,vertexTextures:A,maxSamples:U}}function $w(r){const e=this;let t=null,n=0,i=!1,s=!1;const l=new rr,c=new ft,u={value:null,needsUpdate:!1};this.uniform=u,this.numPlanes=0,this.numIntersection=0,this.init=function(p,g){const m=p.length!==0||g||n!==0||i;return i=g,n=p.length,m},this.beginShadows=function(){s=!0,f(null)},this.endShadows=function(){s=!1},this.setGlobalState=function(p,g){t=f(p,g,0)},this.setState=function(p,g,m){const y=p.clippingPlanes,M=p.clipIntersection,x=p.clipShadows,v=r.get(p);if(!i||y===null||y.length===0||s&&!x)s?f(null):h();else{const E=s?0:n,w=E*4;let A=v.clippingState||null;u.value=A,A=f(y,g,w,m);for(let U=0;U!==w;++U)A[U]=t[U];v.clippingState=A,this.numIntersection=M?this.numPlanes:0,this.numPlanes+=E}};function h(){u.value!==t&&(u.value=t,u.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function f(p,g,m,y){const M=p!==null?p.length:0;let x=null;if(M!==0){if(x=u.value,y!==!0||x===null){const v=m+M*4,E=g.matrixWorldInverse;c.getNormalMatrix(E),(x===null||x.length<v)&&(x=new Float32Array(v));for(let w=0,A=m;w!==M;++w,A+=4)l.copy(p[w]).applyMatrix4(E,c),l.normal.toArray(x,A),x[A+3]=l.constant}u.value=x,u.needsUpdate=!0}return e.numPlanes=M,e.numIntersection=0,x}}function eE(r){let e=new WeakMap;function t(l,c){return c===Ca?l.mapping=ur:c===Ra&&(l.mapping=Nr),l}function n(l){if(l&&l.isTexture){const c=l.mapping;if(c===Ca||c===Ra)if(e.has(l)){const u=e.get(l).texture;return t(u,l.mapping)}else{const u=l.image;if(u&&u.height>0){const h=new _v(u.height);return h.fromEquirectangularTexture(r,l),e.set(l,h),l.addEventListener("dispose",i),t(h.texture,l.mapping)}else return null}}return l}function i(l){const c=l.target;c.removeEventListener("dispose",i);const u=e.get(c);u!==void 0&&(e.delete(c),u.dispose())}function s(){e=new WeakMap}return{get:n,dispose:s}}class tl extends Qa{constructor(e=-1,t=1,n=1,i=-1,s=.1,l=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=i,this.near=s,this.far=l,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,n,i,s,l){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=l,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let s=n-e,l=n+e,c=i+t,u=i-t;if(this.view!==null&&this.view.enabled){const h=(this.right-this.left)/this.view.fullWidth/this.zoom,f=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=h*this.view.offsetX,l=s+h*this.view.width,c-=f*this.view.offsetY,u=c-f*this.view.height}this.projectionMatrix.makeOrthographic(s,l,c,u,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}const wo=4,Mg=[.125,.215,.35,.446,.526,.582],Eo=20,df=new tl,wg=new Oe;let pf=null,mf=0,gf=0,_f=!1;const us=(1+Math.sqrt(5))/2,co=1/us,Eg=[new N(-us,co,0),new N(us,co,0),new N(-co,0,us),new N(co,0,us),new N(0,us,-co),new N(0,us,co),new N(-1,1,-1),new N(1,1,-1),new N(-1,1,1),new N(1,1,1)];class Md{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,i=100){pf=this._renderer.getRenderTarget(),mf=this._renderer.getActiveCubeFace(),gf=this._renderer.getActiveMipmapLevel(),_f=this._renderer.xr.enabled,this._renderer.xr.enabled=!1,this._setSize(256);const s=this._allocateTargets();return s.depthBuffer=!0,this._sceneToCubeUV(e,n,i,s),t>0&&this._blur(s,0,0,t),this._applyPMREM(s),this._cleanup(s),s}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=bg(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=Ag(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(pf,mf,gf),this._renderer.xr.enabled=_f,e.scissorTest=!1,Sc(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===ur||e.mapping===Nr?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),pf=this._renderer.getRenderTarget(),mf=this._renderer.getActiveCubeFace(),gf=this._renderer.getActiveMipmapLevel(),_f=this._renderer.xr.enabled,this._renderer.xr.enabled=!1;const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:rn,minFilter:rn,generateMipmaps:!1,type:Ja,format:Gn,colorSpace:fr,depthBuffer:!1},i=Tg(e,t,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=Tg(e,t,n);const{_lodMax:s}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=tE(s)),this._blurMaterial=nE(s,e,t)}return i}_compileMaterial(e){const t=new sn(this._lodPlanes[0],e);this._renderer.compile(t,df)}_sceneToCubeUV(e,t,n,i){const c=new pn(90,1,t,n),u=[1,-1,1,1,1,1],h=[1,1,1,-1,-1,-1],f=this._renderer,p=f.autoClear,g=f.toneMapping;f.getClearColor(wg),f.toneMapping=ki,f.autoClear=!1;const m=new Fr({name:"PMREM.Background",side:An,depthWrite:!1,depthTest:!1}),y=new sn(new Cs,m);let M=!1;const x=e.background;x?x.isColor&&(m.color.copy(x),e.background=null,M=!0):(m.color.copy(wg),M=!0);for(let v=0;v<6;v++){const E=v%3;E===0?(c.up.set(0,u[v],0),c.lookAt(h[v],0,0)):E===1?(c.up.set(0,0,u[v]),c.lookAt(0,h[v],0)):(c.up.set(0,u[v],0),c.lookAt(0,0,h[v]));const w=this._cubeSize;Sc(i,E*w,v>2?w:0,w,w),f.setRenderTarget(i),M&&f.render(y,c),f.render(e,c)}y.geometry.dispose(),y.material.dispose(),f.toneMapping=g,f.autoClear=p,e.background=x}_textureToCubeUV(e,t){const n=this._renderer,i=e.mapping===ur||e.mapping===Nr;i?(this._cubemapMaterial===null&&(this._cubemapMaterial=bg()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=Ag());const s=i?this._cubemapMaterial:this._equirectMaterial,l=new sn(this._lodPlanes[0],s),c=s.uniforms;c.envMap.value=e;const u=this._cubeSize;Sc(t,0,0,3*u,2*u),n.setRenderTarget(t),n.render(l,df)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;const i=this._lodPlanes.length;for(let s=1;s<i;s++){const l=Math.sqrt(this._sigmas[s]*this._sigmas[s]-this._sigmas[s-1]*this._sigmas[s-1]),c=Eg[(i-s-1)%Eg.length];this._blur(e,s-1,s,l,c)}t.autoClear=n}_blur(e,t,n,i,s){const l=this._pingPongRenderTarget;this._halfBlur(e,l,t,n,i,"latitudinal",s),this._halfBlur(l,e,n,n,i,"longitudinal",s)}_halfBlur(e,t,n,i,s,l,c){const u=this._renderer,h=this._blurMaterial,f=3,p=new sn(this._lodPlanes[i],h),g=h.uniforms,m=this._sizeLods[n]-1,y=isFinite(s)?Math.PI/(2*m):2*Math.PI/(2*Eo-1),M=s/y,x=isFinite(s)?1+Math.floor(f*M):Eo;x>Eo;const v=[];let E=0;for(let L=0;L<Eo;++L){const B=L/M,R=Math.exp(-B*B/2);v.push(R),L===0?E+=R:L<x&&(E+=2*R)}for(let L=0;L<v.length;L++)v[L]=v[L]/E;g.envMap.value=e.texture,g.samples.value=x,g.weights.value=v,g.latitudinal.value=l==="latitudinal",c&&(g.poleAxis.value=c);const{_lodMax:w}=this;g.dTheta.value=y,g.mipInt.value=w-n;const A=this._sizeLods[i],U=3*A*(i>w-wo?i-w+wo:0),I=4*(this._cubeSize-A);Sc(t,U,I,3*A,2*A),u.setRenderTarget(t),u.render(p,df)}}function tE(r){const e=[],t=[],n=[];let i=r;const s=r-wo+1+Mg.length;for(let l=0;l<s;l++){const c=Math.pow(2,i);t.push(c);let u=1/c;l>r-wo?u=Mg[l-r+wo-1]:l===0&&(u=0),n.push(u);const h=1/(c-2),f=-h,p=1+h,g=[f,f,p,f,p,p,f,f,p,p,f,p],m=6,y=6,M=3,x=2,v=1,E=new Float32Array(M*y*m),w=new Float32Array(x*y*m),A=new Float32Array(v*y*m);for(let I=0;I<m;I++){const L=I%3*2/3-1,B=I>2?0:-1,R=[L,B,0,L+2/3,B,0,L+2/3,B+1,0,L,B,0,L+2/3,B+1,0,L,B+1,0];E.set(R,M*y*I),w.set(g,x*y*I);const b=[I,I,I,I,I,I];A.set(b,v*y*I)}const U=new _t;U.setAttribute("position",new Lt(E,M)),U.setAttribute("uv",new Lt(w,x)),U.setAttribute("faceIndex",new Lt(A,v)),e.push(U),i>wo&&i--}return{lodPlanes:e,sizeLods:t,sigmas:n}}function Tg(r,e,t){const n=new Ei(r,e,t);return n.texture.mapping=No,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function Sc(r,e,t,n,i){r.viewport.set(e,t,n,i),r.scissor.set(e,t,n,i)}function nE(r,e,t){const n=new Float32Array(Eo),i=new N(0,1,0);return new Ti({name:"SphericalGaussianBlur",defines:{n:Eo,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${r}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:$d(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:lr,depthTest:!1,depthWrite:!1})}function Ag(){return new Ti({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:$d(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:lr,depthTest:!1,depthWrite:!1})}function bg(){return new Ti({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:$d(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:lr,depthTest:!1,depthWrite:!1})}function $d(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function iE(r){let e=new WeakMap,t=null;function n(c){if(c&&c.isTexture){const u=c.mapping,h=u===Ca||u===Ra,f=u===ur||u===Nr;if(h||f){let p=e.get(c);const g=p!==void 0?p.texture.pmremVersion:0;if(c.isRenderTargetTexture&&c.pmremVersion!==g)return t===null&&(t=new Md(r)),p=h?t.fromEquirectangular(c,p):t.fromCubemap(c,p),p.texture.pmremVersion=c.pmremVersion,e.set(c,p),p.texture;if(p!==void 0)return p.texture;{const m=c.image;return h&&m&&m.height>0||f&&m&&i(m)?(t===null&&(t=new Md(r)),p=h?t.fromEquirectangular(c):t.fromCubemap(c),p.texture.pmremVersion=c.pmremVersion,e.set(c,p),c.addEventListener("dispose",s),p.texture):null}}}return c}function i(c){let u=0;const h=6;for(let f=0;f<h;f++)c[f]!==void 0&&u++;return u===h}function s(c){const u=c.target;u.removeEventListener("dispose",s);const h=e.get(u);h!==void 0&&(e.delete(u),h.dispose())}function l(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:n,dispose:l}}function rE(r){const e={};function t(n){if(e[n]!==void 0)return e[n];let i;switch(n){case"WEBGL_depth_texture":i=r.getExtension("WEBGL_depth_texture")||r.getExtension("MOZ_WEBGL_depth_texture")||r.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=r.getExtension("EXT_texture_filter_anisotropic")||r.getExtension("MOZ_EXT_texture_filter_anisotropic")||r.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=r.getExtension("WEBGL_compressed_texture_s3tc")||r.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=r.getExtension("WEBGL_compressed_texture_pvrtc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=r.getExtension(n)}return e[n]=i,i}return{has:function(n){return t(n)!==null},init:function(){t("EXT_color_buffer_float"),t("WEBGL_clip_cull_distance"),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture"),t("WEBGL_render_shared_exponent")},get:function(n){const i=t(n);return i}}}function sE(r,e,t,n){const i={},s=new WeakMap;function l(p){const g=p.target;g.index!==null&&e.remove(g.index);for(const y in g.attributes)e.remove(g.attributes[y]);for(const y in g.morphAttributes){const M=g.morphAttributes[y];for(let x=0,v=M.length;x<v;x++)e.remove(M[x])}g.removeEventListener("dispose",l),delete i[g.id];const m=s.get(g);m&&(e.remove(m),s.delete(g)),n.releaseStatesOfGeometry(g),g.isInstancedBufferGeometry===!0&&delete g._maxInstanceCount,t.memory.geometries--}function c(p,g){return i[g.id]===!0||(g.addEventListener("dispose",l),i[g.id]=!0,t.memory.geometries++),g}function u(p){const g=p.attributes;for(const y in g)e.update(g[y],r.ARRAY_BUFFER);const m=p.morphAttributes;for(const y in m){const M=m[y];for(let x=0,v=M.length;x<v;x++)e.update(M[x],r.ARRAY_BUFFER)}}function h(p){const g=[],m=p.index,y=p.attributes.position;let M=0;if(m!==null){const E=m.array;M=m.version;for(let w=0,A=E.length;w<A;w+=3){const U=E[w+0],I=E[w+1],L=E[w+2];g.push(U,I,I,L,L,U)}}else if(y!==void 0){const E=y.array;M=y.version;for(let w=0,A=E.length/3-1;w<A;w+=3){const U=w+0,I=w+1,L=w+2;g.push(U,I,I,L,L,U)}}else return;const x=new(lv(g)?Qd:Kd)(g,1);x.version=M;const v=s.get(p);v&&e.remove(v),s.set(p,x)}function f(p){const g=s.get(p);if(g){const m=p.index;m!==null&&g.version<m.version&&h(p)}else h(p);return s.get(p)}return{get:c,update:u,getWireframeAttribute:f}}function oE(r,e,t){let n;function i(g){n=g}let s,l;function c(g){s=g.type,l=g.bytesPerElement}function u(g,m){r.drawElements(n,m,s,g*l),t.update(m,n,1)}function h(g,m,y){y!==0&&(r.drawElementsInstanced(n,m,s,g*l,y),t.update(m,n,y))}function f(g,m,y){if(y===0)return;const M=e.get("WEBGL_multi_draw");if(M===null)for(let x=0;x<y;x++)this.render(g[x]/l,m[x]);else{M.multiDrawElementsWEBGL(n,m,0,s,g,0,y);let x=0;for(let v=0;v<y;v++)x+=m[v];t.update(x,n,1)}}function p(g,m,y,M){if(y===0)return;const x=e.get("WEBGL_multi_draw");if(x===null)for(let v=0;v<g.length;v++)h(g[v]/l,m[v],M[v]);else{x.multiDrawElementsInstancedWEBGL(n,m,0,s,g,0,M,0,y);let v=0;for(let E=0;E<y;E++)v+=m[E];for(let E=0;E<M.length;E++)t.update(v,n,M[E])}}this.setMode=i,this.setIndex=c,this.render=u,this.renderInstances=h,this.renderMultiDraw=f,this.renderMultiDrawInstances=p}function aE(r){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function n(s,l,c){switch(t.calls++,l){case r.TRIANGLES:t.triangles+=c*(s/3);break;case r.LINES:t.lines+=c*(s/2);break;case r.LINE_STRIP:t.lines+=c*(s-1);break;case r.LINE_LOOP:t.lines+=c*s;break;case r.POINTS:t.points+=c*s;break;default:break}}function i(){t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:i,update:n}}function lE(r,e,t){const n=new WeakMap,i=new It;function s(l,c,u){const h=l.morphTargetInfluences,f=c.morphAttributes.position||c.morphAttributes.normal||c.morphAttributes.color,p=f!==void 0?f.length:0;let g=n.get(c);if(g===void 0||g.count!==p){let R=function(){L.dispose(),n.delete(c),c.removeEventListener("dispose",R)};g!==void 0&&g.texture.dispose();const m=c.morphAttributes.position!==void 0,y=c.morphAttributes.normal!==void 0,M=c.morphAttributes.color!==void 0,x=c.morphAttributes.position||[],v=c.morphAttributes.normal||[],E=c.morphAttributes.color||[];let w=0;m===!0&&(w=1),y===!0&&(w=2),M===!0&&(w=3);let A=c.attributes.position.count*w,U=1;A>e.maxTextureSize&&(U=Math.ceil(A/e.maxTextureSize),A=e.maxTextureSize);const I=new Float32Array(A*U*4*p),L=new yu(I,A,U,p);L.type=di,L.needsUpdate=!0;const B=w*4;for(let b=0;b<p;b++){const z=x[b],Y=v[b],k=E[b],J=A*U*4*b;for(let se=0;se<z.count;se++){const le=se*B;m===!0&&(i.fromBufferAttribute(z,se),I[J+le+0]=i.x,I[J+le+1]=i.y,I[J+le+2]=i.z,I[J+le+3]=0),y===!0&&(i.fromBufferAttribute(Y,se),I[J+le+4]=i.x,I[J+le+5]=i.y,I[J+le+6]=i.z,I[J+le+7]=0),M===!0&&(i.fromBufferAttribute(k,se),I[J+le+8]=i.x,I[J+le+9]=i.y,I[J+le+10]=i.z,I[J+le+11]=k.itemSize===4?i.w:1)}}g={count:p,texture:L,size:new ce(A,U)},n.set(c,g),c.addEventListener("dispose",R)}if(l.isInstancedMesh===!0&&l.morphTexture!==null)u.getUniforms().setValue(r,"morphTexture",l.morphTexture,t);else{let m=0;for(let M=0;M<h.length;M++)m+=h[M];const y=c.morphTargetsRelative?1:1-m;u.getUniforms().setValue(r,"morphTargetBaseInfluence",y),u.getUniforms().setValue(r,"morphTargetInfluences",h)}u.getUniforms().setValue(r,"morphTargetsTexture",g.texture,t),u.getUniforms().setValue(r,"morphTargetsTextureSize",g.size)}return{update:s}}function cE(r,e,t,n){let i=new WeakMap;function s(u){const h=n.render.frame,f=u.geometry,p=e.get(u,f);if(i.get(p)!==h&&(e.update(p),i.set(p,h)),u.isInstancedMesh&&(u.hasEventListener("dispose",c)===!1&&u.addEventListener("dispose",c),i.get(u)!==h&&(t.update(u.instanceMatrix,r.ARRAY_BUFFER),u.instanceColor!==null&&t.update(u.instanceColor,r.ARRAY_BUFFER),i.set(u,h))),u.isSkinnedMesh){const g=u.skeleton;i.get(g)!==h&&(g.update(),i.set(g,h))}return p}function l(){i=new WeakMap}function c(u){const h=u.target;h.removeEventListener("dispose",c),t.remove(h.instanceMatrix),h.instanceColor!==null&&t.remove(h.instanceColor)}return{update:s,dispose:l}}class ep extends Xt{constructor(e,t,n,i,s,l,c,u,h,f){if(f=f!==void 0?f:ys,f!==ys&&f!==Ro)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&f===ys&&(n=ws),n===void 0&&f===Ro&&(n=Uo),super(null,i,s,l,c,u,f,n,h),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=c!==void 0?c:mn,this.minFilter=u!==void 0?u:mn,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.compareFunction=e.compareFunction,this}toJSON(e){const t=super.toJSON(e);return this.compareFunction!==null&&(t.compareFunction=this.compareFunction),t}}const yv=new Xt,xv=new ep(1,1);xv.compareFunction=Zd;const Sv=new yu,Mv=new Jd,wv=new $a,Cg=[],Rg=[],Pg=new Float32Array(16),Ig=new Float32Array(9),Lg=new Float32Array(4);function Fo(r,e,t){const n=r[0];if(n<=0||n>0)return r;const i=e*t;let s=Cg[i];if(s===void 0&&(s=new Float32Array(i),Cg[i]=s),e!==0){n.toArray(s,0);for(let l=1,c=0;l!==e;++l)c+=t,r[l].toArray(s,c)}return s}function ln(r,e){if(r.length!==e.length)return!1;for(let t=0,n=r.length;t<n;t++)if(r[t]!==e[t])return!1;return!0}function cn(r,e){for(let t=0,n=e.length;t<n;t++)r[t]=e[t]}function xu(r,e){let t=Rg[e];t===void 0&&(t=new Int32Array(e),Rg[e]=t);for(let n=0;n!==e;++n)t[n]=r.allocateTextureUnit();return t}function uE(r,e){const t=this.cache;t[0]!==e&&(r.uniform1f(this.addr,e),t[0]=e)}function hE(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(ln(t,e))return;r.uniform2fv(this.addr,e),cn(t,e)}}function fE(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(r.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(ln(t,e))return;r.uniform3fv(this.addr,e),cn(t,e)}}function dE(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(ln(t,e))return;r.uniform4fv(this.addr,e),cn(t,e)}}function pE(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(ln(t,e))return;r.uniformMatrix2fv(this.addr,!1,e),cn(t,e)}else{if(ln(t,n))return;Lg.set(n),r.uniformMatrix2fv(this.addr,!1,Lg),cn(t,n)}}function mE(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(ln(t,e))return;r.uniformMatrix3fv(this.addr,!1,e),cn(t,e)}else{if(ln(t,n))return;Ig.set(n),r.uniformMatrix3fv(this.addr,!1,Ig),cn(t,n)}}function gE(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(ln(t,e))return;r.uniformMatrix4fv(this.addr,!1,e),cn(t,e)}else{if(ln(t,n))return;Pg.set(n),r.uniformMatrix4fv(this.addr,!1,Pg),cn(t,n)}}function _E(r,e){const t=this.cache;t[0]!==e&&(r.uniform1i(this.addr,e),t[0]=e)}function vE(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2i(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(ln(t,e))return;r.uniform2iv(this.addr,e),cn(t,e)}}function yE(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3i(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(ln(t,e))return;r.uniform3iv(this.addr,e),cn(t,e)}}function xE(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4i(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(ln(t,e))return;r.uniform4iv(this.addr,e),cn(t,e)}}function SE(r,e){const t=this.cache;t[0]!==e&&(r.uniform1ui(this.addr,e),t[0]=e)}function ME(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2ui(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(ln(t,e))return;r.uniform2uiv(this.addr,e),cn(t,e)}}function wE(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3ui(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(ln(t,e))return;r.uniform3uiv(this.addr,e),cn(t,e)}}function EE(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4ui(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(ln(t,e))return;r.uniform4uiv(this.addr,e),cn(t,e)}}function TE(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i);const s=this.type===r.SAMPLER_2D_SHADOW?xv:yv;t.setTexture2D(e||s,i)}function AE(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTexture3D(e||Mv,i)}function bE(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTextureCube(e||wv,i)}function CE(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTexture2DArray(e||Sv,i)}function RE(r){switch(r){case 5126:return uE;case 35664:return hE;case 35665:return fE;case 35666:return dE;case 35674:return pE;case 35675:return mE;case 35676:return gE;case 5124:case 35670:return _E;case 35667:case 35671:return vE;case 35668:case 35672:return yE;case 35669:case 35673:return xE;case 5125:return SE;case 36294:return ME;case 36295:return wE;case 36296:return EE;case 35678:case 36198:case 36298:case 36306:case 35682:return TE;case 35679:case 36299:case 36307:return AE;case 35680:case 36300:case 36308:case 36293:return bE;case 36289:case 36303:case 36311:case 36292:return CE}}function PE(r,e){r.uniform1fv(this.addr,e)}function IE(r,e){const t=Fo(e,this.size,2);r.uniform2fv(this.addr,t)}function LE(r,e){const t=Fo(e,this.size,3);r.uniform3fv(this.addr,t)}function DE(r,e){const t=Fo(e,this.size,4);r.uniform4fv(this.addr,t)}function NE(r,e){const t=Fo(e,this.size,4);r.uniformMatrix2fv(this.addr,!1,t)}function UE(r,e){const t=Fo(e,this.size,9);r.uniformMatrix3fv(this.addr,!1,t)}function OE(r,e){const t=Fo(e,this.size,16);r.uniformMatrix4fv(this.addr,!1,t)}function FE(r,e){r.uniform1iv(this.addr,e)}function zE(r,e){r.uniform2iv(this.addr,e)}function BE(r,e){r.uniform3iv(this.addr,e)}function kE(r,e){r.uniform4iv(this.addr,e)}function HE(r,e){r.uniform1uiv(this.addr,e)}function VE(r,e){r.uniform2uiv(this.addr,e)}function GE(r,e){r.uniform3uiv(this.addr,e)}function WE(r,e){r.uniform4uiv(this.addr,e)}function XE(r,e,t){const n=this.cache,i=e.length,s=xu(t,i);ln(n,s)||(r.uniform1iv(this.addr,s),cn(n,s));for(let l=0;l!==i;++l)t.setTexture2D(e[l]||yv,s[l])}function YE(r,e,t){const n=this.cache,i=e.length,s=xu(t,i);ln(n,s)||(r.uniform1iv(this.addr,s),cn(n,s));for(let l=0;l!==i;++l)t.setTexture3D(e[l]||Mv,s[l])}function qE(r,e,t){const n=this.cache,i=e.length,s=xu(t,i);ln(n,s)||(r.uniform1iv(this.addr,s),cn(n,s));for(let l=0;l!==i;++l)t.setTextureCube(e[l]||wv,s[l])}function ZE(r,e,t){const n=this.cache,i=e.length,s=xu(t,i);ln(n,s)||(r.uniform1iv(this.addr,s),cn(n,s));for(let l=0;l!==i;++l)t.setTexture2DArray(e[l]||Sv,s[l])}function jE(r){switch(r){case 5126:return PE;case 35664:return IE;case 35665:return LE;case 35666:return DE;case 35674:return NE;case 35675:return UE;case 35676:return OE;case 5124:case 35670:return FE;case 35667:case 35671:return zE;case 35668:case 35672:return BE;case 35669:case 35673:return kE;case 5125:return HE;case 36294:return VE;case 36295:return GE;case 36296:return WE;case 35678:case 36198:case 36298:case 36306:case 35682:return XE;case 35679:case 36299:case 36307:return YE;case 35680:case 36300:case 36308:case 36293:return qE;case 36289:case 36303:case 36311:case 36292:return ZE}}class JE{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.type=t.type,this.setValue=RE(t.type)}}class KE{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.type=t.type,this.size=t.size,this.setValue=jE(t.type)}}class QE{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,n){const i=this.seq;for(let s=0,l=i.length;s!==l;++s){const c=i[s];c.setValue(e,t[c.id],n)}}}const vf=/(\w+)(\])?(\[|\.)?/g;function Dg(r,e){r.seq.push(e),r.map[e.id]=e}function $E(r,e,t){const n=r.name,i=n.length;for(vf.lastIndex=0;;){const s=vf.exec(n),l=vf.lastIndex;let c=s[1];const u=s[2]==="]",h=s[3];if(u&&(c=c|0),h===void 0||h==="["&&l+2===i){Dg(t,h===void 0?new JE(c,r,e):new KE(c,r,e));break}else{let p=t.map[c];p===void 0&&(p=new QE(c),Dg(t,p)),t=p}}}class iu{constructor(e,t){this.seq=[],this.map={};const n=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let i=0;i<n;++i){const s=e.getActiveUniform(t,i),l=e.getUniformLocation(t,s.name);$E(s,l,this)}}setValue(e,t,n,i){const s=this.map[t];s!==void 0&&s.setValue(e,n,i)}setOptional(e,t,n){const i=t[n];i!==void 0&&this.setValue(e,n,i)}static upload(e,t,n,i){for(let s=0,l=t.length;s!==l;++s){const c=t[s],u=n[c.id];u.needsUpdate!==!1&&c.setValue(e,u.value,i)}}static seqWithValue(e,t){const n=[];for(let i=0,s=e.length;i!==s;++i){const l=e[i];l.id in t&&n.push(l)}return n}}function Ng(r,e,t){const n=r.createShader(e);return r.shaderSource(n,t),r.compileShader(n),n}const eT=37297;let tT=0;function nT(r,e){const t=r.split(`
`),n=[],i=Math.max(e-6,0),s=Math.min(e+6,t.length);for(let l=i;l<s;l++){const c=l+1;n.push(`${c===e?">":" "} ${c}: ${t[l]}`)}return n.join(`
`)}function iT(r){const e=Pt.getPrimaries(Pt.workingColorSpace),t=Pt.getPrimaries(r);let n;switch(e===t?n="":e===Fa&&t===Oa?n="LinearDisplayP3ToLinearSRGB":e===Oa&&t===Fa&&(n="LinearSRGBToLinearDisplayP3"),r){case fr:case Ka:return[n,"LinearTransferOETF"];case hi:case vu:return[n,"sRGBTransferOETF"];default:return[n,"LinearTransferOETF"]}}function Ug(r,e,t){const n=r.getShaderParameter(e,r.COMPILE_STATUS),i=r.getShaderInfoLog(e).trim();if(n&&i==="")return"";const s=/ERROR: 0:(\d+)/.exec(i);if(s){const l=parseInt(s[1]);return t.toUpperCase()+`

`+i+`

`+nT(r.getShaderSource(e),l)}else return i}function rT(r,e){const t=iT(e);return`vec4 ${r}( vec4 value ) { return ${t[0]}( ${t[1]}( value ) ); }`}function sT(r,e){let t;switch(e){case L_:t="Linear";break;case D_:t="Reinhard";break;case N_:t="OptimizedCineon";break;case Fd:t="ACESFilmic";break;case O_:t="AgX";break;case F_:t="Neutral";break;case U_:t="Custom";break;default:t="Linear"}return"vec3 "+r+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}function oT(r){return[r.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",r.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(Sa).join(`
`)}function aT(r){const e=[];for(const t in r){const n=r[t];n!==!1&&e.push("#define "+t+" "+n)}return e.join(`
`)}function lT(r,e){const t={},n=r.getProgramParameter(e,r.ACTIVE_ATTRIBUTES);for(let i=0;i<n;i++){const s=r.getActiveAttrib(e,i),l=s.name;let c=1;s.type===r.FLOAT_MAT2&&(c=2),s.type===r.FLOAT_MAT3&&(c=3),s.type===r.FLOAT_MAT4&&(c=4),t[l]={type:s.type,location:r.getAttribLocation(e,l),locationSize:c}}return t}function Sa(r){return r!==""}function Og(r,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return r.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function Fg(r,e){return r.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const cT=/^[ \t]*#include +<([\w\d./]+)>/gm;function wd(r){return r.replace(cT,hT)}const uT=new Map;function hT(r,e){let t=gt[e];if(t===void 0){const n=uT.get(e);if(n!==void 0)t=gt[n];else throw new Error("Can not resolve #include <"+e+">")}return wd(t)}const fT=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function zg(r){return r.replace(fT,dT)}function dT(r,e,t,n){let i="";for(let s=parseInt(e);s<parseInt(t);s++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return i}function Bg(r){let e=`precision ${r.precision} float;
	precision ${r.precision} int;
	precision ${r.precision} sampler2D;
	precision ${r.precision} samplerCube;
	precision ${r.precision} sampler3D;
	precision ${r.precision} sampler2DArray;
	precision ${r.precision} sampler2DShadow;
	precision ${r.precision} samplerCubeShadow;
	precision ${r.precision} sampler2DArrayShadow;
	precision ${r.precision} isampler2D;
	precision ${r.precision} isampler3D;
	precision ${r.precision} isamplerCube;
	precision ${r.precision} isampler2DArray;
	precision ${r.precision} usampler2D;
	precision ${r.precision} usampler3D;
	precision ${r.precision} usamplerCube;
	precision ${r.precision} usampler2DArray;
	`;return r.precision==="highp"?e+=`
#define HIGH_PRECISION`:r.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:r.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function pT(r){let e="SHADOWMAP_TYPE_BASIC";return r.shadowMapType===mu?e="SHADOWMAP_TYPE_PCF":r.shadowMapType===Ma?e="SHADOWMAP_TYPE_PCF_SOFT":r.shadowMapType===Si&&(e="SHADOWMAP_TYPE_VSM"),e}function mT(r){let e="ENVMAP_TYPE_CUBE";if(r.envMap)switch(r.envMapMode){case ur:case Nr:e="ENVMAP_TYPE_CUBE";break;case No:e="ENVMAP_TYPE_CUBE_UV";break}return e}function gT(r){let e="ENVMAP_MODE_REFLECTION";if(r.envMap)switch(r.envMapMode){case Nr:e="ENVMAP_MODE_REFRACTION";break}return e}function _T(r){let e="ENVMAP_BLENDING_NONE";if(r.envMap)switch(r.combine){case ja:e="ENVMAP_BLENDING_MULTIPLY";break;case P_:e="ENVMAP_BLENDING_MIX";break;case I_:e="ENVMAP_BLENDING_ADD";break}return e}function vT(r){const e=r.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,n=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),7*16)),texelHeight:n,maxMip:t}}function yT(r,e,t,n){const i=r.getContext(),s=t.defines;let l=t.vertexShader,c=t.fragmentShader;const u=pT(t),h=mT(t),f=gT(t),p=_T(t),g=vT(t),m=oT(t),y=aT(s),M=i.createProgram();let x,v,E=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(x=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,y].filter(Sa).join(`
`),x.length>0&&(x+=`
`),v=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,y].filter(Sa).join(`
`),v.length>0&&(v+=`
`)):(x=[Bg(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,y,t.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",t.batching?"#define USE_BATCHING":"",t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.instancingMorph?"#define USE_INSTANCING_MORPH":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+f:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.displacementMap?"#define USE_DISPLACEMENTMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.mapUv?"#define MAP_UV "+t.mapUv:"",t.alphaMapUv?"#define ALPHAMAP_UV "+t.alphaMapUv:"",t.lightMapUv?"#define LIGHTMAP_UV "+t.lightMapUv:"",t.aoMapUv?"#define AOMAP_UV "+t.aoMapUv:"",t.emissiveMapUv?"#define EMISSIVEMAP_UV "+t.emissiveMapUv:"",t.bumpMapUv?"#define BUMPMAP_UV "+t.bumpMapUv:"",t.normalMapUv?"#define NORMALMAP_UV "+t.normalMapUv:"",t.displacementMapUv?"#define DISPLACEMENTMAP_UV "+t.displacementMapUv:"",t.metalnessMapUv?"#define METALNESSMAP_UV "+t.metalnessMapUv:"",t.roughnessMapUv?"#define ROUGHNESSMAP_UV "+t.roughnessMapUv:"",t.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+t.anisotropyMapUv:"",t.clearcoatMapUv?"#define CLEARCOATMAP_UV "+t.clearcoatMapUv:"",t.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+t.clearcoatNormalMapUv:"",t.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+t.clearcoatRoughnessMapUv:"",t.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+t.iridescenceMapUv:"",t.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+t.iridescenceThicknessMapUv:"",t.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+t.sheenColorMapUv:"",t.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+t.sheenRoughnessMapUv:"",t.specularMapUv?"#define SPECULARMAP_UV "+t.specularMapUv:"",t.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+t.specularColorMapUv:"",t.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+t.specularIntensityMapUv:"",t.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+t.transmissionMapUv:"",t.thicknessMapUv?"#define THICKNESSMAP_UV "+t.thicknessMapUv:"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0?"#define MORPHTARGETS_TEXTURE":"",t.morphTargetsCount>0?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+u:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.useLegacyLights?"#define LEGACY_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","#ifdef USE_INSTANCING_MORPH","	uniform sampler2D morphTexture;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(Sa).join(`
`),v=[Bg(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,y,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+h:"",t.envMap?"#define "+f:"",t.envMap?"#define "+p:"",g?"#define CUBEUV_TEXEL_WIDTH "+g.texelWidth:"",g?"#define CUBEUV_TEXEL_HEIGHT "+g.texelHeight:"",g?"#define CUBEUV_MAX_MIP "+g.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.dispersion?"#define USE_DISPERSION":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+u:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.useLegacyLights?"#define LEGACY_LIGHTS":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==ki?"#define TONE_MAPPING":"",t.toneMapping!==ki?gt.tonemapping_pars_fragment:"",t.toneMapping!==ki?sT("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",gt.colorspace_pars_fragment,rT("linearToOutputTexel",t.outputColorSpace),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(Sa).join(`
`)),l=wd(l),l=Og(l,t),l=Fg(l,t),c=wd(c),c=Og(c,t),c=Fg(c,t),l=zg(l),c=zg(c),t.isRawShaderMaterial!==!0&&(E=`#version 300 es
`,x=[m,"#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+x,v=["#define varying in",t.glslVersion===Sd?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===Sd?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+v);const w=E+x+l,A=E+v+c,U=Ng(i,i.VERTEX_SHADER,w),I=Ng(i,i.FRAGMENT_SHADER,A);i.attachShader(M,U),i.attachShader(M,I),t.index0AttributeName!==void 0?i.bindAttribLocation(M,0,t.index0AttributeName):t.morphTargets===!0&&i.bindAttribLocation(M,0,"position"),i.linkProgram(M);function L(z){if(r.debug.checkShaderErrors){const Y=i.getProgramInfoLog(M).trim(),k=i.getShaderInfoLog(U).trim(),J=i.getShaderInfoLog(I).trim();let se=!0,le=!0;if(i.getProgramParameter(M,i.LINK_STATUS)===!1)if(se=!1,typeof r.debug.onShaderError=="function")r.debug.onShaderError(i,M,U,I);else{const xe=Ug(i,U,"vertex"),H=Ug(i,I,"fragment")}else Y!==""||(k===""||J==="")&&(le=!1);le&&(z.diagnostics={runnable:se,programLog:Y,vertexShader:{log:k,prefix:x},fragmentShader:{log:J,prefix:v}})}i.deleteShader(U),i.deleteShader(I),B=new iu(i,M),R=lT(i,M)}let B;this.getUniforms=function(){return B===void 0&&L(this),B};let R;this.getAttributes=function(){return R===void 0&&L(this),R};let b=t.rendererExtensionParallelShaderCompile===!1;return this.isReady=function(){return b===!1&&(b=i.getProgramParameter(M,eT)),b},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(M),this.program=void 0},this.type=t.shaderType,this.name=t.shaderName,this.id=tT++,this.cacheKey=e,this.usedTimes=1,this.program=M,this.vertexShader=U,this.fragmentShader=I,this}let xT=0;class ST{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,n=e.fragmentShader,i=this._getShaderStage(t),s=this._getShaderStage(n),l=this._getShaderCacheForMaterial(e);return l.has(i)===!1&&(l.add(i),i.usedTimes++),l.has(s)===!1&&(l.add(s),s.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const n of t)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let n=t.get(e);return n===void 0&&(n=new Set,t.set(e,n)),n}_getShaderStage(e){const t=this.shaderCache;let n=t.get(e);return n===void 0&&(n=new MT(e),t.set(e,n)),n}}class MT{constructor(e){this.id=xT++,this.code=e,this.usedTimes=0}}function wT(r,e,t,n,i,s,l){const c=new Ss,u=new ST,h=new Set,f=[],p=i.logarithmicDepthBuffer,g=i.vertexTextures;let m=i.precision;const y={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function M(R){return h.add(R),R===0?"uv":`uv${R}`}function x(R,b,z,Y,k){const J=Y.fog,se=k.geometry,le=R.isMeshStandardMaterial?Y.environment:null,xe=(R.isMeshStandardMaterial?t:e).get(R.envMap||le),H=xe&&xe.mapping===No?xe.image.height:null,te=y[R.type];R.precision!==null&&(m=i.getMaxPrecision(R.precision),R.precision);const j=se.morphAttributes.position||se.morphAttributes.normal||se.morphAttributes.color,fe=j!==void 0?j.length:0;let Le=0;se.morphAttributes.position!==void 0&&(Le=1),se.morphAttributes.normal!==void 0&&(Le=2),se.morphAttributes.color!==void 0&&(Le=3);let Be,ne,_e,Re;if(te){const Mt=wi[te];Be=Mt.vertexShader,ne=Mt.fragmentShader}else Be=R.vertexShader,ne=R.fragmentShader,u.update(R),_e=u.getVertexShaderID(R),Re=u.getFragmentShaderID(R);const ye=r.getRenderTarget(),nt=k.isInstancedMesh===!0,it=k.isBatchedMesh===!0,W=!!R.map,Qe=!!R.matcap,ae=!!xe,pe=!!R.aoMap,he=!!R.lightMap,we=!!R.bumpMap,me=!!R.normalMap,Ne=!!R.displacementMap,qe=!!R.emissiveMap,F=!!R.metalnessMap,P=!!R.roughnessMap,Z=R.anisotropy>0,ue=R.clearcoat>0,ve=R.dispersion>0,de=R.iridescence>0,Xe=R.sheen>0,Ae=R.transmission>0,Te=Z&&!!R.anisotropyMap,tt=ue&&!!R.clearcoatMap,Me=ue&&!!R.clearcoatNormalMap,Ve=ue&&!!R.clearcoatRoughnessMap,pt=de&&!!R.iridescenceMap,Ze=de&&!!R.iridescenceThicknessMap,Fe=Xe&&!!R.sheenColorMap,at=Xe&&!!R.sheenRoughnessMap,vt=!!R.specularMap,Rt=!!R.specularColorMap,lt=!!R.specularIntensityMap,C=Ae&&!!R.transmissionMap,X=Ae&&!!R.thicknessMap,K=!!R.gradientMap,ge=!!R.alphaMap,Ee=R.alphaTest>0,ct=!!R.alphaHash,mt=!!R.extensions;let Ut=ki;R.toneMapped&&(ye===null||ye.isXRRenderTarget===!0)&&(Ut=r.toneMapping);const Kt={shaderID:te,shaderType:R.type,shaderName:R.name,vertexShader:Be,fragmentShader:ne,defines:R.defines,customVertexShaderID:_e,customFragmentShaderID:Re,isRawShaderMaterial:R.isRawShaderMaterial===!0,glslVersion:R.glslVersion,precision:m,batching:it,instancing:nt,instancingColor:nt&&k.instanceColor!==null,instancingMorph:nt&&k.morphTexture!==null,supportsVertexTextures:g,outputColorSpace:ye===null?r.outputColorSpace:ye.isXRRenderTarget===!0?ye.texture.colorSpace:fr,alphaToCoverage:!!R.alphaToCoverage,map:W,matcap:Qe,envMap:ae,envMapMode:ae&&xe.mapping,envMapCubeUVHeight:H,aoMap:pe,lightMap:he,bumpMap:we,normalMap:me,displacementMap:g&&Ne,emissiveMap:qe,normalMapObjectSpace:me&&R.normalMapType===$_,normalMapTangentSpace:me&&R.normalMapType===Or,metalnessMap:F,roughnessMap:P,anisotropy:Z,anisotropyMap:Te,clearcoat:ue,clearcoatMap:tt,clearcoatNormalMap:Me,clearcoatRoughnessMap:Ve,dispersion:ve,iridescence:de,iridescenceMap:pt,iridescenceThicknessMap:Ze,sheen:Xe,sheenColorMap:Fe,sheenRoughnessMap:at,specularMap:vt,specularColorMap:Rt,specularIntensityMap:lt,transmission:Ae,transmissionMap:C,thicknessMap:X,gradientMap:K,opaque:R.transparent===!1&&R.blending===vs&&R.alphaToCoverage===!1,alphaMap:ge,alphaTest:Ee,alphaHash:ct,combine:R.combine,mapUv:W&&M(R.map.channel),aoMapUv:pe&&M(R.aoMap.channel),lightMapUv:he&&M(R.lightMap.channel),bumpMapUv:we&&M(R.bumpMap.channel),normalMapUv:me&&M(R.normalMap.channel),displacementMapUv:Ne&&M(R.displacementMap.channel),emissiveMapUv:qe&&M(R.emissiveMap.channel),metalnessMapUv:F&&M(R.metalnessMap.channel),roughnessMapUv:P&&M(R.roughnessMap.channel),anisotropyMapUv:Te&&M(R.anisotropyMap.channel),clearcoatMapUv:tt&&M(R.clearcoatMap.channel),clearcoatNormalMapUv:Me&&M(R.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:Ve&&M(R.clearcoatRoughnessMap.channel),iridescenceMapUv:pt&&M(R.iridescenceMap.channel),iridescenceThicknessMapUv:Ze&&M(R.iridescenceThicknessMap.channel),sheenColorMapUv:Fe&&M(R.sheenColorMap.channel),sheenRoughnessMapUv:at&&M(R.sheenRoughnessMap.channel),specularMapUv:vt&&M(R.specularMap.channel),specularColorMapUv:Rt&&M(R.specularColorMap.channel),specularIntensityMapUv:lt&&M(R.specularIntensityMap.channel),transmissionMapUv:C&&M(R.transmissionMap.channel),thicknessMapUv:X&&M(R.thicknessMap.channel),alphaMapUv:ge&&M(R.alphaMap.channel),vertexTangents:!!se.attributes.tangent&&(me||Z),vertexColors:R.vertexColors,vertexAlphas:R.vertexColors===!0&&!!se.attributes.color&&se.attributes.color.itemSize===4,pointsUvs:k.isPoints===!0&&!!se.attributes.uv&&(W||ge),fog:!!J,useFog:R.fog===!0,fogExp2:!!J&&J.isFogExp2,flatShading:R.flatShading===!0,sizeAttenuation:R.sizeAttenuation===!0,logarithmicDepthBuffer:p,skinning:k.isSkinnedMesh===!0,morphTargets:se.morphAttributes.position!==void 0,morphNormals:se.morphAttributes.normal!==void 0,morphColors:se.morphAttributes.color!==void 0,morphTargetsCount:fe,morphTextureStride:Le,numDirLights:b.directional.length,numPointLights:b.point.length,numSpotLights:b.spot.length,numSpotLightMaps:b.spotLightMap.length,numRectAreaLights:b.rectArea.length,numHemiLights:b.hemi.length,numDirLightShadows:b.directionalShadowMap.length,numPointLightShadows:b.pointShadowMap.length,numSpotLightShadows:b.spotShadowMap.length,numSpotLightShadowsWithMaps:b.numSpotLightShadowsWithMaps,numLightProbes:b.numLightProbes,numClippingPlanes:l.numPlanes,numClipIntersection:l.numIntersection,dithering:R.dithering,shadowMapEnabled:r.shadowMap.enabled&&z.length>0,shadowMapType:r.shadowMap.type,toneMapping:Ut,useLegacyLights:r._useLegacyLights,decodeVideoTexture:W&&R.map.isVideoTexture===!0&&Pt.getTransfer(R.map.colorSpace)===Ot,premultipliedAlpha:R.premultipliedAlpha,doubleSided:R.side===Fi,flipSided:R.side===An,useDepthPacking:R.depthPacking>=0,depthPacking:R.depthPacking||0,index0AttributeName:R.index0AttributeName,extensionClipCullDistance:mt&&R.extensions.clipCullDistance===!0&&n.has("WEBGL_clip_cull_distance"),extensionMultiDraw:mt&&R.extensions.multiDraw===!0&&n.has("WEBGL_multi_draw"),rendererExtensionParallelShaderCompile:n.has("KHR_parallel_shader_compile"),customProgramCacheKey:R.customProgramCacheKey()};return Kt.vertexUv1s=h.has(1),Kt.vertexUv2s=h.has(2),Kt.vertexUv3s=h.has(3),h.clear(),Kt}function v(R){const b=[];if(R.shaderID?b.push(R.shaderID):(b.push(R.customVertexShaderID),b.push(R.customFragmentShaderID)),R.defines!==void 0)for(const z in R.defines)b.push(z),b.push(R.defines[z]);return R.isRawShaderMaterial===!1&&(E(b,R),w(b,R),b.push(r.outputColorSpace)),b.push(R.customProgramCacheKey),b.join()}function E(R,b){R.push(b.precision),R.push(b.outputColorSpace),R.push(b.envMapMode),R.push(b.envMapCubeUVHeight),R.push(b.mapUv),R.push(b.alphaMapUv),R.push(b.lightMapUv),R.push(b.aoMapUv),R.push(b.bumpMapUv),R.push(b.normalMapUv),R.push(b.displacementMapUv),R.push(b.emissiveMapUv),R.push(b.metalnessMapUv),R.push(b.roughnessMapUv),R.push(b.anisotropyMapUv),R.push(b.clearcoatMapUv),R.push(b.clearcoatNormalMapUv),R.push(b.clearcoatRoughnessMapUv),R.push(b.iridescenceMapUv),R.push(b.iridescenceThicknessMapUv),R.push(b.sheenColorMapUv),R.push(b.sheenRoughnessMapUv),R.push(b.specularMapUv),R.push(b.specularColorMapUv),R.push(b.specularIntensityMapUv),R.push(b.transmissionMapUv),R.push(b.thicknessMapUv),R.push(b.combine),R.push(b.fogExp2),R.push(b.sizeAttenuation),R.push(b.morphTargetsCount),R.push(b.morphAttributeCount),R.push(b.numDirLights),R.push(b.numPointLights),R.push(b.numSpotLights),R.push(b.numSpotLightMaps),R.push(b.numHemiLights),R.push(b.numRectAreaLights),R.push(b.numDirLightShadows),R.push(b.numPointLightShadows),R.push(b.numSpotLightShadows),R.push(b.numSpotLightShadowsWithMaps),R.push(b.numLightProbes),R.push(b.shadowMapType),R.push(b.toneMapping),R.push(b.numClippingPlanes),R.push(b.numClipIntersection),R.push(b.depthPacking)}function w(R,b){c.disableAll(),b.supportsVertexTextures&&c.enable(0),b.instancing&&c.enable(1),b.instancingColor&&c.enable(2),b.instancingMorph&&c.enable(3),b.matcap&&c.enable(4),b.envMap&&c.enable(5),b.normalMapObjectSpace&&c.enable(6),b.normalMapTangentSpace&&c.enable(7),b.clearcoat&&c.enable(8),b.iridescence&&c.enable(9),b.alphaTest&&c.enable(10),b.vertexColors&&c.enable(11),b.vertexAlphas&&c.enable(12),b.vertexUv1s&&c.enable(13),b.vertexUv2s&&c.enable(14),b.vertexUv3s&&c.enable(15),b.vertexTangents&&c.enable(16),b.anisotropy&&c.enable(17),b.alphaHash&&c.enable(18),b.batching&&c.enable(19),b.dispersion&&c.enable(20),R.push(c.mask),c.disableAll(),b.fog&&c.enable(0),b.useFog&&c.enable(1),b.flatShading&&c.enable(2),b.logarithmicDepthBuffer&&c.enable(3),b.skinning&&c.enable(4),b.morphTargets&&c.enable(5),b.morphNormals&&c.enable(6),b.morphColors&&c.enable(7),b.premultipliedAlpha&&c.enable(8),b.shadowMapEnabled&&c.enable(9),b.useLegacyLights&&c.enable(10),b.doubleSided&&c.enable(11),b.flipSided&&c.enable(12),b.useDepthPacking&&c.enable(13),b.dithering&&c.enable(14),b.transmission&&c.enable(15),b.sheen&&c.enable(16),b.opaque&&c.enable(17),b.pointsUvs&&c.enable(18),b.decodeVideoTexture&&c.enable(19),b.alphaToCoverage&&c.enable(20),R.push(c.mask)}function A(R){const b=y[R.type];let z;if(b){const Y=wi[b];z=mv.clone(Y.uniforms)}else z=R.uniforms;return z}function U(R,b){let z;for(let Y=0,k=f.length;Y<k;Y++){const J=f[Y];if(J.cacheKey===b){z=J,++z.usedTimes;break}}return z===void 0&&(z=new yT(r,b,R,s),f.push(z)),z}function I(R){if(--R.usedTimes===0){const b=f.indexOf(R);f[b]=f[f.length-1],f.pop(),R.destroy()}}function L(R){u.remove(R)}function B(){u.dispose()}return{getParameters:x,getProgramCacheKey:v,getUniforms:A,acquireProgram:U,releaseProgram:I,releaseShaderCache:L,programs:f,dispose:B}}function ET(){let r=new WeakMap;function e(s){let l=r.get(s);return l===void 0&&(l={},r.set(s,l)),l}function t(s){r.delete(s)}function n(s,l,c){r.get(s)[l]=c}function i(){r=new WeakMap}return{get:e,remove:t,update:n,dispose:i}}function TT(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.material.id!==e.material.id?r.material.id-e.material.id:r.z!==e.z?r.z-e.z:r.id-e.id}function kg(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.z!==e.z?e.z-r.z:r.id-e.id}function Hg(){const r=[];let e=0;const t=[],n=[],i=[];function s(){e=0,t.length=0,n.length=0,i.length=0}function l(p,g,m,y,M,x){let v=r[e];return v===void 0?(v={id:p.id,object:p,geometry:g,material:m,groupOrder:y,renderOrder:p.renderOrder,z:M,group:x},r[e]=v):(v.id=p.id,v.object=p,v.geometry=g,v.material=m,v.groupOrder=y,v.renderOrder=p.renderOrder,v.z=M,v.group=x),e++,v}function c(p,g,m,y,M,x){const v=l(p,g,m,y,M,x);m.transmission>0?n.push(v):m.transparent===!0?i.push(v):t.push(v)}function u(p,g,m,y,M,x){const v=l(p,g,m,y,M,x);m.transmission>0?n.unshift(v):m.transparent===!0?i.unshift(v):t.unshift(v)}function h(p,g){t.length>1&&t.sort(p||TT),n.length>1&&n.sort(g||kg),i.length>1&&i.sort(g||kg)}function f(){for(let p=e,g=r.length;p<g;p++){const m=r[p];if(m.id===null)break;m.id=null,m.object=null,m.geometry=null,m.material=null,m.group=null}}return{opaque:t,transmissive:n,transparent:i,init:s,push:c,unshift:u,finish:f,sort:h}}function AT(){let r=new WeakMap;function e(n,i){const s=r.get(n);let l;return s===void 0?(l=new Hg,r.set(n,[l])):i>=s.length?(l=new Hg,s.push(l)):l=s[i],l}function t(){r=new WeakMap}return{get:e,dispose:t}}function bT(){const r={};return{get:function(e){if(r[e.id]!==void 0)return r[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new N,color:new Oe};break;case"SpotLight":t={position:new N,direction:new N,color:new Oe,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new N,color:new Oe,distance:0,decay:0};break;case"HemisphereLight":t={direction:new N,skyColor:new Oe,groundColor:new Oe};break;case"RectAreaLight":t={color:new Oe,position:new N,halfWidth:new N,halfHeight:new N};break}return r[e.id]=t,t}}}function CT(){const r={};return{get:function(e){if(r[e.id]!==void 0)return r[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ce};break;case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ce};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ce,shadowCameraNear:1,shadowCameraFar:1e3};break}return r[e.id]=t,t}}}let RT=0;function PT(r,e){return(e.castShadow?2:0)-(r.castShadow?2:0)+(e.map?1:0)-(r.map?1:0)}function IT(r){const e=new bT,t=CT(),n={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let h=0;h<9;h++)n.probe.push(new N);const i=new N,s=new et,l=new et;function c(h,f){let p=0,g=0,m=0;for(let z=0;z<9;z++)n.probe[z].set(0,0,0);let y=0,M=0,x=0,v=0,E=0,w=0,A=0,U=0,I=0,L=0,B=0;h.sort(PT);const R=f===!0?Math.PI:1;for(let z=0,Y=h.length;z<Y;z++){const k=h[z],J=k.color,se=k.intensity,le=k.distance,xe=k.shadow&&k.shadow.map?k.shadow.map.texture:null;if(k.isAmbientLight)p+=J.r*se*R,g+=J.g*se*R,m+=J.b*se*R;else if(k.isLightProbe){for(let H=0;H<9;H++)n.probe[H].addScaledVector(k.sh.coefficients[H],se);B++}else if(k.isDirectionalLight){const H=e.get(k);if(H.color.copy(k.color).multiplyScalar(k.intensity*R),k.castShadow){const te=k.shadow,j=t.get(k);j.shadowBias=te.bias,j.shadowNormalBias=te.normalBias,j.shadowRadius=te.radius,j.shadowMapSize=te.mapSize,n.directionalShadow[y]=j,n.directionalShadowMap[y]=xe,n.directionalShadowMatrix[y]=k.shadow.matrix,w++}n.directional[y]=H,y++}else if(k.isSpotLight){const H=e.get(k);H.position.setFromMatrixPosition(k.matrixWorld),H.color.copy(J).multiplyScalar(se*R),H.distance=le,H.coneCos=Math.cos(k.angle),H.penumbraCos=Math.cos(k.angle*(1-k.penumbra)),H.decay=k.decay,n.spot[x]=H;const te=k.shadow;if(k.map&&(n.spotLightMap[I]=k.map,I++,te.updateMatrices(k),k.castShadow&&L++),n.spotLightMatrix[x]=te.matrix,k.castShadow){const j=t.get(k);j.shadowBias=te.bias,j.shadowNormalBias=te.normalBias,j.shadowRadius=te.radius,j.shadowMapSize=te.mapSize,n.spotShadow[x]=j,n.spotShadowMap[x]=xe,U++}x++}else if(k.isRectAreaLight){const H=e.get(k);H.color.copy(J).multiplyScalar(se),H.halfWidth.set(k.width*.5,0,0),H.halfHeight.set(0,k.height*.5,0),n.rectArea[v]=H,v++}else if(k.isPointLight){const H=e.get(k);if(H.color.copy(k.color).multiplyScalar(k.intensity*R),H.distance=k.distance,H.decay=k.decay,k.castShadow){const te=k.shadow,j=t.get(k);j.shadowBias=te.bias,j.shadowNormalBias=te.normalBias,j.shadowRadius=te.radius,j.shadowMapSize=te.mapSize,j.shadowCameraNear=te.camera.near,j.shadowCameraFar=te.camera.far,n.pointShadow[M]=j,n.pointShadowMap[M]=xe,n.pointShadowMatrix[M]=k.shadow.matrix,A++}n.point[M]=H,M++}else if(k.isHemisphereLight){const H=e.get(k);H.skyColor.copy(k.color).multiplyScalar(se*R),H.groundColor.copy(k.groundColor).multiplyScalar(se*R),n.hemi[E]=H,E++}}v>0&&(r.has("OES_texture_float_linear")===!0?(n.rectAreaLTC1=Ce.LTC_FLOAT_1,n.rectAreaLTC2=Ce.LTC_FLOAT_2):(n.rectAreaLTC1=Ce.LTC_HALF_1,n.rectAreaLTC2=Ce.LTC_HALF_2)),n.ambient[0]=p,n.ambient[1]=g,n.ambient[2]=m;const b=n.hash;(b.directionalLength!==y||b.pointLength!==M||b.spotLength!==x||b.rectAreaLength!==v||b.hemiLength!==E||b.numDirectionalShadows!==w||b.numPointShadows!==A||b.numSpotShadows!==U||b.numSpotMaps!==I||b.numLightProbes!==B)&&(n.directional.length=y,n.spot.length=x,n.rectArea.length=v,n.point.length=M,n.hemi.length=E,n.directionalShadow.length=w,n.directionalShadowMap.length=w,n.pointShadow.length=A,n.pointShadowMap.length=A,n.spotShadow.length=U,n.spotShadowMap.length=U,n.directionalShadowMatrix.length=w,n.pointShadowMatrix.length=A,n.spotLightMatrix.length=U+I-L,n.spotLightMap.length=I,n.numSpotLightShadowsWithMaps=L,n.numLightProbes=B,b.directionalLength=y,b.pointLength=M,b.spotLength=x,b.rectAreaLength=v,b.hemiLength=E,b.numDirectionalShadows=w,b.numPointShadows=A,b.numSpotShadows=U,b.numSpotMaps=I,b.numLightProbes=B,n.version=RT++)}function u(h,f){let p=0,g=0,m=0,y=0,M=0;const x=f.matrixWorldInverse;for(let v=0,E=h.length;v<E;v++){const w=h[v];if(w.isDirectionalLight){const A=n.directional[p];A.direction.setFromMatrixPosition(w.matrixWorld),i.setFromMatrixPosition(w.target.matrixWorld),A.direction.sub(i),A.direction.transformDirection(x),p++}else if(w.isSpotLight){const A=n.spot[m];A.position.setFromMatrixPosition(w.matrixWorld),A.position.applyMatrix4(x),A.direction.setFromMatrixPosition(w.matrixWorld),i.setFromMatrixPosition(w.target.matrixWorld),A.direction.sub(i),A.direction.transformDirection(x),m++}else if(w.isRectAreaLight){const A=n.rectArea[y];A.position.setFromMatrixPosition(w.matrixWorld),A.position.applyMatrix4(x),l.identity(),s.copy(w.matrixWorld),s.premultiply(x),l.extractRotation(s),A.halfWidth.set(w.width*.5,0,0),A.halfHeight.set(0,w.height*.5,0),A.halfWidth.applyMatrix4(l),A.halfHeight.applyMatrix4(l),y++}else if(w.isPointLight){const A=n.point[g];A.position.setFromMatrixPosition(w.matrixWorld),A.position.applyMatrix4(x),g++}else if(w.isHemisphereLight){const A=n.hemi[M];A.direction.setFromMatrixPosition(w.matrixWorld),A.direction.transformDirection(x),M++}}}return{setup:c,setupView:u,state:n}}function Vg(r){const e=new IT(r),t=[],n=[];function i(f){h.camera=f,t.length=0,n.length=0}function s(f){t.push(f)}function l(f){n.push(f)}function c(f){e.setup(t,f)}function u(f){e.setupView(t,f)}const h={lightsArray:t,shadowsArray:n,camera:null,lights:e,transmissionRenderTarget:{}};return{init:i,state:h,setupLights:c,setupLightsView:u,pushLight:s,pushShadow:l}}function LT(r){let e=new WeakMap;function t(i,s=0){const l=e.get(i);let c;return l===void 0?(c=new Vg(r),e.set(i,[c])):s>=l.length?(c=new Vg(r),l.push(c)):c=l[s],c}function n(){e=new WeakMap}return{get:t,dispose:n}}class tp extends _n{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=K_,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class np extends _n{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}const DT=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,NT=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function UT(r,e,t){let n=new el;const i=new ce,s=new ce,l=new It,c=new tp({depthPacking:Q_}),u=new np,h={},f=t.maxTextureSize,p={[cr]:An,[An]:cr,[Fi]:Fi},g=new Ti({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new ce},radius:{value:4}},vertexShader:DT,fragmentShader:NT}),m=g.clone();m.defines.HORIZONTAL_PASS=1;const y=new _t;y.setAttribute("position",new Lt(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const M=new sn(y,g),x=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=mu;let v=this.type;this.render=function(I,L,B){if(x.enabled===!1||x.autoUpdate===!1&&x.needsUpdate===!1||I.length===0)return;const R=r.getRenderTarget(),b=r.getActiveCubeFace(),z=r.getActiveMipmapLevel(),Y=r.state;Y.setBlending(lr),Y.buffers.color.setClear(1,1,1,1),Y.buffers.depth.setTest(!0),Y.setScissorTest(!1);const k=v!==Si&&this.type===Si,J=v===Si&&this.type!==Si;for(let se=0,le=I.length;se<le;se++){const xe=I[se],H=xe.shadow;if(H===void 0||H.autoUpdate===!1&&H.needsUpdate===!1)continue;i.copy(H.mapSize);const te=H.getFrameExtents();if(i.multiply(te),s.copy(H.mapSize),(i.x>f||i.y>f)&&(i.x>f&&(s.x=Math.floor(f/te.x),i.x=s.x*te.x,H.mapSize.x=s.x),i.y>f&&(s.y=Math.floor(f/te.y),i.y=s.y*te.y,H.mapSize.y=s.y)),H.map===null||k===!0||J===!0){const fe=this.type!==Si?{minFilter:mn,magFilter:mn}:{};H.map!==null&&H.map.dispose(),H.map=new Ei(i.x,i.y,fe),H.map.texture.name=xe.name+".shadowMap",H.camera.updateProjectionMatrix()}r.setRenderTarget(H.map),r.clear();const j=H.getViewportCount();for(let fe=0;fe<j;fe++){const Le=H.getViewport(fe);l.set(s.x*Le.x,s.y*Le.y,s.x*Le.z,s.y*Le.w),Y.viewport(l),H.updateMatrices(xe,fe),n=H.getFrustum(),A(L,B,H.camera,xe,this.type)}H.isPointLightShadow!==!0&&this.type===Si&&E(H,B),H.needsUpdate=!1}v=this.type,x.needsUpdate=!1,r.setRenderTarget(R,b,z)};function E(I,L){const B=e.update(M);g.defines.VSM_SAMPLES!==I.blurSamples&&(g.defines.VSM_SAMPLES=I.blurSamples,m.defines.VSM_SAMPLES=I.blurSamples,g.needsUpdate=!0,m.needsUpdate=!0),I.mapPass===null&&(I.mapPass=new Ei(i.x,i.y)),g.uniforms.shadow_pass.value=I.map.texture,g.uniforms.resolution.value=I.mapSize,g.uniforms.radius.value=I.radius,r.setRenderTarget(I.mapPass),r.clear(),r.renderBufferDirect(L,null,B,g,M,null),m.uniforms.shadow_pass.value=I.mapPass.texture,m.uniforms.resolution.value=I.mapSize,m.uniforms.radius.value=I.radius,r.setRenderTarget(I.map),r.clear(),r.renderBufferDirect(L,null,B,m,M,null)}function w(I,L,B,R){let b=null;const z=B.isPointLight===!0?I.customDistanceMaterial:I.customDepthMaterial;if(z!==void 0)b=z;else if(b=B.isPointLight===!0?u:c,r.localClippingEnabled&&L.clipShadows===!0&&Array.isArray(L.clippingPlanes)&&L.clippingPlanes.length!==0||L.displacementMap&&L.displacementScale!==0||L.alphaMap&&L.alphaTest>0||L.map&&L.alphaTest>0){const Y=b.uuid,k=L.uuid;let J=h[Y];J===void 0&&(J={},h[Y]=J);let se=J[k];se===void 0&&(se=b.clone(),J[k]=se,L.addEventListener("dispose",U)),b=se}if(b.visible=L.visible,b.wireframe=L.wireframe,R===Si?b.side=L.shadowSide!==null?L.shadowSide:L.side:b.side=L.shadowSide!==null?L.shadowSide:p[L.side],b.alphaMap=L.alphaMap,b.alphaTest=L.alphaTest,b.map=L.map,b.clipShadows=L.clipShadows,b.clippingPlanes=L.clippingPlanes,b.clipIntersection=L.clipIntersection,b.displacementMap=L.displacementMap,b.displacementScale=L.displacementScale,b.displacementBias=L.displacementBias,b.wireframeLinewidth=L.wireframeLinewidth,b.linewidth=L.linewidth,B.isPointLight===!0&&b.isMeshDistanceMaterial===!0){const Y=r.properties.get(b);Y.light=B}return b}function A(I,L,B,R,b){if(I.visible===!1)return;if(I.layers.test(L.layers)&&(I.isMesh||I.isLine||I.isPoints)&&(I.castShadow||I.receiveShadow&&b===Si)&&(!I.frustumCulled||n.intersectsObject(I))){I.modelViewMatrix.multiplyMatrices(B.matrixWorldInverse,I.matrixWorld);const k=e.update(I),J=I.material;if(Array.isArray(J)){const se=k.groups;for(let le=0,xe=se.length;le<xe;le++){const H=se[le],te=J[H.materialIndex];if(te&&te.visible){const j=w(I,te,R,b);I.onBeforeShadow(r,I,L,B,k,j,H),r.renderBufferDirect(B,null,k,j,I,H),I.onAfterShadow(r,I,L,B,k,j,H)}}}else if(J.visible){const se=w(I,J,R,b);I.onBeforeShadow(r,I,L,B,k,se,null),r.renderBufferDirect(B,null,k,se,I,null),I.onAfterShadow(r,I,L,B,k,se,null)}}const Y=I.children;for(let k=0,J=Y.length;k<J;k++)A(Y[k],L,B,R,b)}function U(I){I.target.removeEventListener("dispose",U);for(const B in h){const R=h[B],b=I.target.uuid;b in R&&(R[b].dispose(),delete R[b])}}}function OT(r){function e(){let C=!1;const X=new It;let K=null;const ge=new It(0,0,0,0);return{setMask:function(Ee){K!==Ee&&!C&&(r.colorMask(Ee,Ee,Ee,Ee),K=Ee)},setLocked:function(Ee){C=Ee},setClear:function(Ee,ct,mt,Ut,Kt){Kt===!0&&(Ee*=Ut,ct*=Ut,mt*=Ut),X.set(Ee,ct,mt,Ut),ge.equals(X)===!1&&(r.clearColor(Ee,ct,mt,Ut),ge.copy(X))},reset:function(){C=!1,K=null,ge.set(-1,0,0,0)}}}function t(){let C=!1,X=null,K=null,ge=null;return{setTest:function(Ee){Ee?Re(r.DEPTH_TEST):ye(r.DEPTH_TEST)},setMask:function(Ee){X!==Ee&&!C&&(r.depthMask(Ee),X=Ee)},setFunc:function(Ee){if(K!==Ee){switch(Ee){case w_:r.depthFunc(r.NEVER);break;case E_:r.depthFunc(r.ALWAYS);break;case T_:r.depthFunc(r.LESS);break;case ba:r.depthFunc(r.LEQUAL);break;case A_:r.depthFunc(r.EQUAL);break;case b_:r.depthFunc(r.GEQUAL);break;case C_:r.depthFunc(r.GREATER);break;case R_:r.depthFunc(r.NOTEQUAL);break;default:r.depthFunc(r.LEQUAL)}K=Ee}},setLocked:function(Ee){C=Ee},setClear:function(Ee){ge!==Ee&&(r.clearDepth(Ee),ge=Ee)},reset:function(){C=!1,X=null,K=null,ge=null}}}function n(){let C=!1,X=null,K=null,ge=null,Ee=null,ct=null,mt=null,Ut=null,Kt=null;return{setTest:function(Mt){C||(Mt?Re(r.STENCIL_TEST):ye(r.STENCIL_TEST))},setMask:function(Mt){X!==Mt&&!C&&(r.stencilMask(Mt),X=Mt)},setFunc:function(Mt,kt,Dt){(K!==Mt||ge!==kt||Ee!==Dt)&&(r.stencilFunc(Mt,kt,Dt),K=Mt,ge=kt,Ee=Dt)},setOp:function(Mt,kt,Dt){(ct!==Mt||mt!==kt||Ut!==Dt)&&(r.stencilOp(Mt,kt,Dt),ct=Mt,mt=kt,Ut=Dt)},setLocked:function(Mt){C=Mt},setClear:function(Mt){Kt!==Mt&&(r.clearStencil(Mt),Kt=Mt)},reset:function(){C=!1,X=null,K=null,ge=null,Ee=null,ct=null,mt=null,Ut=null,Kt=null}}}const i=new e,s=new t,l=new n,c=new WeakMap,u=new WeakMap;let h={},f={},p=new WeakMap,g=[],m=null,y=!1,M=null,x=null,v=null,E=null,w=null,A=null,U=null,I=new Oe(0,0,0),L=0,B=!1,R=null,b=null,z=null,Y=null,k=null;const J=r.getParameter(r.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let se=!1,le=0;const xe=r.getParameter(r.VERSION);xe.indexOf("WebGL")!==-1?(le=parseFloat(/^WebGL (\d)/.exec(xe)[1]),se=le>=1):xe.indexOf("OpenGL ES")!==-1&&(le=parseFloat(/^OpenGL ES (\d)/.exec(xe)[1]),se=le>=2);let H=null,te={};const j=r.getParameter(r.SCISSOR_BOX),fe=r.getParameter(r.VIEWPORT),Le=new It().fromArray(j),Be=new It().fromArray(fe);function ne(C,X,K,ge){const Ee=new Uint8Array(4),ct=r.createTexture();r.bindTexture(C,ct),r.texParameteri(C,r.TEXTURE_MIN_FILTER,r.NEAREST),r.texParameteri(C,r.TEXTURE_MAG_FILTER,r.NEAREST);for(let mt=0;mt<K;mt++)C===r.TEXTURE_3D||C===r.TEXTURE_2D_ARRAY?r.texImage3D(X,0,r.RGBA,1,1,ge,0,r.RGBA,r.UNSIGNED_BYTE,Ee):r.texImage2D(X+mt,0,r.RGBA,1,1,0,r.RGBA,r.UNSIGNED_BYTE,Ee);return ct}const _e={};_e[r.TEXTURE_2D]=ne(r.TEXTURE_2D,r.TEXTURE_2D,1),_e[r.TEXTURE_CUBE_MAP]=ne(r.TEXTURE_CUBE_MAP,r.TEXTURE_CUBE_MAP_POSITIVE_X,6),_e[r.TEXTURE_2D_ARRAY]=ne(r.TEXTURE_2D_ARRAY,r.TEXTURE_2D_ARRAY,1,1),_e[r.TEXTURE_3D]=ne(r.TEXTURE_3D,r.TEXTURE_3D,1,1),i.setClear(0,0,0,1),s.setClear(1),l.setClear(0),Re(r.DEPTH_TEST),s.setFunc(ba),we(!1),me(Wf),Re(r.CULL_FACE),pe(lr);function Re(C){h[C]!==!0&&(r.enable(C),h[C]=!0)}function ye(C){h[C]!==!1&&(r.disable(C),h[C]=!1)}function nt(C,X){return f[C]!==X?(r.bindFramebuffer(C,X),f[C]=X,C===r.DRAW_FRAMEBUFFER&&(f[r.FRAMEBUFFER]=X),C===r.FRAMEBUFFER&&(f[r.DRAW_FRAMEBUFFER]=X),!0):!1}function it(C,X){let K=g,ge=!1;if(C){K=p.get(X),K===void 0&&(K=[],p.set(X,K));const Ee=C.textures;if(K.length!==Ee.length||K[0]!==r.COLOR_ATTACHMENT0){for(let ct=0,mt=Ee.length;ct<mt;ct++)K[ct]=r.COLOR_ATTACHMENT0+ct;K.length=Ee.length,ge=!0}}else K[0]!==r.BACK&&(K[0]=r.BACK,ge=!0);ge&&r.drawBuffers(K)}function W(C){return m!==C?(r.useProgram(C),m=C,!0):!1}const Qe={[Lr]:r.FUNC_ADD,[o_]:r.FUNC_SUBTRACT,[a_]:r.FUNC_REVERSE_SUBTRACT};Qe[l_]=r.MIN,Qe[c_]=r.MAX;const ae={[u_]:r.ZERO,[h_]:r.ONE,[f_]:r.SRC_COLOR,[ou]:r.SRC_ALPHA,[v_]:r.SRC_ALPHA_SATURATE,[g_]:r.DST_COLOR,[p_]:r.DST_ALPHA,[d_]:r.ONE_MINUS_SRC_COLOR,[au]:r.ONE_MINUS_SRC_ALPHA,[__]:r.ONE_MINUS_DST_COLOR,[m_]:r.ONE_MINUS_DST_ALPHA,[y_]:r.CONSTANT_COLOR,[x_]:r.ONE_MINUS_CONSTANT_COLOR,[S_]:r.CONSTANT_ALPHA,[M_]:r.ONE_MINUS_CONSTANT_ALPHA};function pe(C,X,K,ge,Ee,ct,mt,Ut,Kt,Mt){if(C===lr){y===!0&&(ye(r.BLEND),y=!1);return}if(y===!1&&(Re(r.BLEND),y=!0),C!==s_){if(C!==M||Mt!==B){if((x!==Lr||w!==Lr)&&(r.blendEquation(r.FUNC_ADD),x=Lr,w=Lr),Mt)switch(C){case vs:r.blendFuncSeparate(r.ONE,r.ONE_MINUS_SRC_ALPHA,r.ONE,r.ONE_MINUS_SRC_ALPHA);break;case su:r.blendFunc(r.ONE,r.ONE);break;case Xf:r.blendFuncSeparate(r.ZERO,r.ONE_MINUS_SRC_COLOR,r.ZERO,r.ONE);break;case Yf:r.blendFuncSeparate(r.ZERO,r.SRC_COLOR,r.ZERO,r.SRC_ALPHA);break;default:break}else switch(C){case vs:r.blendFuncSeparate(r.SRC_ALPHA,r.ONE_MINUS_SRC_ALPHA,r.ONE,r.ONE_MINUS_SRC_ALPHA);break;case su:r.blendFunc(r.SRC_ALPHA,r.ONE);break;case Xf:r.blendFuncSeparate(r.ZERO,r.ONE_MINUS_SRC_COLOR,r.ZERO,r.ONE);break;case Yf:r.blendFunc(r.ZERO,r.SRC_COLOR);break;default:break}v=null,E=null,A=null,U=null,I.set(0,0,0),L=0,M=C,B=Mt}return}Ee=Ee||X,ct=ct||K,mt=mt||ge,(X!==x||Ee!==w)&&(r.blendEquationSeparate(Qe[X],Qe[Ee]),x=X,w=Ee),(K!==v||ge!==E||ct!==A||mt!==U)&&(r.blendFuncSeparate(ae[K],ae[ge],ae[ct],ae[mt]),v=K,E=ge,A=ct,U=mt),(Ut.equals(I)===!1||Kt!==L)&&(r.blendColor(Ut.r,Ut.g,Ut.b,Kt),I.copy(Ut),L=Kt),M=C,B=!1}function he(C,X){C.side===Fi?ye(r.CULL_FACE):Re(r.CULL_FACE);let K=C.side===An;X&&(K=!K),we(K),C.blending===vs&&C.transparent===!1?pe(lr):pe(C.blending,C.blendEquation,C.blendSrc,C.blendDst,C.blendEquationAlpha,C.blendSrcAlpha,C.blendDstAlpha,C.blendColor,C.blendAlpha,C.premultipliedAlpha),s.setFunc(C.depthFunc),s.setTest(C.depthTest),s.setMask(C.depthWrite),i.setMask(C.colorWrite);const ge=C.stencilWrite;l.setTest(ge),ge&&(l.setMask(C.stencilWriteMask),l.setFunc(C.stencilFunc,C.stencilRef,C.stencilFuncMask),l.setOp(C.stencilFail,C.stencilZFail,C.stencilZPass)),qe(C.polygonOffset,C.polygonOffsetFactor,C.polygonOffsetUnits),C.alphaToCoverage===!0?Re(r.SAMPLE_ALPHA_TO_COVERAGE):ye(r.SAMPLE_ALPHA_TO_COVERAGE)}function we(C){R!==C&&(C?r.frontFace(r.CW):r.frontFace(r.CCW),R=C)}function me(C){C!==n_?(Re(r.CULL_FACE),C!==b&&(C===Wf?r.cullFace(r.BACK):C===i_?r.cullFace(r.FRONT):r.cullFace(r.FRONT_AND_BACK))):ye(r.CULL_FACE),b=C}function Ne(C){C!==z&&(se&&r.lineWidth(C),z=C)}function qe(C,X,K){C?(Re(r.POLYGON_OFFSET_FILL),(Y!==X||k!==K)&&(r.polygonOffset(X,K),Y=X,k=K)):ye(r.POLYGON_OFFSET_FILL)}function F(C){C?Re(r.SCISSOR_TEST):ye(r.SCISSOR_TEST)}function P(C){C===void 0&&(C=r.TEXTURE0+J-1),H!==C&&(r.activeTexture(C),H=C)}function Z(C,X,K){K===void 0&&(H===null?K=r.TEXTURE0+J-1:K=H);let ge=te[K];ge===void 0&&(ge={type:void 0,texture:void 0},te[K]=ge),(ge.type!==C||ge.texture!==X)&&(H!==K&&(r.activeTexture(K),H=K),r.bindTexture(C,X||_e[C]),ge.type=C,ge.texture=X)}function ue(){const C=te[H];C!==void 0&&C.type!==void 0&&(r.bindTexture(C.type,null),C.type=void 0,C.texture=void 0)}function ve(){try{r.compressedTexImage2D.apply(r,arguments)}catch{}}function de(){try{r.compressedTexImage3D.apply(r,arguments)}catch{}}function Xe(){try{r.texSubImage2D.apply(r,arguments)}catch{}}function Ae(){try{r.texSubImage3D.apply(r,arguments)}catch{}}function Te(){try{r.compressedTexSubImage2D.apply(r,arguments)}catch{}}function tt(){try{r.compressedTexSubImage3D.apply(r,arguments)}catch{}}function Me(){try{r.texStorage2D.apply(r,arguments)}catch{}}function Ve(){try{r.texStorage3D.apply(r,arguments)}catch{}}function pt(){try{r.texImage2D.apply(r,arguments)}catch{}}function Ze(){try{r.texImage3D.apply(r,arguments)}catch{}}function Fe(C){Le.equals(C)===!1&&(r.scissor(C.x,C.y,C.z,C.w),Le.copy(C))}function at(C){Be.equals(C)===!1&&(r.viewport(C.x,C.y,C.z,C.w),Be.copy(C))}function vt(C,X){let K=u.get(X);K===void 0&&(K=new WeakMap,u.set(X,K));let ge=K.get(C);ge===void 0&&(ge=r.getUniformBlockIndex(X,C.name),K.set(C,ge))}function Rt(C,X){const ge=u.get(X).get(C);c.get(X)!==ge&&(r.uniformBlockBinding(X,ge,C.__bindingPointIndex),c.set(X,ge))}function lt(){r.disable(r.BLEND),r.disable(r.CULL_FACE),r.disable(r.DEPTH_TEST),r.disable(r.POLYGON_OFFSET_FILL),r.disable(r.SCISSOR_TEST),r.disable(r.STENCIL_TEST),r.disable(r.SAMPLE_ALPHA_TO_COVERAGE),r.blendEquation(r.FUNC_ADD),r.blendFunc(r.ONE,r.ZERO),r.blendFuncSeparate(r.ONE,r.ZERO,r.ONE,r.ZERO),r.blendColor(0,0,0,0),r.colorMask(!0,!0,!0,!0),r.clearColor(0,0,0,0),r.depthMask(!0),r.depthFunc(r.LESS),r.clearDepth(1),r.stencilMask(4294967295),r.stencilFunc(r.ALWAYS,0,4294967295),r.stencilOp(r.KEEP,r.KEEP,r.KEEP),r.clearStencil(0),r.cullFace(r.BACK),r.frontFace(r.CCW),r.polygonOffset(0,0),r.activeTexture(r.TEXTURE0),r.bindFramebuffer(r.FRAMEBUFFER,null),r.bindFramebuffer(r.DRAW_FRAMEBUFFER,null),r.bindFramebuffer(r.READ_FRAMEBUFFER,null),r.useProgram(null),r.lineWidth(1),r.scissor(0,0,r.canvas.width,r.canvas.height),r.viewport(0,0,r.canvas.width,r.canvas.height),h={},H=null,te={},f={},p=new WeakMap,g=[],m=null,y=!1,M=null,x=null,v=null,E=null,w=null,A=null,U=null,I=new Oe(0,0,0),L=0,B=!1,R=null,b=null,z=null,Y=null,k=null,Le.set(0,0,r.canvas.width,r.canvas.height),Be.set(0,0,r.canvas.width,r.canvas.height),i.reset(),s.reset(),l.reset()}return{buffers:{color:i,depth:s,stencil:l},enable:Re,disable:ye,bindFramebuffer:nt,drawBuffers:it,useProgram:W,setBlending:pe,setMaterial:he,setFlipSided:we,setCullFace:me,setLineWidth:Ne,setPolygonOffset:qe,setScissorTest:F,activeTexture:P,bindTexture:Z,unbindTexture:ue,compressedTexImage2D:ve,compressedTexImage3D:de,texImage2D:pt,texImage3D:Ze,updateUBOMapping:vt,uniformBlockBinding:Rt,texStorage2D:Me,texStorage3D:Ve,texSubImage2D:Xe,texSubImage3D:Ae,compressedTexSubImage2D:Te,compressedTexSubImage3D:tt,scissor:Fe,viewport:at,reset:lt}}function FT(r,e,t,n,i,s,l){const c=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,u=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),h=new ce,f=new WeakMap;let p;const g=new WeakMap;let m=!1;try{m=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function y(F,P){return m?new OffscreenCanvas(F,P):ka("canvas")}function M(F,P,Z){let ue=1;const ve=qe(F);if((ve.width>Z||ve.height>Z)&&(ue=Z/Math.max(ve.width,ve.height)),ue<1)if(typeof HTMLImageElement<"u"&&F instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&F instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&F instanceof ImageBitmap||typeof VideoFrame<"u"&&F instanceof VideoFrame){const de=Math.floor(ue*ve.width),Xe=Math.floor(ue*ve.height);p===void 0&&(p=y(de,Xe));const Ae=P?y(de,Xe):p;return Ae.width=de,Ae.height=Xe,Ae.getContext("2d").drawImage(F,0,0,de,Xe),Ae}else return"data"in F,F;return F}function x(F){return F.generateMipmaps&&F.minFilter!==mn&&F.minFilter!==rn}function v(F){r.generateMipmap(F)}function E(F,P,Z,ue,ve=!1){if(F!==null&&r[F]!==void 0)return r[F];let de=P;if(P===r.RED&&(Z===r.FLOAT&&(de=r.R32F),Z===r.HALF_FLOAT&&(de=r.R16F),Z===r.UNSIGNED_BYTE&&(de=r.R8)),P===r.RED_INTEGER&&(Z===r.UNSIGNED_BYTE&&(de=r.R8UI),Z===r.UNSIGNED_SHORT&&(de=r.R16UI),Z===r.UNSIGNED_INT&&(de=r.R32UI),Z===r.BYTE&&(de=r.R8I),Z===r.SHORT&&(de=r.R16I),Z===r.INT&&(de=r.R32I)),P===r.RG&&(Z===r.FLOAT&&(de=r.RG32F),Z===r.HALF_FLOAT&&(de=r.RG16F),Z===r.UNSIGNED_BYTE&&(de=r.RG8)),P===r.RG_INTEGER&&(Z===r.UNSIGNED_BYTE&&(de=r.RG8UI),Z===r.UNSIGNED_SHORT&&(de=r.RG16UI),Z===r.UNSIGNED_INT&&(de=r.RG32UI),Z===r.BYTE&&(de=r.RG8I),Z===r.SHORT&&(de=r.RG16I),Z===r.INT&&(de=r.RG32I)),P===r.RGB&&Z===r.UNSIGNED_INT_5_9_9_9_REV&&(de=r.RGB9_E5),P===r.RGBA){const Xe=ve?Ua:Pt.getTransfer(ue);Z===r.FLOAT&&(de=r.RGBA32F),Z===r.HALF_FLOAT&&(de=r.RGBA16F),Z===r.UNSIGNED_BYTE&&(de=Xe===Ot?r.SRGB8_ALPHA8:r.RGBA8),Z===r.UNSIGNED_SHORT_4_4_4_4&&(de=r.RGBA4),Z===r.UNSIGNED_SHORT_5_5_5_1&&(de=r.RGB5_A1)}return(de===r.R16F||de===r.R32F||de===r.RG16F||de===r.RG32F||de===r.RGBA16F||de===r.RGBA32F)&&e.get("EXT_color_buffer_float"),de}function w(F,P){return x(F)===!0||F.isFramebufferTexture&&F.minFilter!==mn&&F.minFilter!==rn?Math.log2(Math.max(P.width,P.height))+1:F.mipmaps!==void 0&&F.mipmaps.length>0?F.mipmaps.length:F.isCompressedTexture&&Array.isArray(F.image)?P.mipmaps.length:1}function A(F){const P=F.target;P.removeEventListener("dispose",A),I(P),P.isVideoTexture&&f.delete(P)}function U(F){const P=F.target;P.removeEventListener("dispose",U),B(P)}function I(F){const P=n.get(F);if(P.__webglInit===void 0)return;const Z=F.source,ue=g.get(Z);if(ue){const ve=ue[P.__cacheKey];ve.usedTimes--,ve.usedTimes===0&&L(F),Object.keys(ue).length===0&&g.delete(Z)}n.remove(F)}function L(F){const P=n.get(F);r.deleteTexture(P.__webglTexture);const Z=F.source,ue=g.get(Z);delete ue[P.__cacheKey],l.memory.textures--}function B(F){const P=n.get(F);if(F.depthTexture&&F.depthTexture.dispose(),F.isWebGLCubeRenderTarget)for(let ue=0;ue<6;ue++){if(Array.isArray(P.__webglFramebuffer[ue]))for(let ve=0;ve<P.__webglFramebuffer[ue].length;ve++)r.deleteFramebuffer(P.__webglFramebuffer[ue][ve]);else r.deleteFramebuffer(P.__webglFramebuffer[ue]);P.__webglDepthbuffer&&r.deleteRenderbuffer(P.__webglDepthbuffer[ue])}else{if(Array.isArray(P.__webglFramebuffer))for(let ue=0;ue<P.__webglFramebuffer.length;ue++)r.deleteFramebuffer(P.__webglFramebuffer[ue]);else r.deleteFramebuffer(P.__webglFramebuffer);if(P.__webglDepthbuffer&&r.deleteRenderbuffer(P.__webglDepthbuffer),P.__webglMultisampledFramebuffer&&r.deleteFramebuffer(P.__webglMultisampledFramebuffer),P.__webglColorRenderbuffer)for(let ue=0;ue<P.__webglColorRenderbuffer.length;ue++)P.__webglColorRenderbuffer[ue]&&r.deleteRenderbuffer(P.__webglColorRenderbuffer[ue]);P.__webglDepthRenderbuffer&&r.deleteRenderbuffer(P.__webglDepthRenderbuffer)}const Z=F.textures;for(let ue=0,ve=Z.length;ue<ve;ue++){const de=n.get(Z[ue]);de.__webglTexture&&(r.deleteTexture(de.__webglTexture),l.memory.textures--),n.remove(Z[ue])}n.remove(F)}let R=0;function b(){R=0}function z(){const F=R;return F>=i.maxTextures,R+=1,F}function Y(F){const P=[];return P.push(F.wrapS),P.push(F.wrapT),P.push(F.wrapR||0),P.push(F.magFilter),P.push(F.minFilter),P.push(F.anisotropy),P.push(F.internalFormat),P.push(F.format),P.push(F.type),P.push(F.generateMipmaps),P.push(F.premultiplyAlpha),P.push(F.flipY),P.push(F.unpackAlignment),P.push(F.colorSpace),P.join()}function k(F,P){const Z=n.get(F);if(F.isVideoTexture&&me(F),F.isRenderTargetTexture===!1&&F.version>0&&Z.__version!==F.version){const ue=F.image;if(ue!==null){if(ue.complete!==!1){Le(Z,F,P);return}}}t.bindTexture(r.TEXTURE_2D,Z.__webglTexture,r.TEXTURE0+P)}function J(F,P){const Z=n.get(F);if(F.version>0&&Z.__version!==F.version){Le(Z,F,P);return}t.bindTexture(r.TEXTURE_2D_ARRAY,Z.__webglTexture,r.TEXTURE0+P)}function se(F,P){const Z=n.get(F);if(F.version>0&&Z.__version!==F.version){Le(Z,F,P);return}t.bindTexture(r.TEXTURE_3D,Z.__webglTexture,r.TEXTURE0+P)}function le(F,P){const Z=n.get(F);if(F.version>0&&Z.__version!==F.version){Be(Z,F,P);return}t.bindTexture(r.TEXTURE_CUBE_MAP,Z.__webglTexture,r.TEXTURE0+P)}const xe={[Pa]:r.REPEAT,[fi]:r.CLAMP_TO_EDGE,[Ia]:r.MIRRORED_REPEAT},H={[mn]:r.NEAREST,[zd]:r.NEAREST_MIPMAP_NEAREST,[So]:r.NEAREST_MIPMAP_LINEAR,[rn]:r.LINEAR,[wa]:r.LINEAR_MIPMAP_NEAREST,[zi]:r.LINEAR_MIPMAP_LINEAR},te={[ev]:r.NEVER,[ov]:r.ALWAYS,[tv]:r.LESS,[Zd]:r.LEQUAL,[nv]:r.EQUAL,[sv]:r.GEQUAL,[iv]:r.GREATER,[rv]:r.NOTEQUAL};function j(F,P){if(P.type===di&&e.has("OES_texture_float_linear")===!1&&(P.magFilter===rn||P.magFilter===wa||P.magFilter===So||P.magFilter===zi||P.minFilter===rn||P.minFilter===wa||P.minFilter===So||P.minFilter),r.texParameteri(F,r.TEXTURE_WRAP_S,xe[P.wrapS]),r.texParameteri(F,r.TEXTURE_WRAP_T,xe[P.wrapT]),(F===r.TEXTURE_3D||F===r.TEXTURE_2D_ARRAY)&&r.texParameteri(F,r.TEXTURE_WRAP_R,xe[P.wrapR]),r.texParameteri(F,r.TEXTURE_MAG_FILTER,H[P.magFilter]),r.texParameteri(F,r.TEXTURE_MIN_FILTER,H[P.minFilter]),P.compareFunction&&(r.texParameteri(F,r.TEXTURE_COMPARE_MODE,r.COMPARE_REF_TO_TEXTURE),r.texParameteri(F,r.TEXTURE_COMPARE_FUNC,te[P.compareFunction])),e.has("EXT_texture_filter_anisotropic")===!0){if(P.magFilter===mn||P.minFilter!==So&&P.minFilter!==zi||P.type===di&&e.has("OES_texture_float_linear")===!1)return;if(P.anisotropy>1||n.get(P).__currentAnisotropy){const Z=e.get("EXT_texture_filter_anisotropic");r.texParameterf(F,Z.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(P.anisotropy,i.getMaxAnisotropy())),n.get(P).__currentAnisotropy=P.anisotropy}}}function fe(F,P){let Z=!1;F.__webglInit===void 0&&(F.__webglInit=!0,P.addEventListener("dispose",A));const ue=P.source;let ve=g.get(ue);ve===void 0&&(ve={},g.set(ue,ve));const de=Y(P);if(de!==F.__cacheKey){ve[de]===void 0&&(ve[de]={texture:r.createTexture(),usedTimes:0},l.memory.textures++,Z=!0),ve[de].usedTimes++;const Xe=ve[F.__cacheKey];Xe!==void 0&&(ve[F.__cacheKey].usedTimes--,Xe.usedTimes===0&&L(P)),F.__cacheKey=de,F.__webglTexture=ve[de].texture}return Z}function Le(F,P,Z){let ue=r.TEXTURE_2D;(P.isDataArrayTexture||P.isCompressedArrayTexture)&&(ue=r.TEXTURE_2D_ARRAY),P.isData3DTexture&&(ue=r.TEXTURE_3D);const ve=fe(F,P),de=P.source;t.bindTexture(ue,F.__webglTexture,r.TEXTURE0+Z);const Xe=n.get(de);if(de.version!==Xe.__version||ve===!0){t.activeTexture(r.TEXTURE0+Z);const Ae=Pt.getPrimaries(Pt.workingColorSpace),Te=P.colorSpace===sr?null:Pt.getPrimaries(P.colorSpace),tt=P.colorSpace===sr||Ae===Te?r.NONE:r.BROWSER_DEFAULT_WEBGL;r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,P.flipY),r.pixelStorei(r.UNPACK_PREMULTIPLY_ALPHA_WEBGL,P.premultiplyAlpha),r.pixelStorei(r.UNPACK_ALIGNMENT,P.unpackAlignment),r.pixelStorei(r.UNPACK_COLORSPACE_CONVERSION_WEBGL,tt);let Me=M(P.image,!1,i.maxTextureSize);Me=Ne(P,Me);const Ve=s.convert(P.format,P.colorSpace),pt=s.convert(P.type);let Ze=E(P.internalFormat,Ve,pt,P.colorSpace,P.isVideoTexture);j(ue,P);let Fe;const at=P.mipmaps,vt=P.isVideoTexture!==!0,Rt=Xe.__version===void 0||ve===!0,lt=de.dataReady,C=w(P,Me);if(P.isDepthTexture)Ze=r.DEPTH_COMPONENT16,P.type===di?Ze=r.DEPTH_COMPONENT32F:P.type===ws?Ze=r.DEPTH_COMPONENT24:P.type===Uo&&(Ze=r.DEPTH24_STENCIL8),Rt&&(vt?t.texStorage2D(r.TEXTURE_2D,1,Ze,Me.width,Me.height):t.texImage2D(r.TEXTURE_2D,0,Ze,Me.width,Me.height,0,Ve,pt,null));else if(P.isDataTexture)if(at.length>0){vt&&Rt&&t.texStorage2D(r.TEXTURE_2D,C,Ze,at[0].width,at[0].height);for(let X=0,K=at.length;X<K;X++)Fe=at[X],vt?lt&&t.texSubImage2D(r.TEXTURE_2D,X,0,0,Fe.width,Fe.height,Ve,pt,Fe.data):t.texImage2D(r.TEXTURE_2D,X,Ze,Fe.width,Fe.height,0,Ve,pt,Fe.data);P.generateMipmaps=!1}else vt?(Rt&&t.texStorage2D(r.TEXTURE_2D,C,Ze,Me.width,Me.height),lt&&t.texSubImage2D(r.TEXTURE_2D,0,0,0,Me.width,Me.height,Ve,pt,Me.data)):t.texImage2D(r.TEXTURE_2D,0,Ze,Me.width,Me.height,0,Ve,pt,Me.data);else if(P.isCompressedTexture)if(P.isCompressedArrayTexture){vt&&Rt&&t.texStorage3D(r.TEXTURE_2D_ARRAY,C,Ze,at[0].width,at[0].height,Me.depth);for(let X=0,K=at.length;X<K;X++)Fe=at[X],P.format!==Gn?Ve!==null&&(vt?lt&&t.compressedTexSubImage3D(r.TEXTURE_2D_ARRAY,X,0,0,0,Fe.width,Fe.height,Me.depth,Ve,Fe.data,0,0):t.compressedTexImage3D(r.TEXTURE_2D_ARRAY,X,Ze,Fe.width,Fe.height,Me.depth,0,Fe.data,0,0)):vt?lt&&t.texSubImage3D(r.TEXTURE_2D_ARRAY,X,0,0,0,Fe.width,Fe.height,Me.depth,Ve,pt,Fe.data):t.texImage3D(r.TEXTURE_2D_ARRAY,X,Ze,Fe.width,Fe.height,Me.depth,0,Ve,pt,Fe.data)}else{vt&&Rt&&t.texStorage2D(r.TEXTURE_2D,C,Ze,at[0].width,at[0].height);for(let X=0,K=at.length;X<K;X++)Fe=at[X],P.format!==Gn?Ve!==null&&(vt?lt&&t.compressedTexSubImage2D(r.TEXTURE_2D,X,0,0,Fe.width,Fe.height,Ve,Fe.data):t.compressedTexImage2D(r.TEXTURE_2D,X,Ze,Fe.width,Fe.height,0,Fe.data)):vt?lt&&t.texSubImage2D(r.TEXTURE_2D,X,0,0,Fe.width,Fe.height,Ve,pt,Fe.data):t.texImage2D(r.TEXTURE_2D,X,Ze,Fe.width,Fe.height,0,Ve,pt,Fe.data)}else if(P.isDataArrayTexture)vt?(Rt&&t.texStorage3D(r.TEXTURE_2D_ARRAY,C,Ze,Me.width,Me.height,Me.depth),lt&&t.texSubImage3D(r.TEXTURE_2D_ARRAY,0,0,0,0,Me.width,Me.height,Me.depth,Ve,pt,Me.data)):t.texImage3D(r.TEXTURE_2D_ARRAY,0,Ze,Me.width,Me.height,Me.depth,0,Ve,pt,Me.data);else if(P.isData3DTexture)vt?(Rt&&t.texStorage3D(r.TEXTURE_3D,C,Ze,Me.width,Me.height,Me.depth),lt&&t.texSubImage3D(r.TEXTURE_3D,0,0,0,0,Me.width,Me.height,Me.depth,Ve,pt,Me.data)):t.texImage3D(r.TEXTURE_3D,0,Ze,Me.width,Me.height,Me.depth,0,Ve,pt,Me.data);else if(P.isFramebufferTexture){if(Rt)if(vt)t.texStorage2D(r.TEXTURE_2D,C,Ze,Me.width,Me.height);else{let X=Me.width,K=Me.height;for(let ge=0;ge<C;ge++)t.texImage2D(r.TEXTURE_2D,ge,Ze,X,K,0,Ve,pt,null),X>>=1,K>>=1}}else if(at.length>0){if(vt&&Rt){const X=qe(at[0]);t.texStorage2D(r.TEXTURE_2D,C,Ze,X.width,X.height)}for(let X=0,K=at.length;X<K;X++)Fe=at[X],vt?lt&&t.texSubImage2D(r.TEXTURE_2D,X,0,0,Ve,pt,Fe):t.texImage2D(r.TEXTURE_2D,X,Ze,Ve,pt,Fe);P.generateMipmaps=!1}else if(vt){if(Rt){const X=qe(Me);t.texStorage2D(r.TEXTURE_2D,C,Ze,X.width,X.height)}lt&&t.texSubImage2D(r.TEXTURE_2D,0,0,0,Ve,pt,Me)}else t.texImage2D(r.TEXTURE_2D,0,Ze,Ve,pt,Me);x(P)&&v(ue),Xe.__version=de.version,P.onUpdate&&P.onUpdate(P)}F.__version=P.version}function Be(F,P,Z){if(P.image.length!==6)return;const ue=fe(F,P),ve=P.source;t.bindTexture(r.TEXTURE_CUBE_MAP,F.__webglTexture,r.TEXTURE0+Z);const de=n.get(ve);if(ve.version!==de.__version||ue===!0){t.activeTexture(r.TEXTURE0+Z);const Xe=Pt.getPrimaries(Pt.workingColorSpace),Ae=P.colorSpace===sr?null:Pt.getPrimaries(P.colorSpace),Te=P.colorSpace===sr||Xe===Ae?r.NONE:r.BROWSER_DEFAULT_WEBGL;r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,P.flipY),r.pixelStorei(r.UNPACK_PREMULTIPLY_ALPHA_WEBGL,P.premultiplyAlpha),r.pixelStorei(r.UNPACK_ALIGNMENT,P.unpackAlignment),r.pixelStorei(r.UNPACK_COLORSPACE_CONVERSION_WEBGL,Te);const tt=P.isCompressedTexture||P.image[0].isCompressedTexture,Me=P.image[0]&&P.image[0].isDataTexture,Ve=[];for(let K=0;K<6;K++)!tt&&!Me?Ve[K]=M(P.image[K],!0,i.maxCubemapSize):Ve[K]=Me?P.image[K].image:P.image[K],Ve[K]=Ne(P,Ve[K]);const pt=Ve[0],Ze=s.convert(P.format,P.colorSpace),Fe=s.convert(P.type),at=E(P.internalFormat,Ze,Fe,P.colorSpace),vt=P.isVideoTexture!==!0,Rt=de.__version===void 0||ue===!0,lt=ve.dataReady;let C=w(P,pt);j(r.TEXTURE_CUBE_MAP,P);let X;if(tt){vt&&Rt&&t.texStorage2D(r.TEXTURE_CUBE_MAP,C,at,pt.width,pt.height);for(let K=0;K<6;K++){X=Ve[K].mipmaps;for(let ge=0;ge<X.length;ge++){const Ee=X[ge];P.format!==Gn?Ze!==null&&(vt?lt&&t.compressedTexSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+K,ge,0,0,Ee.width,Ee.height,Ze,Ee.data):t.compressedTexImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+K,ge,at,Ee.width,Ee.height,0,Ee.data)):vt?lt&&t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+K,ge,0,0,Ee.width,Ee.height,Ze,Fe,Ee.data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+K,ge,at,Ee.width,Ee.height,0,Ze,Fe,Ee.data)}}}else{if(X=P.mipmaps,vt&&Rt){X.length>0&&C++;const K=qe(Ve[0]);t.texStorage2D(r.TEXTURE_CUBE_MAP,C,at,K.width,K.height)}for(let K=0;K<6;K++)if(Me){vt?lt&&t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+K,0,0,0,Ve[K].width,Ve[K].height,Ze,Fe,Ve[K].data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+K,0,at,Ve[K].width,Ve[K].height,0,Ze,Fe,Ve[K].data);for(let ge=0;ge<X.length;ge++){const ct=X[ge].image[K].image;vt?lt&&t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+K,ge+1,0,0,ct.width,ct.height,Ze,Fe,ct.data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+K,ge+1,at,ct.width,ct.height,0,Ze,Fe,ct.data)}}else{vt?lt&&t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+K,0,0,0,Ze,Fe,Ve[K]):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+K,0,at,Ze,Fe,Ve[K]);for(let ge=0;ge<X.length;ge++){const Ee=X[ge];vt?lt&&t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+K,ge+1,0,0,Ze,Fe,Ee.image[K]):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+K,ge+1,at,Ze,Fe,Ee.image[K])}}}x(P)&&v(r.TEXTURE_CUBE_MAP),de.__version=ve.version,P.onUpdate&&P.onUpdate(P)}F.__version=P.version}function ne(F,P,Z,ue,ve,de){const Xe=s.convert(Z.format,Z.colorSpace),Ae=s.convert(Z.type),Te=E(Z.internalFormat,Xe,Ae,Z.colorSpace);if(!n.get(P).__hasExternalTextures){const Me=Math.max(1,P.width>>de),Ve=Math.max(1,P.height>>de);ve===r.TEXTURE_3D||ve===r.TEXTURE_2D_ARRAY?t.texImage3D(ve,de,Te,Me,Ve,P.depth,0,Xe,Ae,null):t.texImage2D(ve,de,Te,Me,Ve,0,Xe,Ae,null)}t.bindFramebuffer(r.FRAMEBUFFER,F),we(P)?c.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,ue,ve,n.get(Z).__webglTexture,0,he(P)):(ve===r.TEXTURE_2D||ve>=r.TEXTURE_CUBE_MAP_POSITIVE_X&&ve<=r.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&r.framebufferTexture2D(r.FRAMEBUFFER,ue,ve,n.get(Z).__webglTexture,de),t.bindFramebuffer(r.FRAMEBUFFER,null)}function _e(F,P,Z){if(r.bindRenderbuffer(r.RENDERBUFFER,F),P.depthBuffer&&!P.stencilBuffer){let ue=r.DEPTH_COMPONENT24;if(Z||we(P)){const ve=P.depthTexture;ve&&ve.isDepthTexture&&(ve.type===di?ue=r.DEPTH_COMPONENT32F:ve.type===ws&&(ue=r.DEPTH_COMPONENT24));const de=he(P);we(P)?c.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,de,ue,P.width,P.height):r.renderbufferStorageMultisample(r.RENDERBUFFER,de,ue,P.width,P.height)}else r.renderbufferStorage(r.RENDERBUFFER,ue,P.width,P.height);r.framebufferRenderbuffer(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.RENDERBUFFER,F)}else if(P.depthBuffer&&P.stencilBuffer){const ue=he(P);Z&&we(P)===!1?r.renderbufferStorageMultisample(r.RENDERBUFFER,ue,r.DEPTH24_STENCIL8,P.width,P.height):we(P)?c.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,ue,r.DEPTH24_STENCIL8,P.width,P.height):r.renderbufferStorage(r.RENDERBUFFER,r.DEPTH_STENCIL,P.width,P.height),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.RENDERBUFFER,F)}else{const ue=P.textures;for(let ve=0;ve<ue.length;ve++){const de=ue[ve],Xe=s.convert(de.format,de.colorSpace),Ae=s.convert(de.type),Te=E(de.internalFormat,Xe,Ae,de.colorSpace),tt=he(P);Z&&we(P)===!1?r.renderbufferStorageMultisample(r.RENDERBUFFER,tt,Te,P.width,P.height):we(P)?c.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,tt,Te,P.width,P.height):r.renderbufferStorage(r.RENDERBUFFER,Te,P.width,P.height)}}r.bindRenderbuffer(r.RENDERBUFFER,null)}function Re(F,P){if(P&&P.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(r.FRAMEBUFFER,F),!(P.depthTexture&&P.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!n.get(P.depthTexture).__webglTexture||P.depthTexture.image.width!==P.width||P.depthTexture.image.height!==P.height)&&(P.depthTexture.image.width=P.width,P.depthTexture.image.height=P.height,P.depthTexture.needsUpdate=!0),k(P.depthTexture,0);const ue=n.get(P.depthTexture).__webglTexture,ve=he(P);if(P.depthTexture.format===ys)we(P)?c.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.TEXTURE_2D,ue,0,ve):r.framebufferTexture2D(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.TEXTURE_2D,ue,0);else if(P.depthTexture.format===Ro)we(P)?c.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.TEXTURE_2D,ue,0,ve):r.framebufferTexture2D(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.TEXTURE_2D,ue,0);else throw new Error("Unknown depthTexture format")}function ye(F){const P=n.get(F),Z=F.isWebGLCubeRenderTarget===!0;if(F.depthTexture&&!P.__autoAllocateDepthBuffer){if(Z)throw new Error("target.depthTexture not supported in Cube render targets");Re(P.__webglFramebuffer,F)}else if(Z){P.__webglDepthbuffer=[];for(let ue=0;ue<6;ue++)t.bindFramebuffer(r.FRAMEBUFFER,P.__webglFramebuffer[ue]),P.__webglDepthbuffer[ue]=r.createRenderbuffer(),_e(P.__webglDepthbuffer[ue],F,!1)}else t.bindFramebuffer(r.FRAMEBUFFER,P.__webglFramebuffer),P.__webglDepthbuffer=r.createRenderbuffer(),_e(P.__webglDepthbuffer,F,!1);t.bindFramebuffer(r.FRAMEBUFFER,null)}function nt(F,P,Z){const ue=n.get(F);P!==void 0&&ne(ue.__webglFramebuffer,F,F.texture,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,0),Z!==void 0&&ye(F)}function it(F){const P=F.texture,Z=n.get(F),ue=n.get(P);F.addEventListener("dispose",U);const ve=F.textures,de=F.isWebGLCubeRenderTarget===!0,Xe=ve.length>1;if(Xe||(ue.__webglTexture===void 0&&(ue.__webglTexture=r.createTexture()),ue.__version=P.version,l.memory.textures++),de){Z.__webglFramebuffer=[];for(let Ae=0;Ae<6;Ae++)if(P.mipmaps&&P.mipmaps.length>0){Z.__webglFramebuffer[Ae]=[];for(let Te=0;Te<P.mipmaps.length;Te++)Z.__webglFramebuffer[Ae][Te]=r.createFramebuffer()}else Z.__webglFramebuffer[Ae]=r.createFramebuffer()}else{if(P.mipmaps&&P.mipmaps.length>0){Z.__webglFramebuffer=[];for(let Ae=0;Ae<P.mipmaps.length;Ae++)Z.__webglFramebuffer[Ae]=r.createFramebuffer()}else Z.__webglFramebuffer=r.createFramebuffer();if(Xe)for(let Ae=0,Te=ve.length;Ae<Te;Ae++){const tt=n.get(ve[Ae]);tt.__webglTexture===void 0&&(tt.__webglTexture=r.createTexture(),l.memory.textures++)}if(F.samples>0&&we(F)===!1){Z.__webglMultisampledFramebuffer=r.createFramebuffer(),Z.__webglColorRenderbuffer=[],t.bindFramebuffer(r.FRAMEBUFFER,Z.__webglMultisampledFramebuffer);for(let Ae=0;Ae<ve.length;Ae++){const Te=ve[Ae];Z.__webglColorRenderbuffer[Ae]=r.createRenderbuffer(),r.bindRenderbuffer(r.RENDERBUFFER,Z.__webglColorRenderbuffer[Ae]);const tt=s.convert(Te.format,Te.colorSpace),Me=s.convert(Te.type),Ve=E(Te.internalFormat,tt,Me,Te.colorSpace,F.isXRRenderTarget===!0),pt=he(F);r.renderbufferStorageMultisample(r.RENDERBUFFER,pt,Ve,F.width,F.height),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+Ae,r.RENDERBUFFER,Z.__webglColorRenderbuffer[Ae])}r.bindRenderbuffer(r.RENDERBUFFER,null),F.depthBuffer&&(Z.__webglDepthRenderbuffer=r.createRenderbuffer(),_e(Z.__webglDepthRenderbuffer,F,!0)),t.bindFramebuffer(r.FRAMEBUFFER,null)}}if(de){t.bindTexture(r.TEXTURE_CUBE_MAP,ue.__webglTexture),j(r.TEXTURE_CUBE_MAP,P);for(let Ae=0;Ae<6;Ae++)if(P.mipmaps&&P.mipmaps.length>0)for(let Te=0;Te<P.mipmaps.length;Te++)ne(Z.__webglFramebuffer[Ae][Te],F,P,r.COLOR_ATTACHMENT0,r.TEXTURE_CUBE_MAP_POSITIVE_X+Ae,Te);else ne(Z.__webglFramebuffer[Ae],F,P,r.COLOR_ATTACHMENT0,r.TEXTURE_CUBE_MAP_POSITIVE_X+Ae,0);x(P)&&v(r.TEXTURE_CUBE_MAP),t.unbindTexture()}else if(Xe){for(let Ae=0,Te=ve.length;Ae<Te;Ae++){const tt=ve[Ae],Me=n.get(tt);t.bindTexture(r.TEXTURE_2D,Me.__webglTexture),j(r.TEXTURE_2D,tt),ne(Z.__webglFramebuffer,F,tt,r.COLOR_ATTACHMENT0+Ae,r.TEXTURE_2D,0),x(tt)&&v(r.TEXTURE_2D)}t.unbindTexture()}else{let Ae=r.TEXTURE_2D;if((F.isWebGL3DRenderTarget||F.isWebGLArrayRenderTarget)&&(Ae=F.isWebGL3DRenderTarget?r.TEXTURE_3D:r.TEXTURE_2D_ARRAY),t.bindTexture(Ae,ue.__webglTexture),j(Ae,P),P.mipmaps&&P.mipmaps.length>0)for(let Te=0;Te<P.mipmaps.length;Te++)ne(Z.__webglFramebuffer[Te],F,P,r.COLOR_ATTACHMENT0,Ae,Te);else ne(Z.__webglFramebuffer,F,P,r.COLOR_ATTACHMENT0,Ae,0);x(P)&&v(Ae),t.unbindTexture()}F.depthBuffer&&ye(F)}function W(F){const P=F.textures;for(let Z=0,ue=P.length;Z<ue;Z++){const ve=P[Z];if(x(ve)){const de=F.isWebGLCubeRenderTarget?r.TEXTURE_CUBE_MAP:r.TEXTURE_2D,Xe=n.get(ve).__webglTexture;t.bindTexture(de,Xe),v(de),t.unbindTexture()}}}const Qe=[],ae=[];function pe(F){if(F.samples>0){if(we(F)===!1){const P=F.textures,Z=F.width,ue=F.height;let ve=r.COLOR_BUFFER_BIT;const de=F.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT,Xe=n.get(F),Ae=P.length>1;if(Ae)for(let Te=0;Te<P.length;Te++)t.bindFramebuffer(r.FRAMEBUFFER,Xe.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+Te,r.RENDERBUFFER,null),t.bindFramebuffer(r.FRAMEBUFFER,Xe.__webglFramebuffer),r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0+Te,r.TEXTURE_2D,null,0);t.bindFramebuffer(r.READ_FRAMEBUFFER,Xe.__webglMultisampledFramebuffer),t.bindFramebuffer(r.DRAW_FRAMEBUFFER,Xe.__webglFramebuffer);for(let Te=0;Te<P.length;Te++){if(F.resolveDepthBuffer&&(F.depthBuffer&&(ve|=r.DEPTH_BUFFER_BIT),F.stencilBuffer&&F.resolveStencilBuffer&&(ve|=r.STENCIL_BUFFER_BIT)),Ae){r.framebufferRenderbuffer(r.READ_FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.RENDERBUFFER,Xe.__webglColorRenderbuffer[Te]);const tt=n.get(P[Te]).__webglTexture;r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,tt,0)}r.blitFramebuffer(0,0,Z,ue,0,0,Z,ue,ve,r.NEAREST),u===!0&&(Qe.length=0,ae.length=0,Qe.push(r.COLOR_ATTACHMENT0+Te),F.depthBuffer&&F.resolveDepthBuffer===!1&&(Qe.push(de),ae.push(de),r.invalidateFramebuffer(r.DRAW_FRAMEBUFFER,ae)),r.invalidateFramebuffer(r.READ_FRAMEBUFFER,Qe))}if(t.bindFramebuffer(r.READ_FRAMEBUFFER,null),t.bindFramebuffer(r.DRAW_FRAMEBUFFER,null),Ae)for(let Te=0;Te<P.length;Te++){t.bindFramebuffer(r.FRAMEBUFFER,Xe.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+Te,r.RENDERBUFFER,Xe.__webglColorRenderbuffer[Te]);const tt=n.get(P[Te]).__webglTexture;t.bindFramebuffer(r.FRAMEBUFFER,Xe.__webglFramebuffer),r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0+Te,r.TEXTURE_2D,tt,0)}t.bindFramebuffer(r.DRAW_FRAMEBUFFER,Xe.__webglMultisampledFramebuffer)}else if(F.depthBuffer&&F.resolveDepthBuffer===!1&&u){const P=F.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT;r.invalidateFramebuffer(r.DRAW_FRAMEBUFFER,[P])}}}function he(F){return Math.min(i.maxSamples,F.samples)}function we(F){const P=n.get(F);return F.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&P.__useRenderToTexture!==!1}function me(F){const P=l.render.frame;f.get(F)!==P&&(f.set(F,P),F.update())}function Ne(F,P){const Z=F.colorSpace,ue=F.format,ve=F.type;return F.isCompressedTexture===!0||F.isVideoTexture===!0||Z!==fr&&Z!==sr&&Pt.getTransfer(Z),P}function qe(F){return typeof HTMLImageElement<"u"&&F instanceof HTMLImageElement?(h.width=F.naturalWidth||F.width,h.height=F.naturalHeight||F.height):typeof VideoFrame<"u"&&F instanceof VideoFrame?(h.width=F.displayWidth,h.height=F.displayHeight):(h.width=F.width,h.height=F.height),h}this.allocateTextureUnit=z,this.resetTextureUnits=b,this.setTexture2D=k,this.setTexture2DArray=J,this.setTexture3D=se,this.setTextureCube=le,this.rebindTextures=nt,this.setupRenderTarget=it,this.updateRenderTargetMipmap=W,this.updateMultisampleRenderTarget=pe,this.setupDepthRenderbuffer=ye,this.setupFrameBufferTexture=ne,this.useMultisampledRTT=we}function Ev(r,e){function t(n,i=sr){let s;const l=Pt.getTransfer(i);if(n===Vi)return r.UNSIGNED_BYTE;if(n===Hd)return r.UNSIGNED_SHORT_4_4_4_4;if(n===Vd)return r.UNSIGNED_SHORT_5_5_5_1;if(n===H_)return r.UNSIGNED_INT_5_9_9_9_REV;if(n===B_)return r.BYTE;if(n===k_)return r.SHORT;if(n===Bd)return r.UNSIGNED_SHORT;if(n===kd)return r.INT;if(n===ws)return r.UNSIGNED_INT;if(n===di)return r.FLOAT;if(n===Ja)return r.HALF_FLOAT;if(n===V_)return r.ALPHA;if(n===G_)return r.RGB;if(n===Gn)return r.RGBA;if(n===W_)return r.LUMINANCE;if(n===X_)return r.LUMINANCE_ALPHA;if(n===ys)return r.DEPTH_COMPONENT;if(n===Ro)return r.DEPTH_STENCIL;if(n===Gd)return r.RED;if(n===Wd)return r.RED_INTEGER;if(n===Y_)return r.RG;if(n===Xd)return r.RG_INTEGER;if(n===Yd)return r.RGBA_INTEGER;if(n===Kc||n===Qc||n===$c||n===eu)if(l===Ot)if(s=e.get("WEBGL_compressed_texture_s3tc_srgb"),s!==null){if(n===Kc)return s.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(n===Qc)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(n===$c)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(n===eu)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(s=e.get("WEBGL_compressed_texture_s3tc"),s!==null){if(n===Kc)return s.COMPRESSED_RGB_S3TC_DXT1_EXT;if(n===Qc)return s.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(n===$c)return s.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(n===eu)return s.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(n===Zf||n===jf||n===Jf||n===Kf)if(s=e.get("WEBGL_compressed_texture_pvrtc"),s!==null){if(n===Zf)return s.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(n===jf)return s.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(n===Jf)return s.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(n===Kf)return s.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(n===Qf||n===$f||n===ed)if(s=e.get("WEBGL_compressed_texture_etc"),s!==null){if(n===Qf||n===$f)return l===Ot?s.COMPRESSED_SRGB8_ETC2:s.COMPRESSED_RGB8_ETC2;if(n===ed)return l===Ot?s.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:s.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(n===td||n===nd||n===id||n===rd||n===sd||n===od||n===ad||n===ld||n===cd||n===ud||n===hd||n===fd||n===dd||n===pd)if(s=e.get("WEBGL_compressed_texture_astc"),s!==null){if(n===td)return l===Ot?s.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:s.COMPRESSED_RGBA_ASTC_4x4_KHR;if(n===nd)return l===Ot?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:s.COMPRESSED_RGBA_ASTC_5x4_KHR;if(n===id)return l===Ot?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:s.COMPRESSED_RGBA_ASTC_5x5_KHR;if(n===rd)return l===Ot?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:s.COMPRESSED_RGBA_ASTC_6x5_KHR;if(n===sd)return l===Ot?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:s.COMPRESSED_RGBA_ASTC_6x6_KHR;if(n===od)return l===Ot?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:s.COMPRESSED_RGBA_ASTC_8x5_KHR;if(n===ad)return l===Ot?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:s.COMPRESSED_RGBA_ASTC_8x6_KHR;if(n===ld)return l===Ot?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:s.COMPRESSED_RGBA_ASTC_8x8_KHR;if(n===cd)return l===Ot?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:s.COMPRESSED_RGBA_ASTC_10x5_KHR;if(n===ud)return l===Ot?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:s.COMPRESSED_RGBA_ASTC_10x6_KHR;if(n===hd)return l===Ot?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:s.COMPRESSED_RGBA_ASTC_10x8_KHR;if(n===fd)return l===Ot?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:s.COMPRESSED_RGBA_ASTC_10x10_KHR;if(n===dd)return l===Ot?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:s.COMPRESSED_RGBA_ASTC_12x10_KHR;if(n===pd)return l===Ot?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:s.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(n===tu||n===md||n===gd)if(s=e.get("EXT_texture_compression_bptc"),s!==null){if(n===tu)return l===Ot?s.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:s.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(n===md)return s.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(n===gd)return s.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(n===q_||n===_d||n===vd||n===yd)if(s=e.get("EXT_texture_compression_rgtc"),s!==null){if(n===tu)return s.COMPRESSED_RED_RGTC1_EXT;if(n===_d)return s.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(n===vd)return s.COMPRESSED_RED_GREEN_RGTC2_EXT;if(n===yd)return s.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return n===Uo?r.UNSIGNED_INT_24_8:r[n]!==void 0?r[n]:null}return{convert:t}}class Tv extends pn{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}}class To extends bt{constructor(){super(),this.isGroup=!0,this.type="Group"}}const zT={type:"move"};class yf{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new To,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new To,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new N,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new N),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new To,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new N,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new N),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const n of e.hand.values())this._getHandJoint(t,n)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,n){let i=null,s=null,l=null;const c=this._targetRay,u=this._grip,h=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(h&&e.hand){l=!0;for(const M of e.hand.values()){const x=t.getJointPose(M,n),v=this._getHandJoint(h,M);x!==null&&(v.matrix.fromArray(x.transform.matrix),v.matrix.decompose(v.position,v.rotation,v.scale),v.matrixWorldNeedsUpdate=!0,v.jointRadius=x.radius),v.visible=x!==null}const f=h.joints["index-finger-tip"],p=h.joints["thumb-tip"],g=f.position.distanceTo(p.position),m=.02,y=.005;h.inputState.pinching&&g>m+y?(h.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!h.inputState.pinching&&g<=m-y&&(h.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else u!==null&&e.gripSpace&&(s=t.getPose(e.gripSpace,n),s!==null&&(u.matrix.fromArray(s.transform.matrix),u.matrix.decompose(u.position,u.rotation,u.scale),u.matrixWorldNeedsUpdate=!0,s.linearVelocity?(u.hasLinearVelocity=!0,u.linearVelocity.copy(s.linearVelocity)):u.hasLinearVelocity=!1,s.angularVelocity?(u.hasAngularVelocity=!0,u.angularVelocity.copy(s.angularVelocity)):u.hasAngularVelocity=!1));c!==null&&(i=t.getPose(e.targetRaySpace,n),i===null&&s!==null&&(i=s),i!==null&&(c.matrix.fromArray(i.transform.matrix),c.matrix.decompose(c.position,c.rotation,c.scale),c.matrixWorldNeedsUpdate=!0,i.linearVelocity?(c.hasLinearVelocity=!0,c.linearVelocity.copy(i.linearVelocity)):c.hasLinearVelocity=!1,i.angularVelocity?(c.hasAngularVelocity=!0,c.angularVelocity.copy(i.angularVelocity)):c.hasAngularVelocity=!1,this.dispatchEvent(zT)))}return c!==null&&(c.visible=i!==null),u!==null&&(u.visible=s!==null),h!==null&&(h.visible=l!==null),this}_getHandJoint(e,t){if(e.joints[t.jointName]===void 0){const n=new To;n.matrixAutoUpdate=!1,n.visible=!1,e.joints[t.jointName]=n,e.add(n)}return e.joints[t.jointName]}}const BT=`
void main() {

	gl_Position = vec4( position, 1.0 );

}`,kT=`
uniform sampler2DArray depthColor;
uniform float depthWidth;
uniform float depthHeight;

void main() {

	vec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );

	if ( coord.x >= 1.0 ) {

		gl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;

	} else {

		gl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;

	}

}`;class HT{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(e,t,n){if(this.texture===null){const i=new Xt,s=e.properties.get(i);s.__webglTexture=t.texture,(t.depthNear!=n.depthNear||t.depthFar!=n.depthFar)&&(this.depthNear=t.depthNear,this.depthFar=t.depthFar),this.texture=i}}render(e,t){if(this.texture!==null){if(this.mesh===null){const n=t.cameras[0].viewport,i=new Ti({vertexShader:BT,fragmentShader:kT,uniforms:{depthColor:{value:this.texture},depthWidth:{value:n.z},depthHeight:{value:n.w}}});this.mesh=new sn(new Oo(20,20),i)}e.render(this.mesh,t)}}reset(){this.texture=null,this.mesh=null}}class VT extends Gi{constructor(e,t){super();const n=this;let i=null,s=1,l=null,c="local-floor",u=1,h=null,f=null,p=null,g=null,m=null,y=null;const M=new HT,x=t.getContextAttributes();let v=null,E=null;const w=[],A=[],U=new ce;let I=null;const L=new pn;L.layers.enable(1),L.viewport=new It;const B=new pn;B.layers.enable(2),B.viewport=new It;const R=[L,B],b=new Tv;b.layers.enable(1),b.layers.enable(2);let z=null,Y=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(ne){let _e=w[ne];return _e===void 0&&(_e=new yf,w[ne]=_e),_e.getTargetRaySpace()},this.getControllerGrip=function(ne){let _e=w[ne];return _e===void 0&&(_e=new yf,w[ne]=_e),_e.getGripSpace()},this.getHand=function(ne){let _e=w[ne];return _e===void 0&&(_e=new yf,w[ne]=_e),_e.getHandSpace()};function k(ne){const _e=A.indexOf(ne.inputSource);if(_e===-1)return;const Re=w[_e];Re!==void 0&&(Re.update(ne.inputSource,ne.frame,h||l),Re.dispatchEvent({type:ne.type,data:ne.inputSource}))}function J(){i.removeEventListener("select",k),i.removeEventListener("selectstart",k),i.removeEventListener("selectend",k),i.removeEventListener("squeeze",k),i.removeEventListener("squeezestart",k),i.removeEventListener("squeezeend",k),i.removeEventListener("end",J),i.removeEventListener("inputsourceschange",se);for(let ne=0;ne<w.length;ne++){const _e=A[ne];_e!==null&&(A[ne]=null,w[ne].disconnect(_e))}z=null,Y=null,M.reset(),e.setRenderTarget(v),m=null,g=null,p=null,i=null,E=null,Be.stop(),n.isPresenting=!1,e.setPixelRatio(I),e.setSize(U.width,U.height,!1),n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(ne){s=ne,n.isPresenting},this.setReferenceSpaceType=function(ne){c=ne,n.isPresenting},this.getReferenceSpace=function(){return h||l},this.setReferenceSpace=function(ne){h=ne},this.getBaseLayer=function(){return g!==null?g:m},this.getBinding=function(){return p},this.getFrame=function(){return y},this.getSession=function(){return i},this.setSession=async function(ne){if(i=ne,i!==null){if(v=e.getRenderTarget(),i.addEventListener("select",k),i.addEventListener("selectstart",k),i.addEventListener("selectend",k),i.addEventListener("squeeze",k),i.addEventListener("squeezestart",k),i.addEventListener("squeezeend",k),i.addEventListener("end",J),i.addEventListener("inputsourceschange",se),x.xrCompatible!==!0&&await t.makeXRCompatible(),I=e.getPixelRatio(),e.getSize(U),i.renderState.layers===void 0){const _e={antialias:x.antialias,alpha:!0,depth:x.depth,stencil:x.stencil,framebufferScaleFactor:s};m=new XRWebGLLayer(i,t,_e),i.updateRenderState({baseLayer:m}),e.setPixelRatio(1),e.setSize(m.framebufferWidth,m.framebufferHeight,!1),E=new Ei(m.framebufferWidth,m.framebufferHeight,{format:Gn,type:Vi,colorSpace:e.outputColorSpace,stencilBuffer:x.stencil})}else{let _e=null,Re=null,ye=null;x.depth&&(ye=x.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,_e=x.stencil?Ro:ys,Re=x.stencil?Uo:ws);const nt={colorFormat:t.RGBA8,depthFormat:ye,scaleFactor:s};p=new XRWebGLBinding(i,t),g=p.createProjectionLayer(nt),i.updateRenderState({layers:[g]}),e.setPixelRatio(1),e.setSize(g.textureWidth,g.textureHeight,!1),E=new Ei(g.textureWidth,g.textureHeight,{format:Gn,type:Vi,depthTexture:new ep(g.textureWidth,g.textureHeight,Re,void 0,void 0,void 0,void 0,void 0,void 0,_e),stencilBuffer:x.stencil,colorSpace:e.outputColorSpace,samples:x.antialias?4:0,resolveDepthBuffer:g.ignoreDepthValues===!1})}E.isXRRenderTarget=!0,this.setFoveation(u),h=null,l=await i.requestReferenceSpace(c),Be.setContext(i),Be.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(i!==null)return i.environmentBlendMode};function se(ne){for(let _e=0;_e<ne.removed.length;_e++){const Re=ne.removed[_e],ye=A.indexOf(Re);ye>=0&&(A[ye]=null,w[ye].disconnect(Re))}for(let _e=0;_e<ne.added.length;_e++){const Re=ne.added[_e];let ye=A.indexOf(Re);if(ye===-1){for(let it=0;it<w.length;it++)if(it>=A.length){A.push(Re),ye=it;break}else if(A[it]===null){A[it]=Re,ye=it;break}if(ye===-1)break}const nt=w[ye];nt&&nt.connect(Re)}}const le=new N,xe=new N;function H(ne,_e,Re){le.setFromMatrixPosition(_e.matrixWorld),xe.setFromMatrixPosition(Re.matrixWorld);const ye=le.distanceTo(xe),nt=_e.projectionMatrix.elements,it=Re.projectionMatrix.elements,W=nt[14]/(nt[10]-1),Qe=nt[14]/(nt[10]+1),ae=(nt[9]+1)/nt[5],pe=(nt[9]-1)/nt[5],he=(nt[8]-1)/nt[0],we=(it[8]+1)/it[0],me=W*he,Ne=W*we,qe=ye/(-he+we),F=qe*-he;_e.matrixWorld.decompose(ne.position,ne.quaternion,ne.scale),ne.translateX(F),ne.translateZ(qe),ne.matrixWorld.compose(ne.position,ne.quaternion,ne.scale),ne.matrixWorldInverse.copy(ne.matrixWorld).invert();const P=W+qe,Z=Qe+qe,ue=me-F,ve=Ne+(ye-F),de=ae*Qe/Z*P,Xe=pe*Qe/Z*P;ne.projectionMatrix.makePerspective(ue,ve,de,Xe,P,Z),ne.projectionMatrixInverse.copy(ne.projectionMatrix).invert()}function te(ne,_e){_e===null?ne.matrixWorld.copy(ne.matrix):ne.matrixWorld.multiplyMatrices(_e.matrixWorld,ne.matrix),ne.matrixWorldInverse.copy(ne.matrixWorld).invert()}this.updateCamera=function(ne){if(i===null)return;M.texture!==null&&(ne.near=M.depthNear,ne.far=M.depthFar),b.near=B.near=L.near=ne.near,b.far=B.far=L.far=ne.far,(z!==b.near||Y!==b.far)&&(i.updateRenderState({depthNear:b.near,depthFar:b.far}),z=b.near,Y=b.far,L.near=z,L.far=Y,B.near=z,B.far=Y,L.updateProjectionMatrix(),B.updateProjectionMatrix(),ne.updateProjectionMatrix());const _e=ne.parent,Re=b.cameras;te(b,_e);for(let ye=0;ye<Re.length;ye++)te(Re[ye],_e);Re.length===2?H(b,L,B):b.projectionMatrix.copy(L.projectionMatrix),j(ne,b,_e)};function j(ne,_e,Re){Re===null?ne.matrix.copy(_e.matrixWorld):(ne.matrix.copy(Re.matrixWorld),ne.matrix.invert(),ne.matrix.multiply(_e.matrixWorld)),ne.matrix.decompose(ne.position,ne.quaternion,ne.scale),ne.updateMatrixWorld(!0),ne.projectionMatrix.copy(_e.projectionMatrix),ne.projectionMatrixInverse.copy(_e.projectionMatrixInverse),ne.isPerspectiveCamera&&(ne.fov=Po*2*Math.atan(1/ne.projectionMatrix.elements[5]),ne.zoom=1)}this.getCamera=function(){return b},this.getFoveation=function(){if(!(g===null&&m===null))return u},this.setFoveation=function(ne){u=ne,g!==null&&(g.fixedFoveation=ne),m!==null&&m.fixedFoveation!==void 0&&(m.fixedFoveation=ne)},this.hasDepthSensing=function(){return M.texture!==null};let fe=null;function Le(ne,_e){if(f=_e.getViewerPose(h||l),y=_e,f!==null){const Re=f.views;m!==null&&(e.setRenderTargetFramebuffer(E,m.framebuffer),e.setRenderTarget(E));let ye=!1;Re.length!==b.cameras.length&&(b.cameras.length=0,ye=!0);for(let it=0;it<Re.length;it++){const W=Re[it];let Qe=null;if(m!==null)Qe=m.getViewport(W);else{const pe=p.getViewSubImage(g,W);Qe=pe.viewport,it===0&&(e.setRenderTargetTextures(E,pe.colorTexture,g.ignoreDepthValues?void 0:pe.depthStencilTexture),e.setRenderTarget(E))}let ae=R[it];ae===void 0&&(ae=new pn,ae.layers.enable(it),ae.viewport=new It,R[it]=ae),ae.matrix.fromArray(W.transform.matrix),ae.matrix.decompose(ae.position,ae.quaternion,ae.scale),ae.projectionMatrix.fromArray(W.projectionMatrix),ae.projectionMatrixInverse.copy(ae.projectionMatrix).invert(),ae.viewport.set(Qe.x,Qe.y,Qe.width,Qe.height),it===0&&(b.matrix.copy(ae.matrix),b.matrix.decompose(b.position,b.quaternion,b.scale)),ye===!0&&b.cameras.push(ae)}const nt=i.enabledFeatures;if(nt&&nt.includes("depth-sensing")){const it=p.getDepthInformation(Re[0]);it&&it.isValid&&it.texture&&M.init(e,it,i.renderState)}}for(let Re=0;Re<w.length;Re++){const ye=A[Re],nt=w[Re];ye!==null&&nt!==void 0&&nt.update(ye,_e,h||l)}M.render(e,b),fe&&fe(ne,_e),_e.detectedPlanes&&n.dispatchEvent({type:"planesdetected",data:_e}),y=null}const Be=new vv;Be.setAnimationLoop(Le),this.setAnimationLoop=function(ne){fe=ne},this.dispose=function(){}}}const es=new ei,GT=new et;function WT(r,e){function t(x,v){x.matrixAutoUpdate===!0&&x.updateMatrix(),v.value.copy(x.matrix)}function n(x,v){v.color.getRGB(x.fogColor.value,pv(r)),v.isFog?(x.fogNear.value=v.near,x.fogFar.value=v.far):v.isFogExp2&&(x.fogDensity.value=v.density)}function i(x,v,E,w,A){v.isMeshBasicMaterial||v.isMeshLambertMaterial?s(x,v):v.isMeshToonMaterial?(s(x,v),p(x,v)):v.isMeshPhongMaterial?(s(x,v),f(x,v)):v.isMeshStandardMaterial?(s(x,v),g(x,v),v.isMeshPhysicalMaterial&&m(x,v,A)):v.isMeshMatcapMaterial?(s(x,v),y(x,v)):v.isMeshDepthMaterial?s(x,v):v.isMeshDistanceMaterial?(s(x,v),M(x,v)):v.isMeshNormalMaterial?s(x,v):v.isLineBasicMaterial?(l(x,v),v.isLineDashedMaterial&&c(x,v)):v.isPointsMaterial?u(x,v,E,w):v.isSpriteMaterial?h(x,v):v.isShadowMaterial?(x.color.value.copy(v.color),x.opacity.value=v.opacity):v.isShaderMaterial&&(v.uniformsNeedUpdate=!1)}function s(x,v){x.opacity.value=v.opacity,v.color&&x.diffuse.value.copy(v.color),v.emissive&&x.emissive.value.copy(v.emissive).multiplyScalar(v.emissiveIntensity),v.map&&(x.map.value=v.map,t(v.map,x.mapTransform)),v.alphaMap&&(x.alphaMap.value=v.alphaMap,t(v.alphaMap,x.alphaMapTransform)),v.bumpMap&&(x.bumpMap.value=v.bumpMap,t(v.bumpMap,x.bumpMapTransform),x.bumpScale.value=v.bumpScale,v.side===An&&(x.bumpScale.value*=-1)),v.normalMap&&(x.normalMap.value=v.normalMap,t(v.normalMap,x.normalMapTransform),x.normalScale.value.copy(v.normalScale),v.side===An&&x.normalScale.value.negate()),v.displacementMap&&(x.displacementMap.value=v.displacementMap,t(v.displacementMap,x.displacementMapTransform),x.displacementScale.value=v.displacementScale,x.displacementBias.value=v.displacementBias),v.emissiveMap&&(x.emissiveMap.value=v.emissiveMap,t(v.emissiveMap,x.emissiveMapTransform)),v.specularMap&&(x.specularMap.value=v.specularMap,t(v.specularMap,x.specularMapTransform)),v.alphaTest>0&&(x.alphaTest.value=v.alphaTest);const E=e.get(v),w=E.envMap,A=E.envMapRotation;if(w&&(x.envMap.value=w,es.copy(A),es.x*=-1,es.y*=-1,es.z*=-1,w.isCubeTexture&&w.isRenderTargetTexture===!1&&(es.y*=-1,es.z*=-1),x.envMapRotation.value.setFromMatrix4(GT.makeRotationFromEuler(es)),x.flipEnvMap.value=w.isCubeTexture&&w.isRenderTargetTexture===!1?-1:1,x.reflectivity.value=v.reflectivity,x.ior.value=v.ior,x.refractionRatio.value=v.refractionRatio),v.lightMap){x.lightMap.value=v.lightMap;const U=r._useLegacyLights===!0?Math.PI:1;x.lightMapIntensity.value=v.lightMapIntensity*U,t(v.lightMap,x.lightMapTransform)}v.aoMap&&(x.aoMap.value=v.aoMap,x.aoMapIntensity.value=v.aoMapIntensity,t(v.aoMap,x.aoMapTransform))}function l(x,v){x.diffuse.value.copy(v.color),x.opacity.value=v.opacity,v.map&&(x.map.value=v.map,t(v.map,x.mapTransform))}function c(x,v){x.dashSize.value=v.dashSize,x.totalSize.value=v.dashSize+v.gapSize,x.scale.value=v.scale}function u(x,v,E,w){x.diffuse.value.copy(v.color),x.opacity.value=v.opacity,x.size.value=v.size*E,x.scale.value=w*.5,v.map&&(x.map.value=v.map,t(v.map,x.uvTransform)),v.alphaMap&&(x.alphaMap.value=v.alphaMap,t(v.alphaMap,x.alphaMapTransform)),v.alphaTest>0&&(x.alphaTest.value=v.alphaTest)}function h(x,v){x.diffuse.value.copy(v.color),x.opacity.value=v.opacity,x.rotation.value=v.rotation,v.map&&(x.map.value=v.map,t(v.map,x.mapTransform)),v.alphaMap&&(x.alphaMap.value=v.alphaMap,t(v.alphaMap,x.alphaMapTransform)),v.alphaTest>0&&(x.alphaTest.value=v.alphaTest)}function f(x,v){x.specular.value.copy(v.specular),x.shininess.value=Math.max(v.shininess,1e-4)}function p(x,v){v.gradientMap&&(x.gradientMap.value=v.gradientMap)}function g(x,v){x.metalness.value=v.metalness,v.metalnessMap&&(x.metalnessMap.value=v.metalnessMap,t(v.metalnessMap,x.metalnessMapTransform)),x.roughness.value=v.roughness,v.roughnessMap&&(x.roughnessMap.value=v.roughnessMap,t(v.roughnessMap,x.roughnessMapTransform)),v.envMap&&(x.envMapIntensity.value=v.envMapIntensity)}function m(x,v,E){x.ior.value=v.ior,v.sheen>0&&(x.sheenColor.value.copy(v.sheenColor).multiplyScalar(v.sheen),x.sheenRoughness.value=v.sheenRoughness,v.sheenColorMap&&(x.sheenColorMap.value=v.sheenColorMap,t(v.sheenColorMap,x.sheenColorMapTransform)),v.sheenRoughnessMap&&(x.sheenRoughnessMap.value=v.sheenRoughnessMap,t(v.sheenRoughnessMap,x.sheenRoughnessMapTransform))),v.clearcoat>0&&(x.clearcoat.value=v.clearcoat,x.clearcoatRoughness.value=v.clearcoatRoughness,v.clearcoatMap&&(x.clearcoatMap.value=v.clearcoatMap,t(v.clearcoatMap,x.clearcoatMapTransform)),v.clearcoatRoughnessMap&&(x.clearcoatRoughnessMap.value=v.clearcoatRoughnessMap,t(v.clearcoatRoughnessMap,x.clearcoatRoughnessMapTransform)),v.clearcoatNormalMap&&(x.clearcoatNormalMap.value=v.clearcoatNormalMap,t(v.clearcoatNormalMap,x.clearcoatNormalMapTransform),x.clearcoatNormalScale.value.copy(v.clearcoatNormalScale),v.side===An&&x.clearcoatNormalScale.value.negate())),v.dispersion>0&&(x.dispersion.value=v.dispersion),v.iridescence>0&&(x.iridescence.value=v.iridescence,x.iridescenceIOR.value=v.iridescenceIOR,x.iridescenceThicknessMinimum.value=v.iridescenceThicknessRange[0],x.iridescenceThicknessMaximum.value=v.iridescenceThicknessRange[1],v.iridescenceMap&&(x.iridescenceMap.value=v.iridescenceMap,t(v.iridescenceMap,x.iridescenceMapTransform)),v.iridescenceThicknessMap&&(x.iridescenceThicknessMap.value=v.iridescenceThicknessMap,t(v.iridescenceThicknessMap,x.iridescenceThicknessMapTransform))),v.transmission>0&&(x.transmission.value=v.transmission,x.transmissionSamplerMap.value=E.texture,x.transmissionSamplerSize.value.set(E.width,E.height),v.transmissionMap&&(x.transmissionMap.value=v.transmissionMap,t(v.transmissionMap,x.transmissionMapTransform)),x.thickness.value=v.thickness,v.thicknessMap&&(x.thicknessMap.value=v.thicknessMap,t(v.thicknessMap,x.thicknessMapTransform)),x.attenuationDistance.value=v.attenuationDistance,x.attenuationColor.value.copy(v.attenuationColor)),v.anisotropy>0&&(x.anisotropyVector.value.set(v.anisotropy*Math.cos(v.anisotropyRotation),v.anisotropy*Math.sin(v.anisotropyRotation)),v.anisotropyMap&&(x.anisotropyMap.value=v.anisotropyMap,t(v.anisotropyMap,x.anisotropyMapTransform))),x.specularIntensity.value=v.specularIntensity,x.specularColor.value.copy(v.specularColor),v.specularColorMap&&(x.specularColorMap.value=v.specularColorMap,t(v.specularColorMap,x.specularColorMapTransform)),v.specularIntensityMap&&(x.specularIntensityMap.value=v.specularIntensityMap,t(v.specularIntensityMap,x.specularIntensityMapTransform))}function y(x,v){v.matcap&&(x.matcap.value=v.matcap)}function M(x,v){const E=e.get(v).light;x.referencePosition.value.setFromMatrixPosition(E.matrixWorld),x.nearDistance.value=E.shadow.camera.near,x.farDistance.value=E.shadow.camera.far}return{refreshFogUniforms:n,refreshMaterialUniforms:i}}function XT(r,e,t,n){let i={},s={},l=[];const c=r.getParameter(r.MAX_UNIFORM_BUFFER_BINDINGS);function u(E,w){const A=w.program;n.uniformBlockBinding(E,A)}function h(E,w){let A=i[E.id];A===void 0&&(y(E),A=f(E),i[E.id]=A,E.addEventListener("dispose",x));const U=w.program;n.updateUBOMapping(E,U);const I=e.render.frame;s[E.id]!==I&&(g(E),s[E.id]=I)}function f(E){const w=p();E.__bindingPointIndex=w;const A=r.createBuffer(),U=E.__size,I=E.usage;return r.bindBuffer(r.UNIFORM_BUFFER,A),r.bufferData(r.UNIFORM_BUFFER,U,I),r.bindBuffer(r.UNIFORM_BUFFER,null),r.bindBufferBase(r.UNIFORM_BUFFER,w,A),A}function p(){for(let E=0;E<c;E++)if(l.indexOf(E)===-1)return l.push(E),E;return 0}function g(E){const w=i[E.id],A=E.uniforms,U=E.__cache;r.bindBuffer(r.UNIFORM_BUFFER,w);for(let I=0,L=A.length;I<L;I++){const B=Array.isArray(A[I])?A[I]:[A[I]];for(let R=0,b=B.length;R<b;R++){const z=B[R];if(m(z,I,R,U)===!0){const Y=z.__offset,k=Array.isArray(z.value)?z.value:[z.value];let J=0;for(let se=0;se<k.length;se++){const le=k[se],xe=M(le);typeof le=="number"||typeof le=="boolean"?(z.__data[0]=le,r.bufferSubData(r.UNIFORM_BUFFER,Y+J,z.__data)):le.isMatrix3?(z.__data[0]=le.elements[0],z.__data[1]=le.elements[1],z.__data[2]=le.elements[2],z.__data[3]=0,z.__data[4]=le.elements[3],z.__data[5]=le.elements[4],z.__data[6]=le.elements[5],z.__data[7]=0,z.__data[8]=le.elements[6],z.__data[9]=le.elements[7],z.__data[10]=le.elements[8],z.__data[11]=0):(le.toArray(z.__data,J),J+=xe.storage/Float32Array.BYTES_PER_ELEMENT)}r.bufferSubData(r.UNIFORM_BUFFER,Y,z.__data)}}}r.bindBuffer(r.UNIFORM_BUFFER,null)}function m(E,w,A,U){const I=E.value,L=w+"_"+A;if(U[L]===void 0)return typeof I=="number"||typeof I=="boolean"?U[L]=I:U[L]=I.clone(),!0;{const B=U[L];if(typeof I=="number"||typeof I=="boolean"){if(B!==I)return U[L]=I,!0}else if(B.equals(I)===!1)return B.copy(I),!0}return!1}function y(E){const w=E.uniforms;let A=0;const U=16;for(let L=0,B=w.length;L<B;L++){const R=Array.isArray(w[L])?w[L]:[w[L]];for(let b=0,z=R.length;b<z;b++){const Y=R[b],k=Array.isArray(Y.value)?Y.value:[Y.value];for(let J=0,se=k.length;J<se;J++){const le=k[J],xe=M(le),H=A%U;H!==0&&U-H<xe.boundary&&(A+=U-H),Y.__data=new Float32Array(xe.storage/Float32Array.BYTES_PER_ELEMENT),Y.__offset=A,A+=xe.storage}}}const I=A%U;return I>0&&(A+=U-I),E.__size=A,E.__cache={},this}function M(E){const w={boundary:0,storage:0};return typeof E=="number"||typeof E=="boolean"?(w.boundary=4,w.storage=4):E.isVector2?(w.boundary=8,w.storage=8):E.isVector3||E.isColor?(w.boundary=16,w.storage=12):E.isVector4?(w.boundary=16,w.storage=16):E.isMatrix3?(w.boundary=48,w.storage=48):E.isMatrix4?(w.boundary=64,w.storage=64):E.isTexture,w}function x(E){const w=E.target;w.removeEventListener("dispose",x);const A=l.indexOf(w.__bindingPointIndex);l.splice(A,1),r.deleteBuffer(i[w.id]),delete i[w.id],delete s[w.id]}function v(){for(const E in i)r.deleteBuffer(i[E]);l=[],i={},s={}}return{bind:u,update:h,dispose:v}}class Av{constructor(e={}){const{canvas:t=cv(),context:n=null,depth:i=!0,stencil:s=!1,alpha:l=!1,antialias:c=!1,premultipliedAlpha:u=!0,preserveDrawingBuffer:h=!1,powerPreference:f="default",failIfMajorPerformanceCaveat:p=!1}=e;this.isWebGLRenderer=!0;let g;if(n!==null){if(typeof WebGLRenderingContext<"u"&&n instanceof WebGLRenderingContext)throw new Error("THREE.WebGLRenderer: WebGL 1 is not supported since r163.");g=n.getContextAttributes().alpha}else g=l;const m=new Uint32Array(4),y=new Int32Array(4);let M=null,x=null;const v=[],E=[];this.domElement=t,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this._outputColorSpace=hi,this._useLegacyLights=!1,this.toneMapping=ki,this.toneMappingExposure=1;const w=this;let A=!1,U=0,I=0,L=null,B=-1,R=null;const b=new It,z=new It;let Y=null;const k=new Oe(0);let J=0,se=t.width,le=t.height,xe=1,H=null,te=null;const j=new It(0,0,se,le),fe=new It(0,0,se,le);let Le=!1;const Be=new el;let ne=!1,_e=!1;const Re=new et,ye=new N,nt={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function it(){return L===null?xe:1}let W=n;function Qe(D,q){return t.getContext(D,q)}try{const D={alpha:!0,depth:i,stencil:s,antialias:c,premultipliedAlpha:u,preserveDrawingBuffer:h,powerPreference:f,failIfMajorPerformanceCaveat:p};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${pu}`),t.addEventListener("webglcontextlost",C,!1),t.addEventListener("webglcontextrestored",X,!1),t.addEventListener("webglcontextcreationerror",K,!1),W===null){const q="webgl2";if(W=Qe(q,D),W===null)throw Qe(q)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}}catch(D){throw D}let ae,pe,he,we,me,Ne,qe,F,P,Z,ue,ve,de,Xe,Ae,Te,tt,Me,Ve,pt,Ze,Fe,at,vt;function Rt(){ae=new rE(W),ae.init(),Fe=new Ev(W,ae),pe=new Qw(W,ae,e,Fe),he=new OT(W),we=new aE(W),me=new ET,Ne=new FT(W,ae,he,me,pe,Fe,we),qe=new eE(w),F=new iE(w),P=new pM(W),at=new Jw(W,P),Z=new sE(W,P,we,at),ue=new cE(W,Z,P,we),Ve=new lE(W,pe,Ne),Te=new $w(me),ve=new wT(w,qe,F,ae,pe,at,Te),de=new WT(w,me),Xe=new AT,Ae=new LT(ae),Me=new jw(w,qe,F,he,ue,g,u),tt=new UT(w,ue,pe),vt=new XT(W,we,pe,he),pt=new Kw(W,ae,we),Ze=new oE(W,ae,we),we.programs=ve.programs,w.capabilities=pe,w.extensions=ae,w.properties=me,w.renderLists=Xe,w.shadowMap=tt,w.state=he,w.info=we}Rt();const lt=new VT(w,W);this.xr=lt,this.getContext=function(){return W},this.getContextAttributes=function(){return W.getContextAttributes()},this.forceContextLoss=function(){const D=ae.get("WEBGL_lose_context");D&&D.loseContext()},this.forceContextRestore=function(){const D=ae.get("WEBGL_lose_context");D&&D.restoreContext()},this.getPixelRatio=function(){return xe},this.setPixelRatio=function(D){D!==void 0&&(xe=D,this.setSize(se,le,!1))},this.getSize=function(D){return D.set(se,le)},this.setSize=function(D,q,ie=!0){lt.isPresenting||(se=D,le=q,t.width=Math.floor(D*xe),t.height=Math.floor(q*xe),ie===!0&&(t.style.width=D+"px",t.style.height=q+"px"),this.setViewport(0,0,D,q))},this.getDrawingBufferSize=function(D){return D.set(se*xe,le*xe).floor()},this.setDrawingBufferSize=function(D,q,ie){se=D,le=q,xe=ie,t.width=Math.floor(D*ie),t.height=Math.floor(q*ie),this.setViewport(0,0,D,q)},this.getCurrentViewport=function(D){return D.copy(b)},this.getViewport=function(D){return D.copy(j)},this.setViewport=function(D,q,ie,$){D.isVector4?j.set(D.x,D.y,D.z,D.w):j.set(D,q,ie,$),he.viewport(b.copy(j).multiplyScalar(xe).round())},this.getScissor=function(D){return D.copy(fe)},this.setScissor=function(D,q,ie,$){D.isVector4?fe.set(D.x,D.y,D.z,D.w):fe.set(D,q,ie,$),he.scissor(z.copy(fe).multiplyScalar(xe).round())},this.getScissorTest=function(){return Le},this.setScissorTest=function(D){he.setScissorTest(Le=D)},this.setOpaqueSort=function(D){H=D},this.setTransparentSort=function(D){te=D},this.getClearColor=function(D){return D.copy(Me.getClearColor())},this.setClearColor=function(){Me.setClearColor.apply(Me,arguments)},this.getClearAlpha=function(){return Me.getClearAlpha()},this.setClearAlpha=function(){Me.setClearAlpha.apply(Me,arguments)},this.clear=function(D=!0,q=!0,ie=!0){let $=0;if(D){let ee=!1;if(L!==null){const Pe=L.texture.format;ee=Pe===Yd||Pe===Xd||Pe===Wd}if(ee){const Pe=L.texture.type,He=Pe===Vi||Pe===ws||Pe===Bd||Pe===Uo||Pe===Hd||Pe===Vd,Ge=Me.getClearColor(),$e=Me.getClearAlpha(),rt=Ge.r,st=Ge.g,ot=Ge.b;He?(m[0]=rt,m[1]=st,m[2]=ot,m[3]=$e,W.clearBufferuiv(W.COLOR,0,m)):(y[0]=rt,y[1]=st,y[2]=ot,y[3]=$e,W.clearBufferiv(W.COLOR,0,y))}else $|=W.COLOR_BUFFER_BIT}q&&($|=W.DEPTH_BUFFER_BIT),ie&&($|=W.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),W.clear($)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",C,!1),t.removeEventListener("webglcontextrestored",X,!1),t.removeEventListener("webglcontextcreationerror",K,!1),Xe.dispose(),Ae.dispose(),me.dispose(),qe.dispose(),F.dispose(),ue.dispose(),at.dispose(),vt.dispose(),ve.dispose(),lt.dispose(),lt.removeEventListener("sessionstart",Mt),lt.removeEventListener("sessionend",kt),Dt.stop()};function C(D){D.preventDefault(),A=!0}function X(){A=!1;const D=we.autoReset,q=tt.enabled,ie=tt.autoUpdate,$=tt.needsUpdate,ee=tt.type;Rt(),we.autoReset=D,tt.enabled=q,tt.autoUpdate=ie,tt.needsUpdate=$,tt.type=ee}function K(D){}function ge(D){const q=D.target;q.removeEventListener("dispose",ge),Ee(q)}function Ee(D){ct(D),me.remove(D)}function ct(D){const q=me.get(D).programs;q!==void 0&&(q.forEach(function(ie){ve.releaseProgram(ie)}),D.isShaderMaterial&&ve.releaseShaderCache(D))}this.renderBufferDirect=function(D,q,ie,$,ee,Pe){q===null&&(q=nt);const He=ee.isMesh&&ee.matrixWorld.determinant()<0,Ge=Hu(D,q,ie,$,ee);he.setMaterial($,He);let $e=ie.index,rt=1;if($.wireframe===!0){if($e=Z.getWireframeAttribute(ie),$e===void 0)return;rt=2}const st=ie.drawRange,ot=ie.attributes.position;let zt=st.start*rt,Qt=(st.start+st.count)*rt;Pe!==null&&(zt=Math.max(zt,Pe.start*rt),Qt=Math.min(Qt,(Pe.start+Pe.count)*rt)),$e!==null?(zt=Math.max(zt,0),Qt=Math.min(Qt,$e.count)):ot!=null&&(zt=Math.max(zt,0),Qt=Math.min(Qt,ot.count));const Rn=Qt-zt;if(Rn<0||Rn===1/0)return;at.setup(ee,$,Ge,ie,$e);let Xn,St=pt;if($e!==null&&(Xn=P.get($e),St=Ze,St.setIndex(Xn)),ee.isMesh)$.wireframe===!0?(he.setLineWidth($.wireframeLinewidth*it()),St.setMode(W.LINES)):St.setMode(W.TRIANGLES);else if(ee.isLine){let Je=$.linewidth;Je===void 0&&(Je=1),he.setLineWidth(Je*it()),ee.isLineSegments?St.setMode(W.LINES):ee.isLineLoop?St.setMode(W.LINE_LOOP):St.setMode(W.LINE_STRIP)}else ee.isPoints?St.setMode(W.POINTS):ee.isSprite&&St.setMode(W.TRIANGLES);if(ee.isBatchedMesh)ee._multiDrawInstances!==null?St.renderMultiDrawInstances(ee._multiDrawStarts,ee._multiDrawCounts,ee._multiDrawCount,ee._multiDrawInstances):St.renderMultiDraw(ee._multiDrawStarts,ee._multiDrawCounts,ee._multiDrawCount);else if(ee.isInstancedMesh)St.renderInstances(zt,Rn,ee.count);else if(ie.isInstancedBufferGeometry){const Je=ie._maxInstanceCount!==void 0?ie._maxInstanceCount:1/0,Ct=Math.min(ie.instanceCount,Je);St.renderInstances(zt,Rn,Ct)}else St.render(zt,Rn)};function mt(D,q,ie){D.transparent===!0&&D.side===Fi&&D.forceSinglePass===!1?(D.side=An,D.needsUpdate=!0,Ds(D,q,ie),D.side=cr,D.needsUpdate=!0,Ds(D,q,ie),D.side=Fi):Ds(D,q,ie)}this.compile=function(D,q,ie=null){ie===null&&(ie=D),x=Ae.get(ie),x.init(q),E.push(x),ie.traverseVisible(function(ee){ee.isLight&&ee.layers.test(q.layers)&&(x.pushLight(ee),ee.castShadow&&x.pushShadow(ee))}),D!==ie&&D.traverseVisible(function(ee){ee.isLight&&ee.layers.test(q.layers)&&(x.pushLight(ee),ee.castShadow&&x.pushShadow(ee))}),x.setupLights(w._useLegacyLights);const $=new Set;return D.traverse(function(ee){const Pe=ee.material;if(Pe)if(Array.isArray(Pe))for(let He=0;He<Pe.length;He++){const Ge=Pe[He];mt(Ge,ie,ee),$.add(Ge)}else mt(Pe,ie,ee),$.add(Pe)}),E.pop(),x=null,$},this.compileAsync=function(D,q,ie=null){const $=this.compile(D,q,ie);return new Promise(ee=>{function Pe(){if($.forEach(function(He){me.get(He).currentProgram.isReady()&&$.delete(He)}),$.size===0){ee(D);return}setTimeout(Pe,10)}ae.get("KHR_parallel_shader_compile")!==null?Pe():setTimeout(Pe,10)})};let Ut=null;function Kt(D){Ut&&Ut(D)}function Mt(){Dt.stop()}function kt(){Dt.start()}const Dt=new vv;Dt.setAnimationLoop(Kt),typeof self<"u"&&Dt.setContext(self),this.setAnimationLoop=function(D){Ut=D,lt.setAnimationLoop(D),D===null?Dt.stop():Dt.start()},lt.addEventListener("sessionstart",Mt),lt.addEventListener("sessionend",kt),this.render=function(D,q){if(q!==void 0&&q.isCamera!==!0||A===!0)return;D.matrixWorldAutoUpdate===!0&&D.updateMatrixWorld(),q.parent===null&&q.matrixWorldAutoUpdate===!0&&q.updateMatrixWorld(),lt.enabled===!0&&lt.isPresenting===!0&&(lt.cameraAutoUpdate===!0&&lt.updateCamera(q),q=lt.getCamera()),D.isScene===!0&&D.onBeforeRender(w,D,q,L),x=Ae.get(D,E.length),x.init(q),E.push(x),Re.multiplyMatrices(q.projectionMatrix,q.matrixWorldInverse),Be.setFromProjectionMatrix(Re),_e=this.localClippingEnabled,ne=Te.init(this.clippingPlanes,_e),M=Xe.get(D,v.length),M.init(),v.push(M),Ci(D,q,0,w.sortObjects),M.finish(),w.sortObjects===!0&&M.sort(H,te);const ie=lt.enabled===!1||lt.isPresenting===!1||lt.hasDepthSensing()===!1;ie&&Me.addToRenderList(M,D),this.info.render.frame++,ne===!0&&Te.beginShadows();const $=x.state.shadowsArray;tt.render($,D,q),ne===!0&&Te.endShadows(),this.info.autoReset===!0&&this.info.reset();const ee=M.opaque,Pe=M.transmissive;if(x.setupLights(w._useLegacyLights),q.isArrayCamera){const He=q.cameras;if(Pe.length>0)for(let Ge=0,$e=He.length;Ge<$e;Ge++){const rt=He[Ge];Ri(ee,Pe,D,rt)}ie&&Me.render(D);for(let Ge=0,$e=He.length;Ge<$e;Ge++){const rt=He[Ge];zn(M,D,rt,rt.viewport)}}else Pe.length>0&&Ri(ee,Pe,D,q),ie&&Me.render(D),zn(M,D,q);L!==null&&(Ne.updateMultisampleRenderTarget(L),Ne.updateRenderTargetMipmap(L)),D.isScene===!0&&D.onAfterRender(w,D,q),at.resetDefaultState(),B=-1,R=null,E.pop(),E.length>0?(x=E[E.length-1],ne===!0&&Te.setGlobalState(w.clippingPlanes,x.state.camera)):x=null,v.pop(),v.length>0?M=v[v.length-1]:M=null};function Ci(D,q,ie,$){if(D.visible===!1)return;if(D.layers.test(q.layers)){if(D.isGroup)ie=D.renderOrder;else if(D.isLOD)D.autoUpdate===!0&&D.update(q);else if(D.isLight)x.pushLight(D),D.castShadow&&x.pushShadow(D);else if(D.isSprite){if(!D.frustumCulled||Be.intersectsSprite(D)){$&&ye.setFromMatrixPosition(D.matrixWorld).applyMatrix4(Re);const He=ue.update(D),Ge=D.material;Ge.visible&&M.push(D,He,Ge,ie,ye.z,null)}}else if((D.isMesh||D.isLine||D.isPoints)&&(!D.frustumCulled||Be.intersectsObject(D))){const He=ue.update(D),Ge=D.material;if($&&(D.boundingSphere!==void 0?(D.boundingSphere===null&&D.computeBoundingSphere(),ye.copy(D.boundingSphere.center)):(He.boundingSphere===null&&He.computeBoundingSphere(),ye.copy(He.boundingSphere.center)),ye.applyMatrix4(D.matrixWorld).applyMatrix4(Re)),Array.isArray(Ge)){const $e=He.groups;for(let rt=0,st=$e.length;rt<st;rt++){const ot=$e[rt],zt=Ge[ot.materialIndex];zt&&zt.visible&&M.push(D,He,zt,ie,ye.z,ot)}}else Ge.visible&&M.push(D,He,Ge,ie,ye.z,null)}}const Pe=D.children;for(let He=0,Ge=Pe.length;He<Ge;He++)Ci(Pe[He],q,ie,$)}function zn(D,q,ie,$){const ee=D.opaque,Pe=D.transmissive,He=D.transparent;x.setupLightsView(ie),ne===!0&&Te.setGlobalState(w.clippingPlanes,ie),$&&he.viewport(b.copy($)),ee.length>0&&ti(ee,q,ie),Pe.length>0&&ti(Pe,q,ie),He.length>0&&ti(He,q,ie),he.buffers.depth.setTest(!0),he.buffers.depth.setMask(!0),he.buffers.color.setMask(!0),he.setPolygonOffset(!1)}function Ri(D,q,ie,$){if((ie.isScene===!0?ie.overrideMaterial:null)!==null)return;x.state.transmissionRenderTarget[$.id]===void 0&&(x.state.transmissionRenderTarget[$.id]=new Ei(1,1,{generateMipmaps:!0,type:ae.has("EXT_color_buffer_half_float")||ae.has("EXT_color_buffer_float")?Ja:Vi,minFilter:zi,samples:4,stencilBuffer:s,resolveDepthBuffer:!1,resolveStencilBuffer:!1}));const Pe=x.state.transmissionRenderTarget[$.id],He=$.viewport||b;Pe.setSize(He.z,He.w);const Ge=w.getRenderTarget();w.setRenderTarget(Pe),w.getClearColor(k),J=w.getClearAlpha(),J<1&&w.setClearColor(16777215,.5),w.clear();const $e=w.toneMapping;w.toneMapping=ki;const rt=$.viewport;if($.viewport!==void 0&&($.viewport=void 0),x.setupLightsView($),ne===!0&&Te.setGlobalState(w.clippingPlanes,$),ti(D,ie,$),Ne.updateMultisampleRenderTarget(Pe),Ne.updateRenderTargetMipmap(Pe),ae.has("WEBGL_multisampled_render_to_texture")===!1){let st=!1;for(let ot=0,zt=q.length;ot<zt;ot++){const Qt=q[ot],Rn=Qt.object,Xn=Qt.geometry,St=Qt.material,Je=Qt.group;if(St.side===Fi&&Rn.layers.test($.layers)){const Ct=St.side;St.side=An,St.needsUpdate=!0,Xi(Rn,ie,$,Xn,St,Je),St.side=Ct,St.needsUpdate=!0,st=!0}}st===!0&&(Ne.updateMultisampleRenderTarget(Pe),Ne.updateRenderTargetMipmap(Pe))}w.setRenderTarget(Ge),w.setClearColor(k,J),rt!==void 0&&($.viewport=rt),w.toneMapping=$e}function ti(D,q,ie){const $=q.isScene===!0?q.overrideMaterial:null;for(let ee=0,Pe=D.length;ee<Pe;ee++){const He=D[ee],Ge=He.object,$e=He.geometry,rt=$===null?He.material:$,st=He.group;Ge.layers.test(ie.layers)&&Xi(Ge,q,ie,$e,rt,st)}}function Xi(D,q,ie,$,ee,Pe){D.onBeforeRender(w,q,ie,$,ee,Pe),D.modelViewMatrix.multiplyMatrices(ie.matrixWorldInverse,D.matrixWorld),D.normalMatrix.getNormalMatrix(D.modelViewMatrix),ee.onBeforeRender(w,q,ie,$,D,Pe),ee.transparent===!0&&ee.side===Fi&&ee.forceSinglePass===!1?(ee.side=An,ee.needsUpdate=!0,w.renderBufferDirect(ie,q,$,ee,D,Pe),ee.side=cr,ee.needsUpdate=!0,w.renderBufferDirect(ie,q,$,ee,D,Pe),ee.side=Fi):w.renderBufferDirect(ie,q,$,ee,D,Pe),D.onAfterRender(w,q,ie,$,ee,Pe)}function Ds(D,q,ie){q.isScene!==!0&&(q=nt);const $=me.get(D),ee=x.state.lights,Pe=x.state.shadowsArray,He=ee.state.version,Ge=ve.getParameters(D,ee.state,Pe,q,ie),$e=ve.getProgramCacheKey(Ge);let rt=$.programs;$.environment=D.isMeshStandardMaterial?q.environment:null,$.fog=q.fog,$.envMap=(D.isMeshStandardMaterial?F:qe).get(D.envMap||$.environment),$.envMapRotation=$.environment!==null&&D.envMap===null?q.environmentRotation:D.envMapRotation,rt===void 0&&(D.addEventListener("dispose",ge),rt=new Map,$.programs=rt);let st=rt.get($e);if(st!==void 0){if($.currentProgram===st&&$.lightsStateVersion===He)return al(D,Ge),st}else Ge.uniforms=ve.getUniforms(D),D.onBuild(ie,Ge,w),D.onBeforeCompile(Ge,w),st=ve.acquireProgram(Ge,$e),rt.set($e,st),$.uniforms=Ge.uniforms;const ot=$.uniforms;return(!D.isShaderMaterial&&!D.isRawShaderMaterial||D.clipping===!0)&&(ot.clippingPlanes=Te.uniform),al(D,Ge),$.needsLights=Gu(D),$.lightsStateVersion=He,$.needsLights&&(ot.ambientLightColor.value=ee.state.ambient,ot.lightProbe.value=ee.state.probe,ot.directionalLights.value=ee.state.directional,ot.directionalLightShadows.value=ee.state.directionalShadow,ot.spotLights.value=ee.state.spot,ot.spotLightShadows.value=ee.state.spotShadow,ot.rectAreaLights.value=ee.state.rectArea,ot.ltc_1.value=ee.state.rectAreaLTC1,ot.ltc_2.value=ee.state.rectAreaLTC2,ot.pointLights.value=ee.state.point,ot.pointLightShadows.value=ee.state.pointShadow,ot.hemisphereLights.value=ee.state.hemi,ot.directionalShadowMap.value=ee.state.directionalShadowMap,ot.directionalShadowMatrix.value=ee.state.directionalShadowMatrix,ot.spotShadowMap.value=ee.state.spotShadowMap,ot.spotLightMatrix.value=ee.state.spotLightMatrix,ot.spotLightMap.value=ee.state.spotLightMap,ot.pointShadowMap.value=ee.state.pointShadowMap,ot.pointShadowMatrix.value=ee.state.pointShadowMatrix),$.currentProgram=st,$.uniformsList=null,st}function dr(D){if(D.uniformsList===null){const q=D.currentProgram.getUniforms();D.uniformsList=iu.seqWithValue(q.seq,D.uniforms)}return D.uniformsList}function al(D,q){const ie=me.get(D);ie.outputColorSpace=q.outputColorSpace,ie.batching=q.batching,ie.instancing=q.instancing,ie.instancingColor=q.instancingColor,ie.instancingMorph=q.instancingMorph,ie.skinning=q.skinning,ie.morphTargets=q.morphTargets,ie.morphNormals=q.morphNormals,ie.morphColors=q.morphColors,ie.morphTargetsCount=q.morphTargetsCount,ie.numClippingPlanes=q.numClippingPlanes,ie.numIntersection=q.numClipIntersection,ie.vertexAlphas=q.vertexAlphas,ie.vertexTangents=q.vertexTangents,ie.toneMapping=q.toneMapping}function Hu(D,q,ie,$,ee){q.isScene!==!0&&(q=nt),Ne.resetTextureUnits();const Pe=q.fog,He=$.isMeshStandardMaterial?q.environment:null,Ge=L===null?w.outputColorSpace:L.isXRRenderTarget===!0?L.texture.colorSpace:fr,$e=($.isMeshStandardMaterial?F:qe).get($.envMap||He),rt=$.vertexColors===!0&&!!ie.attributes.color&&ie.attributes.color.itemSize===4,st=!!ie.attributes.tangent&&(!!$.normalMap||$.anisotropy>0),ot=!!ie.morphAttributes.position,zt=!!ie.morphAttributes.normal,Qt=!!ie.morphAttributes.color;let Rn=ki;$.toneMapped&&(L===null||L.isXRRenderTarget===!0)&&(Rn=w.toneMapping);const Xn=ie.morphAttributes.position||ie.morphAttributes.normal||ie.morphAttributes.color,St=Xn!==void 0?Xn.length:0,Je=me.get($),Ct=x.state.lights;if(ne===!0&&(_e===!0||D!==R)){const Pn=D===R&&$.id===B;Te.setState($,D,Pn)}let Ke=!1;$.version===Je.__version?(Je.needsLights&&Je.lightsStateVersion!==Ct.state.version||Je.outputColorSpace!==Ge||ee.isBatchedMesh&&Je.batching===!1||!ee.isBatchedMesh&&Je.batching===!0||ee.isInstancedMesh&&Je.instancing===!1||!ee.isInstancedMesh&&Je.instancing===!0||ee.isSkinnedMesh&&Je.skinning===!1||!ee.isSkinnedMesh&&Je.skinning===!0||ee.isInstancedMesh&&Je.instancingColor===!0&&ee.instanceColor===null||ee.isInstancedMesh&&Je.instancingColor===!1&&ee.instanceColor!==null||ee.isInstancedMesh&&Je.instancingMorph===!0&&ee.morphTexture===null||ee.isInstancedMesh&&Je.instancingMorph===!1&&ee.morphTexture!==null||Je.envMap!==$e||$.fog===!0&&Je.fog!==Pe||Je.numClippingPlanes!==void 0&&(Je.numClippingPlanes!==Te.numPlanes||Je.numIntersection!==Te.numIntersection)||Je.vertexAlphas!==rt||Je.vertexTangents!==st||Je.morphTargets!==ot||Je.morphNormals!==zt||Je.morphColors!==Qt||Je.toneMapping!==Rn||Je.morphTargetsCount!==St)&&(Ke=!0):(Ke=!0,Je.__version=$.version);let vn=Je.currentProgram;Ke===!0&&(vn=Ds($,q,ee));let on=!1,$t=!1,pi=!1;const Ht=vn.getUniforms(),Vt=Je.uniforms;if(he.useProgram(vn.program)&&(on=!0,$t=!0,pi=!0),$.id!==B&&(B=$.id,$t=!0),on||R!==D){Ht.setValue(W,"projectionMatrix",D.projectionMatrix),Ht.setValue(W,"viewMatrix",D.matrixWorldInverse);const Pn=Ht.map.cameraPosition;Pn!==void 0&&Pn.setValue(W,ye.setFromMatrixPosition(D.matrixWorld)),pe.logarithmicDepthBuffer&&Ht.setValue(W,"logDepthBufFC",2/(Math.log(D.far+1)/Math.LN2)),($.isMeshPhongMaterial||$.isMeshToonMaterial||$.isMeshLambertMaterial||$.isMeshBasicMaterial||$.isMeshStandardMaterial||$.isShaderMaterial)&&Ht.setValue(W,"isOrthographic",D.isOrthographicCamera===!0),R!==D&&(R=D,$t=!0,pi=!0)}if(ee.isSkinnedMesh){Ht.setOptional(W,ee,"bindMatrix"),Ht.setOptional(W,ee,"bindMatrixInverse");const Pn=ee.skeleton;Pn&&(Pn.boneTexture===null&&Pn.computeBoneTexture(),Ht.setValue(W,"boneTexture",Pn.boneTexture,Ne))}ee.isBatchedMesh&&(Ht.setOptional(W,ee,"batchingTexture"),Ht.setValue(W,"batchingTexture",ee._matricesTexture,Ne));const pr=ie.morphAttributes;if((pr.position!==void 0||pr.normal!==void 0||pr.color!==void 0)&&Ve.update(ee,ie,vn),($t||Je.receiveShadow!==ee.receiveShadow)&&(Je.receiveShadow=ee.receiveShadow,Ht.setValue(W,"receiveShadow",ee.receiveShadow)),$.isMeshGouraudMaterial&&$.envMap!==null&&(Vt.envMap.value=$e,Vt.flipEnvMap.value=$e.isCubeTexture&&$e.isRenderTargetTexture===!1?-1:1),$.isMeshStandardMaterial&&$.envMap===null&&q.environment!==null&&(Vt.envMapIntensity.value=q.environmentIntensity),$t&&(Ht.setValue(W,"toneMappingExposure",w.toneMappingExposure),Je.needsLights&&Vu(Vt,pi),Pe&&$.fog===!0&&de.refreshFogUniforms(Vt,Pe),de.refreshMaterialUniforms(Vt,$,xe,le,x.state.transmissionRenderTarget[D.id]),iu.upload(W,dr(Je),Vt,Ne)),$.isShaderMaterial&&$.uniformsNeedUpdate===!0&&(iu.upload(W,dr(Je),Vt,Ne),$.uniformsNeedUpdate=!1),$.isSpriteMaterial&&Ht.setValue(W,"center",ee.center),Ht.setValue(W,"modelViewMatrix",ee.modelViewMatrix),Ht.setValue(W,"normalMatrix",ee.normalMatrix),Ht.setValue(W,"modelMatrix",ee.matrixWorld),$.isShaderMaterial||$.isRawShaderMaterial){const Pn=$.uniformsGroups;for(let Ns=0,Us=Pn.length;Ns<Us;Ns++){const ko=Pn[Ns];vt.update(ko,vn),vt.bind(ko,vn)}}return vn}function Vu(D,q){D.ambientLightColor.needsUpdate=q,D.lightProbe.needsUpdate=q,D.directionalLights.needsUpdate=q,D.directionalLightShadows.needsUpdate=q,D.pointLights.needsUpdate=q,D.pointLightShadows.needsUpdate=q,D.spotLights.needsUpdate=q,D.spotLightShadows.needsUpdate=q,D.rectAreaLights.needsUpdate=q,D.hemisphereLights.needsUpdate=q}function Gu(D){return D.isMeshLambertMaterial||D.isMeshToonMaterial||D.isMeshPhongMaterial||D.isMeshStandardMaterial||D.isShadowMaterial||D.isShaderMaterial&&D.lights===!0}this.getActiveCubeFace=function(){return U},this.getActiveMipmapLevel=function(){return I},this.getRenderTarget=function(){return L},this.setRenderTargetTextures=function(D,q,ie){me.get(D.texture).__webglTexture=q,me.get(D.depthTexture).__webglTexture=ie;const $=me.get(D);$.__hasExternalTextures=!0,$.__autoAllocateDepthBuffer=ie===void 0,$.__autoAllocateDepthBuffer||ae.has("WEBGL_multisampled_render_to_texture")===!0&&($.__useRenderToTexture=!1)},this.setRenderTargetFramebuffer=function(D,q){const ie=me.get(D);ie.__webglFramebuffer=q,ie.__useDefaultFramebuffer=q===void 0},this.setRenderTarget=function(D,q=0,ie=0){L=D,U=q,I=ie;let $=!0,ee=null,Pe=!1,He=!1;if(D){const $e=me.get(D);$e.__useDefaultFramebuffer!==void 0?(he.bindFramebuffer(W.FRAMEBUFFER,null),$=!1):$e.__webglFramebuffer===void 0?Ne.setupRenderTarget(D):$e.__hasExternalTextures&&Ne.rebindTextures(D,me.get(D.texture).__webglTexture,me.get(D.depthTexture).__webglTexture);const rt=D.texture;(rt.isData3DTexture||rt.isDataArrayTexture||rt.isCompressedArrayTexture)&&(He=!0);const st=me.get(D).__webglFramebuffer;D.isWebGLCubeRenderTarget?(Array.isArray(st[q])?ee=st[q][ie]:ee=st[q],Pe=!0):D.samples>0&&Ne.useMultisampledRTT(D)===!1?ee=me.get(D).__webglMultisampledFramebuffer:Array.isArray(st)?ee=st[ie]:ee=st,b.copy(D.viewport),z.copy(D.scissor),Y=D.scissorTest}else b.copy(j).multiplyScalar(xe).floor(),z.copy(fe).multiplyScalar(xe).floor(),Y=Le;if(he.bindFramebuffer(W.FRAMEBUFFER,ee)&&$&&he.drawBuffers(D,ee),he.viewport(b),he.scissor(z),he.setScissorTest(Y),Pe){const $e=me.get(D.texture);W.framebufferTexture2D(W.FRAMEBUFFER,W.COLOR_ATTACHMENT0,W.TEXTURE_CUBE_MAP_POSITIVE_X+q,$e.__webglTexture,ie)}else if(He){const $e=me.get(D.texture),rt=q||0;W.framebufferTextureLayer(W.FRAMEBUFFER,W.COLOR_ATTACHMENT0,$e.__webglTexture,ie||0,rt)}B=-1},this.readRenderTargetPixels=function(D,q,ie,$,ee,Pe,He){if(!(D&&D.isWebGLRenderTarget))return;let Ge=me.get(D).__webglFramebuffer;if(D.isWebGLCubeRenderTarget&&He!==void 0&&(Ge=Ge[He]),Ge){he.bindFramebuffer(W.FRAMEBUFFER,Ge);try{const $e=D.texture,rt=$e.format,st=$e.type;if(!pe.textureFormatReadable(rt)||!pe.textureTypeReadable(st))return;q>=0&&q<=D.width-$&&ie>=0&&ie<=D.height-ee&&W.readPixels(q,ie,$,ee,Fe.convert(rt),Fe.convert(st),Pe)}finally{const $e=L!==null?me.get(L).__webglFramebuffer:null;he.bindFramebuffer(W.FRAMEBUFFER,$e)}}},this.copyFramebufferToTexture=function(D,q,ie=0){const $=Math.pow(2,-ie),ee=Math.floor(q.image.width*$),Pe=Math.floor(q.image.height*$);Ne.setTexture2D(q,0),W.copyTexSubImage2D(W.TEXTURE_2D,ie,0,0,D.x,D.y,ee,Pe),he.unbindTexture()},this.copyTextureToTexture=function(D,q,ie,$=0){const ee=q.image.width,Pe=q.image.height,He=Fe.convert(ie.format),Ge=Fe.convert(ie.type);Ne.setTexture2D(ie,0),W.pixelStorei(W.UNPACK_FLIP_Y_WEBGL,ie.flipY),W.pixelStorei(W.UNPACK_PREMULTIPLY_ALPHA_WEBGL,ie.premultiplyAlpha),W.pixelStorei(W.UNPACK_ALIGNMENT,ie.unpackAlignment),q.isDataTexture?W.texSubImage2D(W.TEXTURE_2D,$,D.x,D.y,ee,Pe,He,Ge,q.image.data):q.isCompressedTexture?W.compressedTexSubImage2D(W.TEXTURE_2D,$,D.x,D.y,q.mipmaps[0].width,q.mipmaps[0].height,He,q.mipmaps[0].data):W.texSubImage2D(W.TEXTURE_2D,$,D.x,D.y,He,Ge,q.image),$===0&&ie.generateMipmaps&&W.generateMipmap(W.TEXTURE_2D),he.unbindTexture()},this.copyTextureToTexture3D=function(D,q,ie,$,ee=0){const Pe=D.max.x-D.min.x,He=D.max.y-D.min.y,Ge=D.max.z-D.min.z,$e=Fe.convert($.format),rt=Fe.convert($.type);let st;if($.isData3DTexture)Ne.setTexture3D($,0),st=W.TEXTURE_3D;else if($.isDataArrayTexture||$.isCompressedArrayTexture)Ne.setTexture2DArray($,0),st=W.TEXTURE_2D_ARRAY;else return;W.pixelStorei(W.UNPACK_FLIP_Y_WEBGL,$.flipY),W.pixelStorei(W.UNPACK_PREMULTIPLY_ALPHA_WEBGL,$.premultiplyAlpha),W.pixelStorei(W.UNPACK_ALIGNMENT,$.unpackAlignment);const ot=W.getParameter(W.UNPACK_ROW_LENGTH),zt=W.getParameter(W.UNPACK_IMAGE_HEIGHT),Qt=W.getParameter(W.UNPACK_SKIP_PIXELS),Rn=W.getParameter(W.UNPACK_SKIP_ROWS),Xn=W.getParameter(W.UNPACK_SKIP_IMAGES),St=ie.isCompressedTexture?ie.mipmaps[ee]:ie.image;W.pixelStorei(W.UNPACK_ROW_LENGTH,St.width),W.pixelStorei(W.UNPACK_IMAGE_HEIGHT,St.height),W.pixelStorei(W.UNPACK_SKIP_PIXELS,D.min.x),W.pixelStorei(W.UNPACK_SKIP_ROWS,D.min.y),W.pixelStorei(W.UNPACK_SKIP_IMAGES,D.min.z),ie.isDataTexture||ie.isData3DTexture?W.texSubImage3D(st,ee,q.x,q.y,q.z,Pe,He,Ge,$e,rt,St.data):$.isCompressedArrayTexture?W.compressedTexSubImage3D(st,ee,q.x,q.y,q.z,Pe,He,Ge,$e,St.data):W.texSubImage3D(st,ee,q.x,q.y,q.z,Pe,He,Ge,$e,rt,St),W.pixelStorei(W.UNPACK_ROW_LENGTH,ot),W.pixelStorei(W.UNPACK_IMAGE_HEIGHT,zt),W.pixelStorei(W.UNPACK_SKIP_PIXELS,Qt),W.pixelStorei(W.UNPACK_SKIP_ROWS,Rn),W.pixelStorei(W.UNPACK_SKIP_IMAGES,Xn),ee===0&&$.generateMipmaps&&W.generateMipmap(st),he.unbindTexture()},this.initTexture=function(D){D.isCubeTexture?Ne.setTextureCube(D,0):D.isData3DTexture?Ne.setTexture3D(D,0):D.isDataArrayTexture||D.isCompressedArrayTexture?Ne.setTexture2DArray(D,0):Ne.setTexture2D(D,0),he.unbindTexture()},this.resetState=function(){U=0,I=0,L=null,he.reset(),at.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return Bi}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(e){this._outputColorSpace=e;const t=this.getContext();t.drawingBufferColorSpace=e===vu?"display-p3":"srgb",t.unpackColorSpace=Pt.workingColorSpace===Ka?"display-p3":"srgb"}get useLegacyLights(){return this._useLegacyLights}set useLegacyLights(e){this._useLegacyLights=e}}class Su{constructor(e,t=25e-5){this.isFogExp2=!0,this.name="",this.color=new Oe(e),this.density=t}clone(){return new Su(this.color,this.density)}toJSON(){return{type:"FogExp2",name:this.name,color:this.color.getHex(),density:this.density}}}class Mu{constructor(e,t=1,n=1e3){this.isFog=!0,this.name="",this.color=new Oe(e),this.near=t,this.far=n}clone(){return new Mu(this.color,this.near,this.far)}toJSON(){return{type:"Fog",name:this.name,color:this.color.getHex(),near:this.near,far:this.far}}}class lu extends bt{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new ei,this.environmentIntensity=1,this.environmentRotation=new ei,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,this.backgroundRotation.copy(e.backgroundRotation),this.environmentIntensity=e.environmentIntensity,this.environmentRotation.copy(e.environmentRotation),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t.object.backgroundRotation=this.backgroundRotation.toArray(),this.environmentIntensity!==1&&(t.object.environmentIntensity=this.environmentIntensity),t.object.environmentRotation=this.environmentRotation.toArray(),t}}class wu{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=za,this._updateRange={offset:0,count:-1},this.updateRanges=[],this.version=0,this.uuid=$n()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}get updateRange(){return uv("THREE.InterleavedBuffer: updateRange() is deprecated and will be removed in r169. Use addUpdateRange() instead."),this._updateRange}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,n){e*=this.stride,n*=t.stride;for(let i=0,s=this.stride;i<s;i++)this.array[e+i]=t.array[n+i];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=$n()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(t,this.stride);return n.setUsage(this.usage),n}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=$n()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const Dn=new N;class Es{constructor(e,t,n,i=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=i}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,n=this.data.count;t<n;t++)Dn.fromBufferAttribute(this,t),Dn.applyMatrix4(e),this.setXYZ(t,Dn.x,Dn.y,Dn.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)Dn.fromBufferAttribute(this,t),Dn.applyNormalMatrix(e),this.setXYZ(t,Dn.x,Dn.y,Dn.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)Dn.fromBufferAttribute(this,t),Dn.transformDirection(e),this.setXYZ(t,Dn.x,Dn.y,Dn.z);return this}getComponent(e,t){let n=this.array[e*this.data.stride+this.offset+t];return this.normalized&&(n=Un(n,this.array)),n}setComponent(e,t,n){return this.normalized&&(n=dt(n,this.array)),this.data.array[e*this.data.stride+this.offset+t]=n,this}setX(e,t){return this.normalized&&(t=dt(t,this.array)),this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.normalized&&(t=dt(t,this.array)),this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.normalized&&(t=dt(t,this.array)),this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.normalized&&(t=dt(t,this.array)),this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){let t=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(t=Un(t,this.array)),t}getY(e){let t=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(t=Un(t,this.array)),t}getZ(e){let t=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(t=Un(t,this.array)),t}getW(e){let t=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(t=Un(t,this.array)),t}setXY(e,t,n){return e=e*this.data.stride+this.offset,this.normalized&&(t=dt(t,this.array),n=dt(n,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this}setXYZ(e,t,n,i){return e=e*this.data.stride+this.offset,this.normalized&&(t=dt(t,this.array),n=dt(n,this.array),i=dt(i,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this}setXYZW(e,t,n,i,s){return e=e*this.data.stride+this.offset,this.normalized&&(t=dt(t,this.array),n=dt(n,this.array),i=dt(i,this.array),s=dt(s,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this.data.array[e+3]=s,this}clone(e){if(e===void 0){const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[i+s])}return new Lt(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new Es(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[i+s])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class ip extends _n{constructor(e){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new Oe(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}let uo;const ua=new N,ho=new N,fo=new N,po=new ce,ha=new ce,bv=new et,Mc=new N,fa=new N,wc=new N,Gg=new ce,xf=new ce,Wg=new ce;class Cv extends bt{constructor(e=new ip){if(super(),this.isSprite=!0,this.type="Sprite",uo===void 0){uo=new _t;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new wu(t,5);uo.setIndex([0,1,2,0,2,3]),uo.setAttribute("position",new Es(n,3,0,!1)),uo.setAttribute("uv",new Es(n,2,3,!1))}this.geometry=uo,this.material=e,this.center=new ce(.5,.5)}raycast(e,t){e.camera,ho.setFromMatrixScale(this.matrixWorld),bv.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),fo.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&ho.multiplyScalar(-fo.z);const n=this.material.rotation;let i,s;n!==0&&(s=Math.cos(n),i=Math.sin(n));const l=this.center;Ec(Mc.set(-.5,-.5,0),fo,l,ho,i,s),Ec(fa.set(.5,-.5,0),fo,l,ho,i,s),Ec(wc.set(.5,.5,0),fo,l,ho,i,s),Gg.set(0,0),xf.set(1,0),Wg.set(1,1);let c=e.ray.intersectTriangle(Mc,fa,wc,!1,ua);if(c===null&&(Ec(fa.set(-.5,.5,0),fo,l,ho,i,s),xf.set(0,1),c=e.ray.intersectTriangle(Mc,wc,fa,!1,ua),c===null))return;const u=e.ray.origin.distanceTo(ua);u<e.near||u>e.far||t.push({distance:u,point:ua.clone(),uv:Qn.getInterpolation(ua,Mc,fa,wc,Gg,xf,Wg,new ce),face:null,object:this})}copy(e,t){return super.copy(e,t),e.center!==void 0&&this.center.copy(e.center),this.material=e.material,this}}function Ec(r,e,t,n,i,s){po.subVectors(r,t).addScalar(.5).multiply(n),i!==void 0?(ha.x=s*po.x-i*po.y,ha.y=i*po.x+s*po.y):ha.copy(po),r.copy(e),r.x+=ha.x,r.y+=ha.y,r.applyMatrix4(bv)}const Tc=new N,Xg=new N;class Rv extends bt{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(e){super.copy(e,!1);const t=e.levels;for(let n=0,i=t.length;n<i;n++){const s=t[n];this.addLevel(s.object.clone(),s.distance,s.hysteresis)}return this.autoUpdate=e.autoUpdate,this}addLevel(e,t=0,n=0){t=Math.abs(t);const i=this.levels;let s;for(s=0;s<i.length&&!(t<i[s].distance);s++);return i.splice(s,0,{distance:t,hysteresis:n,object:e}),this.add(e),this}getCurrentLevel(){return this._currentLevel}getObjectForDistance(e){const t=this.levels;if(t.length>0){let n,i;for(n=1,i=t.length;n<i;n++){let s=t[n].distance;if(t[n].object.visible&&(s-=s*t[n].hysteresis),e<s)break}return t[n-1].object}return null}raycast(e,t){if(this.levels.length>0){Tc.setFromMatrixPosition(this.matrixWorld);const i=e.ray.origin.distanceTo(Tc);this.getObjectForDistance(i).raycast(e,t)}}update(e){const t=this.levels;if(t.length>1){Tc.setFromMatrixPosition(e.matrixWorld),Xg.setFromMatrixPosition(this.matrixWorld);const n=Tc.distanceTo(Xg)/e.zoom;t[0].object.visible=!0;let i,s;for(i=1,s=t.length;i<s;i++){let l=t[i].distance;if(t[i].object.visible&&(l-=l*t[i].hysteresis),n>=l)t[i-1].object.visible=!1,t[i].object.visible=!0;else break}for(this._currentLevel=i-1;i<s;i++)t[i].object.visible=!1}}toJSON(e){const t=super.toJSON(e);this.autoUpdate===!1&&(t.object.autoUpdate=!1),t.object.levels=[];const n=this.levels;for(let i=0,s=n.length;i<s;i++){const l=n[i];t.object.levels.push({object:l.object.uuid,distance:l.distance,hysteresis:l.hysteresis})}return t}}const Yg=new N,qg=new It,Zg=new It,YT=new N,jg=new et,Ac=new N,Sf=new Cn,Jg=new et,Mf=new bs;class Pv extends sn{constructor(e,t){super(e,t),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode=qf,this.bindMatrix=new et,this.bindMatrixInverse=new et,this.boundingBox=null,this.boundingSphere=null}computeBoundingBox(){const e=this.geometry;this.boundingBox===null&&(this.boundingBox=new On),this.boundingBox.makeEmpty();const t=e.getAttribute("position");for(let n=0;n<t.count;n++)this.getVertexPosition(n,Ac),this.boundingBox.expandByPoint(Ac)}computeBoundingSphere(){const e=this.geometry;this.boundingSphere===null&&(this.boundingSphere=new Cn),this.boundingSphere.makeEmpty();const t=e.getAttribute("position");for(let n=0;n<t.count;n++)this.getVertexPosition(n,Ac),this.boundingSphere.expandByPoint(Ac)}copy(e,t){return super.copy(e,t),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}raycast(e,t){const n=this.material,i=this.matrixWorld;n!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),Sf.copy(this.boundingSphere),Sf.applyMatrix4(i),e.ray.intersectsSphere(Sf)!==!1&&(Jg.copy(i).invert(),Mf.copy(e.ray).applyMatrix4(Jg),!(this.boundingBox!==null&&Mf.intersectsBox(this.boundingBox)===!1)&&this._computeIntersections(e,t,Mf)))}getVertexPosition(e,t){return super.getVertexPosition(e,t),this.applyBoneTransform(e,t),t}bind(e,t){this.skeleton=e,t===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new It,t=this.geometry.attributes.skinWeight;for(let n=0,i=t.count;n<i;n++){e.fromBufferAttribute(t,n);const s=1/e.manhattanLength();s!==1/0?e.multiplyScalar(s):e.set(1,0,0,0),t.setXYZW(n,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),this.bindMode===qf?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode===z_&&this.bindMatrixInverse.copy(this.bindMatrix).invert()}applyBoneTransform(e,t){const n=this.skeleton,i=this.geometry;qg.fromBufferAttribute(i.attributes.skinIndex,e),Zg.fromBufferAttribute(i.attributes.skinWeight,e),Yg.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let s=0;s<4;s++){const l=Zg.getComponent(s);if(l!==0){const c=qg.getComponent(s);jg.multiplyMatrices(n.bones[c].matrixWorld,n.boneInverses[c]),t.addScaledVector(YT.copy(Yg).applyMatrix4(jg),l)}}return t.applyMatrix4(this.bindMatrixInverse)}}class rp extends bt{constructor(){super(),this.isBone=!0,this.type="Bone"}}class Dr extends Xt{constructor(e=null,t=1,n=1,i,s,l,c,u,h=mn,f=mn,p,g){super(null,l,c,u,h,f,i,s,p,g),this.isDataTexture=!0,this.image={data:e,width:t,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const Kg=new et,qT=new et;class Eu{constructor(e=[],t=[]){this.uuid=$n(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.init()}init(){const e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(e.length*16),t.length===0)this.calculateInverses();else if(e.length!==t.length){this.boneInverses=[];for(let n=0,i=this.bones.length;n<i;n++)this.boneInverses.push(new et)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){const n=new et;this.bones[e]&&n.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(n)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&n.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&(n.parent&&n.parent.isBone?(n.matrix.copy(n.parent.matrixWorld).invert(),n.matrix.multiply(n.matrixWorld)):n.matrix.copy(n.matrixWorld),n.matrix.decompose(n.position,n.quaternion,n.scale))}}update(){const e=this.bones,t=this.boneInverses,n=this.boneMatrices,i=this.boneTexture;for(let s=0,l=e.length;s<l;s++){const c=e[s]?e[s].matrixWorld:qT;Kg.multiplyMatrices(c,t[s]),Kg.toArray(n,s*16)}i!==null&&(i.needsUpdate=!0)}clone(){return new Eu(this.bones,this.boneInverses)}computeBoneTexture(){let e=Math.sqrt(this.bones.length*4);e=Math.ceil(e/4)*4,e=Math.max(e,4);const t=new Float32Array(e*e*4);t.set(this.boneMatrices);const n=new Dr(t,e,e,Gn,di);return n.needsUpdate=!0,this.boneMatrices=t,this.boneTexture=n,this}getBoneByName(e){for(let t=0,n=this.bones.length;t<n;t++){const i=this.bones[t];if(i.name===e)return i}}dispose(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,t){this.uuid=e.uuid;for(let n=0,i=e.bones.length;n<i;n++){const s=e.bones[n];let l=t[s];l===void 0&&(l=new rp),this.bones.push(l),this.boneInverses.push(new et().fromArray(e.boneInverses[n]))}return this.init(),this}toJSON(){const e={metadata:{version:4.6,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;const t=this.bones,n=this.boneInverses;for(let i=0,s=t.length;i<s;i++){const l=t[i];e.bones.push(l.uuid);const c=n[i];e.boneInverses.push(c.toArray())}return e}}class Lo extends Lt{constructor(e,t,n,i=1){super(e,t,n),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}const mo=new et,Qg=new et,bc=[],$g=new On,ZT=new et,da=new sn,pa=new Cn;class Iv extends sn{constructor(e,t,n){super(e,t),this.isInstancedMesh=!0,this.instanceMatrix=new Lo(new Float32Array(n*16),16),this.instanceColor=null,this.morphTexture=null,this.count=n,this.boundingBox=null,this.boundingSphere=null;for(let i=0;i<n;i++)this.setMatrixAt(i,ZT)}computeBoundingBox(){const e=this.geometry,t=this.count;this.boundingBox===null&&(this.boundingBox=new On),e.boundingBox===null&&e.computeBoundingBox(),this.boundingBox.makeEmpty();for(let n=0;n<t;n++)this.getMatrixAt(n,mo),$g.copy(e.boundingBox).applyMatrix4(mo),this.boundingBox.union($g)}computeBoundingSphere(){const e=this.geometry,t=this.count;this.boundingSphere===null&&(this.boundingSphere=new Cn),e.boundingSphere===null&&e.computeBoundingSphere(),this.boundingSphere.makeEmpty();for(let n=0;n<t;n++)this.getMatrixAt(n,mo),pa.copy(e.boundingSphere).applyMatrix4(mo),this.boundingSphere.union(pa)}copy(e,t){return super.copy(e,t),this.instanceMatrix.copy(e.instanceMatrix),e.morphTexture!==null&&(this.morphTexture=e.morphTexture.clone()),e.instanceColor!==null&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}getColorAt(e,t){t.fromArray(this.instanceColor.array,e*3)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,e*16)}getMorphAt(e,t){const n=t.morphTargetInfluences,i=this.morphTexture.source.data.data,s=n.length+1,l=e*s+1;for(let c=0;c<n.length;c++)n[c]=i[l+c]}raycast(e,t){const n=this.matrixWorld,i=this.count;if(da.geometry=this.geometry,da.material=this.material,da.material!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),pa.copy(this.boundingSphere),pa.applyMatrix4(n),e.ray.intersectsSphere(pa)!==!1))for(let s=0;s<i;s++){this.getMatrixAt(s,mo),Qg.multiplyMatrices(n,mo),da.matrixWorld=Qg,da.raycast(e,bc);for(let l=0,c=bc.length;l<c;l++){const u=bc[l];u.instanceId=s,u.object=this,t.push(u)}bc.length=0}}setColorAt(e,t){this.instanceColor===null&&(this.instanceColor=new Lo(new Float32Array(this.instanceMatrix.count*3),3)),t.toArray(this.instanceColor.array,e*3)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,e*16)}setMorphAt(e,t){const n=t.morphTargetInfluences,i=n.length+1;this.morphTexture===null&&(this.morphTexture=new Dr(new Float32Array(i*this.count),i,this.count,Gd,di));const s=this.morphTexture.source.data.data;let l=0;for(let h=0;h<n.length;h++)l+=n[h];const c=this.geometry.morphTargetsRelative?1:1-l,u=i*e;s[u]=c,s.set(n,u+1)}updateMorphTargets(){}dispose(){return this.dispatchEvent({type:"dispose"}),this.morphTexture!==null&&(this.morphTexture.dispose(),this.morphTexture=null),this}}function jT(r,e){return r.z-e.z}function JT(r,e){return e.z-r.z}class KT{constructor(){this.index=0,this.pool=[],this.list=[]}push(e,t){const n=this.pool,i=this.list;this.index>=n.length&&n.push({start:-1,count:-1,z:-1});const s=n[this.index];i.push(s),this.index++,s.start=e.start,s.count=e.count,s.z=t}reset(){this.list.length=0,this.index=0}}const go="batchId",Rr=new et,e0=new et,QT=new et,t0=new et,wf=new el,Cc=new On,ts=new Cn,ma=new N,Ef=new KT,Tn=new sn,Rc=[];function $T(r,e,t=0){const n=e.itemSize;if(r.isInterleavedBufferAttribute||r.array.constructor!==e.array.constructor){const i=r.count;for(let s=0;s<i;s++)for(let l=0;l<n;l++)e.setComponent(s+t,l,r.getComponent(s,l))}else e.array.set(r.array,t*n);e.needsUpdate=!0}class Lv extends sn{get maxGeometryCount(){return this._maxGeometryCount}constructor(e,t,n=t*2,i){super(new _t,i),this.isBatchedMesh=!0,this.perObjectFrustumCulled=!0,this.sortObjects=!0,this.boundingBox=null,this.boundingSphere=null,this.customSort=null,this._drawRanges=[],this._reservedRanges=[],this._visibility=[],this._active=[],this._bounds=[],this._maxGeometryCount=e,this._maxVertexCount=t,this._maxIndexCount=n,this._geometryInitialized=!1,this._geometryCount=0,this._multiDrawCounts=new Int32Array(e),this._multiDrawStarts=new Int32Array(e),this._multiDrawCount=0,this._multiDrawInstances=null,this._visibilityChanged=!0,this._matricesTexture=null,this._initMatricesTexture()}_initMatricesTexture(){let e=Math.sqrt(this._maxGeometryCount*4);e=Math.ceil(e/4)*4,e=Math.max(e,4);const t=new Float32Array(e*e*4),n=new Dr(t,e,e,Gn,di);this._matricesTexture=n}_initializeGeometry(e){const t=this.geometry,n=this._maxVertexCount,i=this._maxGeometryCount,s=this._maxIndexCount;if(this._geometryInitialized===!1){for(const c in e.attributes){const u=e.getAttribute(c),{array:h,itemSize:f,normalized:p}=u,g=new h.constructor(n*f),m=new Lt(g,f,p);t.setAttribute(c,m)}if(e.getIndex()!==null){const c=n>65536?new Uint32Array(s):new Uint16Array(s);t.setIndex(new Lt(c,1))}const l=i>65536?new Uint32Array(n):new Uint16Array(n);t.setAttribute(go,new Lt(l,1)),this._geometryInitialized=!0}}_validateGeometry(e){if(e.getAttribute(go))throw new Error(`BatchedMesh: Geometry cannot use attribute "${go}"`);const t=this.geometry;if(!!e.getIndex()!=!!t.getIndex())throw new Error('BatchedMesh: All geometries must consistently have "index".');for(const n in t.attributes){if(n===go)continue;if(!e.hasAttribute(n))throw new Error(`BatchedMesh: Added geometry missing "${n}". All geometries must have consistent attributes.`);const i=e.getAttribute(n),s=t.getAttribute(n);if(i.itemSize!==s.itemSize||i.normalized!==s.normalized)throw new Error("BatchedMesh: All attributes must have a consistent itemSize and normalized value.")}}setCustomSort(e){return this.customSort=e,this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new On);const e=this._geometryCount,t=this.boundingBox,n=this._active;t.makeEmpty();for(let i=0;i<e;i++)n[i]!==!1&&(this.getMatrixAt(i,Rr),this.getBoundingBoxAt(i,Cc).applyMatrix4(Rr),t.union(Cc))}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Cn);const e=this._geometryCount,t=this.boundingSphere,n=this._active;t.makeEmpty();for(let i=0;i<e;i++)n[i]!==!1&&(this.getMatrixAt(i,Rr),this.getBoundingSphereAt(i,ts).applyMatrix4(Rr),t.union(ts))}addGeometry(e,t=-1,n=-1){if(this._initializeGeometry(e),this._validateGeometry(e),this._geometryCount>=this._maxGeometryCount)throw new Error("BatchedMesh: Maximum geometry count reached.");const i={vertexStart:-1,vertexCount:-1,indexStart:-1,indexCount:-1};let s=null;const l=this._reservedRanges,c=this._drawRanges,u=this._bounds;this._geometryCount!==0&&(s=l[l.length-1]),t===-1?i.vertexCount=e.getAttribute("position").count:i.vertexCount=t,s===null?i.vertexStart=0:i.vertexStart=s.vertexStart+s.vertexCount;const h=e.getIndex(),f=h!==null;if(f&&(n===-1?i.indexCount=h.count:i.indexCount=n,s===null?i.indexStart=0:i.indexStart=s.indexStart+s.indexCount),i.indexStart!==-1&&i.indexStart+i.indexCount>this._maxIndexCount||i.vertexStart+i.vertexCount>this._maxVertexCount)throw new Error("BatchedMesh: Reserved space request exceeds the maximum buffer size.");const p=this._visibility,g=this._active,m=this._matricesTexture,y=this._matricesTexture.image.data;p.push(!0),g.push(!0);const M=this._geometryCount;this._geometryCount++,QT.toArray(y,M*16),m.needsUpdate=!0,l.push(i),c.push({start:f?i.indexStart:i.vertexStart,count:-1}),u.push({boxInitialized:!1,box:new On,sphereInitialized:!1,sphere:new Cn});const x=this.geometry.getAttribute(go);for(let v=0;v<i.vertexCount;v++)x.setX(i.vertexStart+v,M);return x.needsUpdate=!0,this.setGeometryAt(M,e),M}setGeometryAt(e,t){if(e>=this._geometryCount)throw new Error("BatchedMesh: Maximum geometry count reached.");this._validateGeometry(t);const n=this.geometry,i=n.getIndex()!==null,s=n.getIndex(),l=t.getIndex(),c=this._reservedRanges[e];if(i&&l.count>c.indexCount||t.attributes.position.count>c.vertexCount)throw new Error("BatchedMesh: Reserved space not large enough for provided geometry.");const u=c.vertexStart,h=c.vertexCount;for(const m in n.attributes){if(m===go)continue;const y=t.getAttribute(m),M=n.getAttribute(m);$T(y,M,u);const x=y.itemSize;for(let v=y.count,E=h;v<E;v++){const w=u+v;for(let A=0;A<x;A++)M.setComponent(w,A,0)}M.needsUpdate=!0,M.addUpdateRange(u*x,h*x)}if(i){const m=c.indexStart;for(let y=0;y<l.count;y++)s.setX(m+y,u+l.getX(y));for(let y=l.count,M=c.indexCount;y<M;y++)s.setX(m+y,u);s.needsUpdate=!0,s.addUpdateRange(m,c.indexCount)}const f=this._bounds[e];t.boundingBox!==null?(f.box.copy(t.boundingBox),f.boxInitialized=!0):f.boxInitialized=!1,t.boundingSphere!==null?(f.sphere.copy(t.boundingSphere),f.sphereInitialized=!0):f.sphereInitialized=!1;const p=this._drawRanges[e],g=t.getAttribute("position");return p.count=i?l.count:g.count,this._visibilityChanged=!0,e}deleteGeometry(e){const t=this._active;return e>=t.length||t[e]===!1?this:(t[e]=!1,this._visibilityChanged=!0,this)}getInstanceCountAt(e){return this._multiDrawInstances===null?null:this._multiDrawInstances[e]}setInstanceCountAt(e,t){return this._multiDrawInstances===null&&(this._multiDrawInstances=new Int32Array(this._maxGeometryCount).fill(1)),this._multiDrawInstances[e]=t,e}getBoundingBoxAt(e,t){if(this._active[e]===!1)return null;const i=this._bounds[e],s=i.box,l=this.geometry;if(i.boxInitialized===!1){s.makeEmpty();const c=l.index,u=l.attributes.position,h=this._drawRanges[e];for(let f=h.start,p=h.start+h.count;f<p;f++){let g=f;c&&(g=c.getX(g)),s.expandByPoint(ma.fromBufferAttribute(u,g))}i.boxInitialized=!0}return t.copy(s),t}getBoundingSphereAt(e,t){if(this._active[e]===!1)return null;const i=this._bounds[e],s=i.sphere,l=this.geometry;if(i.sphereInitialized===!1){s.makeEmpty(),this.getBoundingBoxAt(e,Cc),Cc.getCenter(s.center);const c=l.index,u=l.attributes.position,h=this._drawRanges[e];let f=0;for(let p=h.start,g=h.start+h.count;p<g;p++){let m=p;c&&(m=c.getX(m)),ma.fromBufferAttribute(u,m),f=Math.max(f,s.center.distanceToSquared(ma))}s.radius=Math.sqrt(f),i.sphereInitialized=!0}return t.copy(s),t}setMatrixAt(e,t){const n=this._active,i=this._matricesTexture,s=this._matricesTexture.image.data,l=this._geometryCount;return e>=l||n[e]===!1?this:(t.toArray(s,e*16),i.needsUpdate=!0,this)}getMatrixAt(e,t){const n=this._active,i=this._matricesTexture.image.data,s=this._geometryCount;return e>=s||n[e]===!1?null:t.fromArray(i,e*16)}setVisibleAt(e,t){const n=this._visibility,i=this._active,s=this._geometryCount;return e>=s||i[e]===!1||n[e]===t?this:(n[e]=t,this._visibilityChanged=!0,this)}getVisibleAt(e){const t=this._visibility,n=this._active,i=this._geometryCount;return e>=i||n[e]===!1?!1:t[e]}raycast(e,t){const n=this._visibility,i=this._active,s=this._drawRanges,l=this._geometryCount,c=this.matrixWorld,u=this.geometry;Tn.material=this.material,Tn.geometry.index=u.index,Tn.geometry.attributes=u.attributes,Tn.geometry.boundingBox===null&&(Tn.geometry.boundingBox=new On),Tn.geometry.boundingSphere===null&&(Tn.geometry.boundingSphere=new Cn);for(let h=0;h<l;h++){if(!n[h]||!i[h])continue;const f=s[h];Tn.geometry.setDrawRange(f.start,f.count),this.getMatrixAt(h,Tn.matrixWorld).premultiply(c),this.getBoundingBoxAt(h,Tn.geometry.boundingBox),this.getBoundingSphereAt(h,Tn.geometry.boundingSphere),Tn.raycast(e,Rc);for(let p=0,g=Rc.length;p<g;p++){const m=Rc[p];m.object=this,m.batchId=h,t.push(m)}Rc.length=0}Tn.material=null,Tn.geometry.index=null,Tn.geometry.attributes={},Tn.geometry.setDrawRange(0,1/0)}copy(e){return super.copy(e),this.geometry=e.geometry.clone(),this.perObjectFrustumCulled=e.perObjectFrustumCulled,this.sortObjects=e.sortObjects,this.boundingBox=e.boundingBox!==null?e.boundingBox.clone():null,this.boundingSphere=e.boundingSphere!==null?e.boundingSphere.clone():null,this._drawRanges=e._drawRanges.map(t=>({...t})),this._reservedRanges=e._reservedRanges.map(t=>({...t})),this._visibility=e._visibility.slice(),this._active=e._active.slice(),this._bounds=e._bounds.map(t=>({boxInitialized:t.boxInitialized,box:t.box.clone(),sphereInitialized:t.sphereInitialized,sphere:t.sphere.clone()})),this._maxGeometryCount=e._maxGeometryCount,this._maxVertexCount=e._maxVertexCount,this._maxIndexCount=e._maxIndexCount,this._geometryInitialized=e._geometryInitialized,this._geometryCount=e._geometryCount,this._multiDrawCounts=e._multiDrawCounts.slice(),this._multiDrawStarts=e._multiDrawStarts.slice(),this._matricesTexture=e._matricesTexture.clone(),this._matricesTexture.image.data=this._matricesTexture.image.slice(),this}dispose(){return this.geometry.dispose(),this._matricesTexture.dispose(),this._matricesTexture=null,this}onBeforeRender(e,t,n,i,s){if(!this._visibilityChanged&&!this.perObjectFrustumCulled&&!this.sortObjects)return;const l=i.getIndex(),c=l===null?1:l.array.BYTES_PER_ELEMENT,u=this._active,h=this._visibility,f=this._multiDrawStarts,p=this._multiDrawCounts,g=this._drawRanges,m=this.perObjectFrustumCulled;m&&(t0.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse).multiply(this.matrixWorld),wf.setFromProjectionMatrix(t0,e.coordinateSystem));let y=0;if(this.sortObjects){e0.copy(this.matrixWorld).invert(),ma.setFromMatrixPosition(n.matrixWorld).applyMatrix4(e0);for(let v=0,E=h.length;v<E;v++)if(h[v]&&u[v]){this.getMatrixAt(v,Rr),this.getBoundingSphereAt(v,ts).applyMatrix4(Rr);let w=!1;if(m&&(w=!wf.intersectsSphere(ts)),!w){const A=ma.distanceTo(ts.center);Ef.push(g[v],A)}}const M=Ef.list,x=this.customSort;x===null?M.sort(s.transparent?JT:jT):x.call(this,M,n);for(let v=0,E=M.length;v<E;v++){const w=M[v];f[y]=w.start*c,p[y]=w.count,y++}Ef.reset()}else for(let M=0,x=h.length;M<x;M++)if(h[M]&&u[M]){let v=!1;if(m&&(this.getMatrixAt(M,Rr),this.getBoundingSphereAt(M,ts).applyMatrix4(Rr),v=!wf.intersectsSphere(ts)),!v){const E=g[M];f[y]=E.start*c,p[y]=E.count,y++}}this._multiDrawCount=y,this._visibilityChanged=!1}onBeforeShadow(e,t,n,i,s,l){this.onBeforeRender(e,null,i,s,l)}}class Fn extends _n{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new Oe(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const cu=new N,uu=new N,n0=new et,ga=new bs,Pc=new Cn,Tf=new N,i0=new N;class Ur extends bt{constructor(e=new _t,t=new Fn){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[0];for(let i=1,s=t.count;i<s;i++)cu.fromBufferAttribute(t,i-1),uu.fromBufferAttribute(t,i),n[i]=n[i-1],n[i]+=cu.distanceTo(uu);e.setAttribute("lineDistance",new ke(n,1))}return this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,s=e.params.Line.threshold,l=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),Pc.copy(n.boundingSphere),Pc.applyMatrix4(i),Pc.radius+=s,e.ray.intersectsSphere(Pc)===!1)return;n0.copy(i).invert(),ga.copy(e.ray).applyMatrix4(n0);const c=s/((this.scale.x+this.scale.y+this.scale.z)/3),u=c*c,h=this.isLineSegments?2:1,f=n.index,g=n.attributes.position;if(f!==null){const m=Math.max(0,l.start),y=Math.min(f.count,l.start+l.count);for(let M=m,x=y-1;M<x;M+=h){const v=f.getX(M),E=f.getX(M+1),w=Ic(this,e,ga,u,v,E);w&&t.push(w)}if(this.isLineLoop){const M=f.getX(y-1),x=f.getX(m),v=Ic(this,e,ga,u,M,x);v&&t.push(v)}}else{const m=Math.max(0,l.start),y=Math.min(g.count,l.start+l.count);for(let M=m,x=y-1;M<x;M+=h){const v=Ic(this,e,ga,u,M,M+1);v&&t.push(v)}if(this.isLineLoop){const M=Ic(this,e,ga,u,y-1,m);M&&t.push(M)}}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,l=i.length;s<l;s++){const c=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=s}}}}}function Ic(r,e,t,n,i,s){const l=r.geometry.attributes.position;if(cu.fromBufferAttribute(l,i),uu.fromBufferAttribute(l,s),t.distanceSqToSegment(cu,uu,Tf,i0)>n)return;Tf.applyMatrix4(r.matrixWorld);const u=e.ray.origin.distanceTo(Tf);if(!(u<e.near||u>e.far))return{distance:u,point:i0.clone().applyMatrix4(r.matrixWorld),index:i,face:null,faceIndex:null,object:r}}const r0=new N,s0=new N;class Wi extends Ur{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[];for(let i=0,s=t.count;i<s;i+=2)r0.fromBufferAttribute(t,i),s0.fromBufferAttribute(t,i+1),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+r0.distanceTo(s0);e.setAttribute("lineDistance",new ke(n,1))}return this}}class Dv extends Ur{constructor(e,t){super(e,t),this.isLineLoop=!0,this.type="LineLoop"}}class sp extends _n{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new Oe(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}const o0=new et,Ed=new bs,Lc=new Cn,Dc=new N;class Nv extends bt{constructor(e=new _t,t=new sp){super(),this.isPoints=!0,this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,s=e.params.Points.threshold,l=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),Lc.copy(n.boundingSphere),Lc.applyMatrix4(i),Lc.radius+=s,e.ray.intersectsSphere(Lc)===!1)return;o0.copy(i).invert(),Ed.copy(e.ray).applyMatrix4(o0);const c=s/((this.scale.x+this.scale.y+this.scale.z)/3),u=c*c,h=n.index,p=n.attributes.position;if(h!==null){const g=Math.max(0,l.start),m=Math.min(h.count,l.start+l.count);for(let y=g,M=m;y<M;y++){const x=h.getX(y);Dc.fromBufferAttribute(p,x),a0(Dc,x,u,i,e,t,this)}}else{const g=Math.max(0,l.start),m=Math.min(p.count,l.start+l.count);for(let y=g,M=m;y<M;y++)Dc.fromBufferAttribute(p,y),a0(Dc,y,u,i,e,t,this)}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,l=i.length;s<l;s++){const c=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=s}}}}}function a0(r,e,t,n,i,s,l){const c=Ed.distanceSqToPoint(r);if(c<t){const u=new N;Ed.closestPointToPoint(r,u),u.applyMatrix4(n);const h=i.ray.origin.distanceTo(u);if(h<i.near||h>i.far)return;s.push({distance:h,distanceToRay:Math.sqrt(c),point:u,index:e,face:null,object:l})}}class eA extends Xt{constructor(e,t,n,i,s,l,c,u,h){super(e,t,n,i,s,l,c,u,h),this.isVideoTexture=!0,this.minFilter=l!==void 0?l:rn,this.magFilter=s!==void 0?s:rn,this.generateMipmaps=!1;const f=this;function p(){f.needsUpdate=!0,e.requestVideoFrameCallback(p)}"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(p)}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image;"requestVideoFrameCallback"in e===!1&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}class tA extends Xt{constructor(e,t){super({width:e,height:t}),this.isFramebufferTexture=!0,this.magFilter=mn,this.minFilter=mn,this.generateMipmaps=!1,this.needsUpdate=!0}}class Tu extends Xt{constructor(e,t,n,i,s,l,c,u,h,f,p,g){super(null,l,c,u,h,f,i,s,p,g),this.isCompressedTexture=!0,this.image={width:t,height:n},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}class nA extends Tu{constructor(e,t,n,i,s,l){super(e,t,n,s,l),this.isCompressedArrayTexture=!0,this.image.depth=i,this.wrapR=fi}}class iA extends Tu{constructor(e,t,n){super(void 0,e[0].width,e[0].height,t,n,ur),this.isCompressedCubeTexture=!0,this.isCubeTexture=!0,this.image=e}}class rA extends Xt{constructor(e,t,n,i,s,l,c,u,h){super(e,t,n,i,s,l,c,u,h),this.isCanvasTexture=!0,this.needsUpdate=!0}}class Ai{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return null}getPointAt(e,t){const n=this.getUtoTmapping(e);return this.getPoint(n,t)}getPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return t}getSpacedPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let n,i=this.getPoint(0),s=0;t.push(0);for(let l=1;l<=e;l++)n=this.getPoint(l/e),s+=n.distanceTo(i),t.push(s),i=n;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){const n=this.getLengths();let i=0;const s=n.length;let l;t?l=t:l=e*n[s-1];let c=0,u=s-1,h;for(;c<=u;)if(i=Math.floor(c+(u-c)/2),h=n[i]-l,h<0)c=i+1;else if(h>0)u=i-1;else{u=i;break}if(i=u,n[i]===l)return i/(s-1);const f=n[i],g=n[i+1]-f,m=(l-f)/g;return(i+m)/(s-1)}getTangent(e,t){let i=e-1e-4,s=e+1e-4;i<0&&(i=0),s>1&&(s=1);const l=this.getPoint(i),c=this.getPoint(s),u=t||(l.isVector2?new ce:new N);return u.copy(c).sub(l).normalize(),u}getTangentAt(e,t){const n=this.getUtoTmapping(e);return this.getTangent(n,t)}computeFrenetFrames(e,t){const n=new N,i=[],s=[],l=[],c=new N,u=new et;for(let m=0;m<=e;m++){const y=m/e;i[m]=this.getTangentAt(y,new N)}s[0]=new N,l[0]=new N;let h=Number.MAX_VALUE;const f=Math.abs(i[0].x),p=Math.abs(i[0].y),g=Math.abs(i[0].z);f<=h&&(h=f,n.set(1,0,0)),p<=h&&(h=p,n.set(0,1,0)),g<=h&&n.set(0,0,1),c.crossVectors(i[0],n).normalize(),s[0].crossVectors(i[0],c),l[0].crossVectors(i[0],s[0]);for(let m=1;m<=e;m++){if(s[m]=s[m-1].clone(),l[m]=l[m-1].clone(),c.crossVectors(i[m-1],i[m]),c.length()>Number.EPSILON){c.normalize();const y=Math.acos(Zt(i[m-1].dot(i[m]),-1,1));s[m].applyMatrix4(u.makeRotationAxis(c,y))}l[m].crossVectors(i[m],s[m])}if(t===!0){let m=Math.acos(Zt(s[0].dot(s[e]),-1,1));m/=e,i[0].dot(c.crossVectors(s[0],s[e]))>0&&(m=-m);for(let y=1;y<=e;y++)s[y].applyMatrix4(u.makeRotationAxis(i[y],m*y)),l[y].crossVectors(i[y],s[y])}return{tangents:i,normals:s,binormals:l}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.6,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class Au extends Ai{constructor(e=0,t=0,n=1,i=1,s=0,l=Math.PI*2,c=!1,u=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=n,this.yRadius=i,this.aStartAngle=s,this.aEndAngle=l,this.aClockwise=c,this.aRotation=u}getPoint(e,t=new ce){const n=t,i=Math.PI*2;let s=this.aEndAngle-this.aStartAngle;const l=Math.abs(s)<Number.EPSILON;for(;s<0;)s+=i;for(;s>i;)s-=i;s<Number.EPSILON&&(l?s=0:s=i),this.aClockwise===!0&&!l&&(s===i?s=-i:s=s-i);const c=this.aStartAngle+e*s;let u=this.aX+this.xRadius*Math.cos(c),h=this.aY+this.yRadius*Math.sin(c);if(this.aRotation!==0){const f=Math.cos(this.aRotation),p=Math.sin(this.aRotation),g=u-this.aX,m=h-this.aY;u=g*f-m*p+this.aX,h=g*p+m*f+this.aY}return n.set(u,h)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}class Uv extends Au{constructor(e,t,n,i,s,l){super(e,t,n,n,i,s,l),this.isArcCurve=!0,this.type="ArcCurve"}}function op(){let r=0,e=0,t=0,n=0;function i(s,l,c,u){r=s,e=c,t=-3*s+3*l-2*c-u,n=2*s-2*l+c+u}return{initCatmullRom:function(s,l,c,u,h){i(l,c,h*(c-s),h*(u-l))},initNonuniformCatmullRom:function(s,l,c,u,h,f,p){let g=(l-s)/h-(c-s)/(h+f)+(c-l)/f,m=(c-l)/f-(u-l)/(f+p)+(u-c)/p;g*=f,m*=f,i(l,c,g,m)},calc:function(s){const l=s*s,c=l*s;return r+e*s+t*l+n*c}}}const Nc=new N,Af=new op,bf=new op,Cf=new op;class Ov extends Ai{constructor(e=[],t=!1,n="centripetal",i=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=n,this.tension=i}getPoint(e,t=new N){const n=t,i=this.points,s=i.length,l=(s-(this.closed?0:1))*e;let c=Math.floor(l),u=l-c;this.closed?c+=c>0?0:(Math.floor(Math.abs(c)/s)+1)*s:u===0&&c===s-1&&(c=s-2,u=1);let h,f;this.closed||c>0?h=i[(c-1)%s]:(Nc.subVectors(i[0],i[1]).add(i[0]),h=Nc);const p=i[c%s],g=i[(c+1)%s];if(this.closed||c+2<s?f=i[(c+2)%s]:(Nc.subVectors(i[s-1],i[s-2]).add(i[s-1]),f=Nc),this.curveType==="centripetal"||this.curveType==="chordal"){const m=this.curveType==="chordal"?.5:.25;let y=Math.pow(h.distanceToSquared(p),m),M=Math.pow(p.distanceToSquared(g),m),x=Math.pow(g.distanceToSquared(f),m);M<1e-4&&(M=1),y<1e-4&&(y=M),x<1e-4&&(x=M),Af.initNonuniformCatmullRom(h.x,p.x,g.x,f.x,y,M,x),bf.initNonuniformCatmullRom(h.y,p.y,g.y,f.y,y,M,x),Cf.initNonuniformCatmullRom(h.z,p.z,g.z,f.z,y,M,x)}else this.curveType==="catmullrom"&&(Af.initCatmullRom(h.x,p.x,g.x,f.x,this.tension),bf.initCatmullRom(h.y,p.y,g.y,f.y,this.tension),Cf.initCatmullRom(h.z,p.z,g.z,f.z,this.tension));return n.set(Af.calc(u),bf.calc(u),Cf.calc(u)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new N().fromArray(i))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}function l0(r,e,t,n,i){const s=(n-e)*.5,l=(i-t)*.5,c=r*r,u=r*c;return(2*t-2*n+s+l)*u+(-3*t+3*n-2*s-l)*c+s*r+t}function sA(r,e){const t=1-r;return t*t*e}function oA(r,e){return 2*(1-r)*r*e}function aA(r,e){return r*r*e}function Ta(r,e,t,n){return sA(r,e)+oA(r,t)+aA(r,n)}function lA(r,e){const t=1-r;return t*t*t*e}function cA(r,e){const t=1-r;return 3*t*t*r*e}function uA(r,e){return 3*(1-r)*r*r*e}function hA(r,e){return r*r*r*e}function Aa(r,e,t,n,i){return lA(r,e)+cA(r,t)+uA(r,n)+hA(r,i)}class ap extends Ai{constructor(e=new ce,t=new ce,n=new ce,i=new ce){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new ce){const n=t,i=this.v0,s=this.v1,l=this.v2,c=this.v3;return n.set(Aa(e,i.x,s.x,l.x,c.x),Aa(e,i.y,s.y,l.y,c.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class Fv extends Ai{constructor(e=new N,t=new N,n=new N,i=new N){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new N){const n=t,i=this.v0,s=this.v1,l=this.v2,c=this.v3;return n.set(Aa(e,i.x,s.x,l.x,c.x),Aa(e,i.y,s.y,l.y,c.y),Aa(e,i.z,s.z,l.z,c.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class lp extends Ai{constructor(e=new ce,t=new ce){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new ce){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new ce){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class zv extends Ai{constructor(e=new N,t=new N){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=e,this.v2=t}getPoint(e,t=new N){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new N){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class cp extends Ai{constructor(e=new ce,t=new ce,n=new ce){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new ce){const n=t,i=this.v0,s=this.v1,l=this.v2;return n.set(Ta(e,i.x,s.x,l.x),Ta(e,i.y,s.y,l.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class up extends Ai{constructor(e=new N,t=new N,n=new N){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new N){const n=t,i=this.v0,s=this.v1,l=this.v2;return n.set(Ta(e,i.x,s.x,l.x),Ta(e,i.y,s.y,l.y),Ta(e,i.z,s.z,l.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class hp extends Ai{constructor(e=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=e}getPoint(e,t=new ce){const n=t,i=this.points,s=(i.length-1)*e,l=Math.floor(s),c=s-l,u=i[l===0?l:l-1],h=i[l],f=i[l>i.length-2?i.length-1:l+1],p=i[l>i.length-3?i.length-1:l+2];return n.set(l0(c,u.x,h.x,f.x,p.x),l0(c,u.y,h.y,f.y,p.y)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new ce().fromArray(i))}return this}}var hu=Object.freeze({__proto__:null,ArcCurve:Uv,CatmullRomCurve3:Ov,CubicBezierCurve:ap,CubicBezierCurve3:Fv,EllipseCurve:Au,LineCurve:lp,LineCurve3:zv,QuadraticBezierCurve:cp,QuadraticBezierCurve3:up,SplineCurve:hp});class Bv extends Ai{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);if(!e.equals(t)){const n=e.isVector2===!0?"LineCurve":"LineCurve3";this.curves.push(new hu[n](t,e))}return this}getPoint(e,t){const n=e*this.getLength(),i=this.getCurveLengths();let s=0;for(;s<i.length;){if(i[s]>=n){const l=i[s]-n,c=this.curves[s],u=c.getLength(),h=u===0?0:1-l/u;return c.getPointAt(h,t)}s++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let n=0,i=this.curves.length;n<i;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){const t=[];let n;for(let i=0,s=this.curves;i<s.length;i++){const l=s[i],c=l.isEllipseCurve?e*2:l.isLineCurve||l.isLineCurve3?1:l.isSplineCurve?e*l.points.length:e,u=l.getPoints(c);for(let h=0;h<u.length;h++){const f=u[h];n&&n.equals(f)||(t.push(f),n=f)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(i.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,n=this.curves.length;t<n;t++){const i=this.curves[t];e.curves.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(new hu[i.type]().fromJSON(i))}return this}}class Ha extends Bv{constructor(e){super(),this.type="Path",this.currentPoint=new ce,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){const n=new lp(this.currentPoint.clone(),new ce(e,t));return this.curves.push(n),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,n,i){const s=new cp(this.currentPoint.clone(),new ce(e,t),new ce(n,i));return this.curves.push(s),this.currentPoint.set(n,i),this}bezierCurveTo(e,t,n,i,s,l){const c=new ap(this.currentPoint.clone(),new ce(e,t),new ce(n,i),new ce(s,l));return this.curves.push(c),this.currentPoint.set(s,l),this}splineThru(e){const t=[this.currentPoint.clone()].concat(e),n=new hp(t);return this.curves.push(n),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,n,i,s,l){const c=this.currentPoint.x,u=this.currentPoint.y;return this.absarc(e+c,t+u,n,i,s,l),this}absarc(e,t,n,i,s,l){return this.absellipse(e,t,n,n,i,s,l),this}ellipse(e,t,n,i,s,l,c,u){const h=this.currentPoint.x,f=this.currentPoint.y;return this.absellipse(e+h,t+f,n,i,s,l,c,u),this}absellipse(e,t,n,i,s,l,c,u){const h=new Au(e,t,n,i,s,l,c,u);if(this.curves.length>0){const p=h.getPoint(0);p.equals(this.currentPoint)||this.lineTo(p.x,p.y)}this.curves.push(h);const f=h.getPoint(1);return this.currentPoint.copy(f),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class nl extends _t{constructor(e=[new ce(0,-.5),new ce(.5,0),new ce(0,.5)],t=12,n=0,i=Math.PI*2){super(),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:n,phiLength:i},t=Math.floor(t),i=Zt(i,0,Math.PI*2);const s=[],l=[],c=[],u=[],h=[],f=1/t,p=new N,g=new ce,m=new N,y=new N,M=new N;let x=0,v=0;for(let E=0;E<=e.length-1;E++)switch(E){case 0:x=e[E+1].x-e[E].x,v=e[E+1].y-e[E].y,m.x=v*1,m.y=-x,m.z=v*0,M.copy(m),m.normalize(),u.push(m.x,m.y,m.z);break;case e.length-1:u.push(M.x,M.y,M.z);break;default:x=e[E+1].x-e[E].x,v=e[E+1].y-e[E].y,m.x=v*1,m.y=-x,m.z=v*0,y.copy(m),m.x+=M.x,m.y+=M.y,m.z+=M.z,m.normalize(),u.push(m.x,m.y,m.z),M.copy(y)}for(let E=0;E<=t;E++){const w=n+E*f*i,A=Math.sin(w),U=Math.cos(w);for(let I=0;I<=e.length-1;I++){p.x=e[I].x*A,p.y=e[I].y,p.z=e[I].x*U,l.push(p.x,p.y,p.z),g.x=E/t,g.y=I/(e.length-1),c.push(g.x,g.y);const L=u[3*I+0]*A,B=u[3*I+1],R=u[3*I+0]*U;h.push(L,B,R)}}for(let E=0;E<t;E++)for(let w=0;w<e.length-1;w++){const A=w+E*e.length,U=A,I=A+e.length,L=A+e.length+1,B=A+1;s.push(U,I,B),s.push(L,B,I)}this.setIndex(s),this.setAttribute("position",new ke(l,3)),this.setAttribute("uv",new ke(c,2)),this.setAttribute("normal",new ke(h,3))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new nl(e.points,e.segments,e.phiStart,e.phiLength)}}class bu extends nl{constructor(e=1,t=1,n=4,i=8){const s=new Ha;s.absarc(0,-t/2,e,Math.PI*1.5,0),s.absarc(0,t/2,e,0,Math.PI*.5),super(s.getPoints(n),i),this.type="CapsuleGeometry",this.parameters={radius:e,length:t,capSegments:n,radialSegments:i}}static fromJSON(e){return new bu(e.radius,e.length,e.capSegments,e.radialSegments)}}class Cu extends _t{constructor(e=1,t=32,n=0,i=Math.PI*2){super(),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:i},t=Math.max(3,t);const s=[],l=[],c=[],u=[],h=new N,f=new ce;l.push(0,0,0),c.push(0,0,1),u.push(.5,.5);for(let p=0,g=3;p<=t;p++,g+=3){const m=n+p/t*i;h.x=e*Math.cos(m),h.y=e*Math.sin(m),l.push(h.x,h.y,h.z),c.push(0,0,1),f.x=(l[g]/e+1)/2,f.y=(l[g+1]/e+1)/2,u.push(f.x,f.y)}for(let p=1;p<=t;p++)s.push(p,p+1,0);this.setIndex(s),this.setAttribute("position",new ke(l,3)),this.setAttribute("normal",new ke(c,3)),this.setAttribute("uv",new ke(u,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Cu(e.radius,e.segments,e.thetaStart,e.thetaLength)}}class zo extends _t{constructor(e=1,t=1,n=1,i=32,s=1,l=!1,c=0,u=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:i,heightSegments:s,openEnded:l,thetaStart:c,thetaLength:u};const h=this;i=Math.floor(i),s=Math.floor(s);const f=[],p=[],g=[],m=[];let y=0;const M=[],x=n/2;let v=0;E(),l===!1&&(e>0&&w(!0),t>0&&w(!1)),this.setIndex(f),this.setAttribute("position",new ke(p,3)),this.setAttribute("normal",new ke(g,3)),this.setAttribute("uv",new ke(m,2));function E(){const A=new N,U=new N;let I=0;const L=(t-e)/n;for(let B=0;B<=s;B++){const R=[],b=B/s,z=b*(t-e)+e;for(let Y=0;Y<=i;Y++){const k=Y/i,J=k*u+c,se=Math.sin(J),le=Math.cos(J);U.x=z*se,U.y=-b*n+x,U.z=z*le,p.push(U.x,U.y,U.z),A.set(se,L,le).normalize(),g.push(A.x,A.y,A.z),m.push(k,1-b),R.push(y++)}M.push(R)}for(let B=0;B<i;B++)for(let R=0;R<s;R++){const b=M[R][B],z=M[R+1][B],Y=M[R+1][B+1],k=M[R][B+1];f.push(b,z,k),f.push(z,Y,k),I+=6}h.addGroup(v,I,0),v+=I}function w(A){const U=y,I=new ce,L=new N;let B=0;const R=A===!0?e:t,b=A===!0?1:-1;for(let Y=1;Y<=i;Y++)p.push(0,x*b,0),g.push(0,b,0),m.push(.5,.5),y++;const z=y;for(let Y=0;Y<=i;Y++){const J=Y/i*u+c,se=Math.cos(J),le=Math.sin(J);L.x=R*le,L.y=x*b,L.z=R*se,p.push(L.x,L.y,L.z),g.push(0,b,0),I.x=se*.5+.5,I.y=le*.5*b+.5,m.push(I.x,I.y),y++}for(let Y=0;Y<i;Y++){const k=U+Y,J=z+Y;A===!0?f.push(J,J+1,k):f.push(J+1,J,k),B+=3}h.addGroup(v,B,A===!0?1:2),v+=B}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new zo(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Ru extends zo{constructor(e=1,t=1,n=32,i=1,s=!1,l=0,c=Math.PI*2){super(0,e,t,n,i,s,l,c),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:i,openEnded:s,thetaStart:l,thetaLength:c}}static fromJSON(e){return new Ru(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class zr extends _t{constructor(e=[],t=[],n=1,i=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:i};const s=[],l=[];c(i),h(n),f(),this.setAttribute("position",new ke(s,3)),this.setAttribute("normal",new ke(s.slice(),3)),this.setAttribute("uv",new ke(l,2)),i===0?this.computeVertexNormals():this.normalizeNormals();function c(E){const w=new N,A=new N,U=new N;for(let I=0;I<t.length;I+=3)m(t[I+0],w),m(t[I+1],A),m(t[I+2],U),u(w,A,U,E)}function u(E,w,A,U){const I=U+1,L=[];for(let B=0;B<=I;B++){L[B]=[];const R=E.clone().lerp(A,B/I),b=w.clone().lerp(A,B/I),z=I-B;for(let Y=0;Y<=z;Y++)Y===0&&B===I?L[B][Y]=R:L[B][Y]=R.clone().lerp(b,Y/z)}for(let B=0;B<I;B++)for(let R=0;R<2*(I-B)-1;R++){const b=Math.floor(R/2);R%2===0?(g(L[B][b+1]),g(L[B+1][b]),g(L[B][b])):(g(L[B][b+1]),g(L[B+1][b+1]),g(L[B+1][b]))}}function h(E){const w=new N;for(let A=0;A<s.length;A+=3)w.x=s[A+0],w.y=s[A+1],w.z=s[A+2],w.normalize().multiplyScalar(E),s[A+0]=w.x,s[A+1]=w.y,s[A+2]=w.z}function f(){const E=new N;for(let w=0;w<s.length;w+=3){E.x=s[w+0],E.y=s[w+1],E.z=s[w+2];const A=x(E)/2/Math.PI+.5,U=v(E)/Math.PI+.5;l.push(A,1-U)}y(),p()}function p(){for(let E=0;E<l.length;E+=6){const w=l[E+0],A=l[E+2],U=l[E+4],I=Math.max(w,A,U),L=Math.min(w,A,U);I>.9&&L<.1&&(w<.2&&(l[E+0]+=1),A<.2&&(l[E+2]+=1),U<.2&&(l[E+4]+=1))}}function g(E){s.push(E.x,E.y,E.z)}function m(E,w){const A=E*3;w.x=e[A+0],w.y=e[A+1],w.z=e[A+2]}function y(){const E=new N,w=new N,A=new N,U=new N,I=new ce,L=new ce,B=new ce;for(let R=0,b=0;R<s.length;R+=9,b+=6){E.set(s[R+0],s[R+1],s[R+2]),w.set(s[R+3],s[R+4],s[R+5]),A.set(s[R+6],s[R+7],s[R+8]),I.set(l[b+0],l[b+1]),L.set(l[b+2],l[b+3]),B.set(l[b+4],l[b+5]),U.copy(E).add(w).add(A).divideScalar(3);const z=x(U);M(I,b+0,E,z),M(L,b+2,w,z),M(B,b+4,A,z)}}function M(E,w,A,U){U<0&&E.x===1&&(l[w]=E.x-1),A.x===0&&A.z===0&&(l[w]=U/2/Math.PI+.5)}function x(E){return Math.atan2(E.z,-E.x)}function v(E){return Math.atan2(-E.y,Math.sqrt(E.x*E.x+E.z*E.z))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new zr(e.vertices,e.indices,e.radius,e.details)}}class Pu extends zr{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=1/n,s=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-n,0,-i,n,0,i,-n,0,i,n,-i,-n,0,-i,n,0,i,-n,0,i,n,0,-n,0,-i,n,0,-i,-n,0,i,n,0,i],l=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(s,l,e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Pu(e.radius,e.detail)}}const Uc=new N,Oc=new N,Rf=new N,Fc=new Qn;class kv extends _t{constructor(e=null,t=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:e,thresholdAngle:t},e!==null){const i=Math.pow(10,4),s=Math.cos(xs*t),l=e.getIndex(),c=e.getAttribute("position"),u=l?l.count:c.count,h=[0,0,0],f=["a","b","c"],p=new Array(3),g={},m=[];for(let y=0;y<u;y+=3){l?(h[0]=l.getX(y),h[1]=l.getX(y+1),h[2]=l.getX(y+2)):(h[0]=y,h[1]=y+1,h[2]=y+2);const{a:M,b:x,c:v}=Fc;if(M.fromBufferAttribute(c,h[0]),x.fromBufferAttribute(c,h[1]),v.fromBufferAttribute(c,h[2]),Fc.getNormal(Rf),p[0]=`${Math.round(M.x*i)},${Math.round(M.y*i)},${Math.round(M.z*i)}`,p[1]=`${Math.round(x.x*i)},${Math.round(x.y*i)},${Math.round(x.z*i)}`,p[2]=`${Math.round(v.x*i)},${Math.round(v.y*i)},${Math.round(v.z*i)}`,!(p[0]===p[1]||p[1]===p[2]||p[2]===p[0]))for(let E=0;E<3;E++){const w=(E+1)%3,A=p[E],U=p[w],I=Fc[f[E]],L=Fc[f[w]],B=`${A}_${U}`,R=`${U}_${A}`;R in g&&g[R]?(Rf.dot(g[R].normal)<=s&&(m.push(I.x,I.y,I.z),m.push(L.x,L.y,L.z)),g[R]=null):B in g||(g[B]={index0:h[E],index1:h[w],normal:Rf.clone()})}}for(const y in g)if(g[y]){const{index0:M,index1:x}=g[y];Uc.fromBufferAttribute(c,M),Oc.fromBufferAttribute(c,x),m.push(Uc.x,Uc.y,Uc.z),m.push(Oc.x,Oc.y,Oc.z)}this.setAttribute("position",new ke(m,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}class Ms extends Ha{constructor(e){super(e),this.uuid=$n(),this.type="Shape",this.holes=[]}getPointsHoles(e){const t=[];for(let n=0,i=this.holes.length;n<i;n++)t[n]=this.holes[n].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,n=this.holes.length;t<n;t++){const i=this.holes[t];e.holes.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(new Ha().fromJSON(i))}return this}}const fA={triangulate:function(r,e,t=2){const n=e&&e.length,i=n?e[0]*t:r.length;let s=Hv(r,0,i,t,!0);const l=[];if(!s||s.next===s.prev)return l;let c,u,h,f,p,g,m;if(n&&(s=_A(r,e,s,t)),r.length>80*t){c=h=r[0],u=f=r[1];for(let y=t;y<i;y+=t)p=r[y],g=r[y+1],p<c&&(c=p),g<u&&(u=g),p>h&&(h=p),g>f&&(f=g);m=Math.max(h-c,f-u),m=m!==0?32767/m:0}return Va(s,l,t,c,u,m,0),l}};function Hv(r,e,t,n,i){let s,l;if(i===CA(r,e,t,n)>0)for(s=e;s<t;s+=n)l=c0(s,r[s],r[s+1],l);else for(s=t-n;s>=e;s-=n)l=c0(s,r[s],r[s+1],l);return l&&Iu(l,l.next)&&(Wa(l),l=l.next),l}function Ts(r,e){if(!r)return r;e||(e=r);let t=r,n;do if(n=!1,!t.steiner&&(Iu(t,t.next)||Wt(t.prev,t,t.next)===0)){if(Wa(t),t=e=t.prev,t===t.next)break;n=!0}else t=t.next;while(n||t!==e);return e}function Va(r,e,t,n,i,s,l){if(!r)return;!l&&s&&MA(r,n,i,s);let c=r,u,h;for(;r.prev!==r.next;){if(u=r.prev,h=r.next,s?pA(r,n,i,s):dA(r)){e.push(u.i/t|0),e.push(r.i/t|0),e.push(h.i/t|0),Wa(r),r=h.next,c=h.next;continue}if(r=h,r===c){l?l===1?(r=mA(Ts(r),e,t),Va(r,e,t,n,i,s,2)):l===2&&gA(r,e,t,n,i,s):Va(Ts(r),e,t,n,i,s,1);break}}}function dA(r){const e=r.prev,t=r,n=r.next;if(Wt(e,t,n)>=0)return!1;const i=e.x,s=t.x,l=n.x,c=e.y,u=t.y,h=n.y,f=i<s?i<l?i:l:s<l?s:l,p=c<u?c<h?c:h:u<h?u:h,g=i>s?i>l?i:l:s>l?s:l,m=c>u?c>h?c:h:u>h?u:h;let y=n.next;for(;y!==e;){if(y.x>=f&&y.x<=g&&y.y>=p&&y.y<=m&&Ao(i,c,s,u,l,h,y.x,y.y)&&Wt(y.prev,y,y.next)>=0)return!1;y=y.next}return!0}function pA(r,e,t,n){const i=r.prev,s=r,l=r.next;if(Wt(i,s,l)>=0)return!1;const c=i.x,u=s.x,h=l.x,f=i.y,p=s.y,g=l.y,m=c<u?c<h?c:h:u<h?u:h,y=f<p?f<g?f:g:p<g?p:g,M=c>u?c>h?c:h:u>h?u:h,x=f>p?f>g?f:g:p>g?p:g,v=Td(m,y,e,t,n),E=Td(M,x,e,t,n);let w=r.prevZ,A=r.nextZ;for(;w&&w.z>=v&&A&&A.z<=E;){if(w.x>=m&&w.x<=M&&w.y>=y&&w.y<=x&&w!==i&&w!==l&&Ao(c,f,u,p,h,g,w.x,w.y)&&Wt(w.prev,w,w.next)>=0||(w=w.prevZ,A.x>=m&&A.x<=M&&A.y>=y&&A.y<=x&&A!==i&&A!==l&&Ao(c,f,u,p,h,g,A.x,A.y)&&Wt(A.prev,A,A.next)>=0))return!1;A=A.nextZ}for(;w&&w.z>=v;){if(w.x>=m&&w.x<=M&&w.y>=y&&w.y<=x&&w!==i&&w!==l&&Ao(c,f,u,p,h,g,w.x,w.y)&&Wt(w.prev,w,w.next)>=0)return!1;w=w.prevZ}for(;A&&A.z<=E;){if(A.x>=m&&A.x<=M&&A.y>=y&&A.y<=x&&A!==i&&A!==l&&Ao(c,f,u,p,h,g,A.x,A.y)&&Wt(A.prev,A,A.next)>=0)return!1;A=A.nextZ}return!0}function mA(r,e,t){let n=r;do{const i=n.prev,s=n.next.next;!Iu(i,s)&&Vv(i,n,n.next,s)&&Ga(i,s)&&Ga(s,i)&&(e.push(i.i/t|0),e.push(n.i/t|0),e.push(s.i/t|0),Wa(n),Wa(n.next),n=r=s),n=n.next}while(n!==r);return Ts(n)}function gA(r,e,t,n,i,s){let l=r;do{let c=l.next.next;for(;c!==l.prev;){if(l.i!==c.i&&TA(l,c)){let u=Gv(l,c);l=Ts(l,l.next),u=Ts(u,u.next),Va(l,e,t,n,i,s,0),Va(u,e,t,n,i,s,0);return}c=c.next}l=l.next}while(l!==r)}function _A(r,e,t,n){const i=[];let s,l,c,u,h;for(s=0,l=e.length;s<l;s++)c=e[s]*n,u=s<l-1?e[s+1]*n:r.length,h=Hv(r,c,u,n,!1),h===h.next&&(h.steiner=!0),i.push(EA(h));for(i.sort(vA),s=0;s<i.length;s++)t=yA(i[s],t);return t}function vA(r,e){return r.x-e.x}function yA(r,e){const t=xA(r,e);if(!t)return e;const n=Gv(t,r);return Ts(n,n.next),Ts(t,t.next)}function xA(r,e){let t=e,n=-1/0,i;const s=r.x,l=r.y;do{if(l<=t.y&&l>=t.next.y&&t.next.y!==t.y){const g=t.x+(l-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(g<=s&&g>n&&(n=g,i=t.x<t.next.x?t:t.next,g===s))return i}t=t.next}while(t!==e);if(!i)return null;const c=i,u=i.x,h=i.y;let f=1/0,p;t=i;do s>=t.x&&t.x>=u&&s!==t.x&&Ao(l<h?s:n,l,u,h,l<h?n:s,l,t.x,t.y)&&(p=Math.abs(l-t.y)/(s-t.x),Ga(t,r)&&(p<f||p===f&&(t.x>i.x||t.x===i.x&&SA(i,t)))&&(i=t,f=p)),t=t.next;while(t!==c);return i}function SA(r,e){return Wt(r.prev,r,e.prev)<0&&Wt(e.next,r,r.next)<0}function MA(r,e,t,n){let i=r;do i.z===0&&(i.z=Td(i.x,i.y,e,t,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==r);i.prevZ.nextZ=null,i.prevZ=null,wA(i)}function wA(r){let e,t,n,i,s,l,c,u,h=1;do{for(t=r,r=null,s=null,l=0;t;){for(l++,n=t,c=0,e=0;e<h&&(c++,n=n.nextZ,!!n);e++);for(u=h;c>0||u>0&&n;)c!==0&&(u===0||!n||t.z<=n.z)?(i=t,t=t.nextZ,c--):(i=n,n=n.nextZ,u--),s?s.nextZ=i:r=i,i.prevZ=s,s=i;t=n}s.nextZ=null,h*=2}while(l>1);return r}function Td(r,e,t,n,i){return r=(r-t)*i|0,e=(e-n)*i|0,r=(r|r<<8)&16711935,r=(r|r<<4)&252645135,r=(r|r<<2)&858993459,r=(r|r<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,r|e<<1}function EA(r){let e=r,t=r;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==r);return t}function Ao(r,e,t,n,i,s,l,c){return(i-l)*(e-c)>=(r-l)*(s-c)&&(r-l)*(n-c)>=(t-l)*(e-c)&&(t-l)*(s-c)>=(i-l)*(n-c)}function TA(r,e){return r.next.i!==e.i&&r.prev.i!==e.i&&!AA(r,e)&&(Ga(r,e)&&Ga(e,r)&&bA(r,e)&&(Wt(r.prev,r,e.prev)||Wt(r,e.prev,e))||Iu(r,e)&&Wt(r.prev,r,r.next)>0&&Wt(e.prev,e,e.next)>0)}function Wt(r,e,t){return(e.y-r.y)*(t.x-e.x)-(e.x-r.x)*(t.y-e.y)}function Iu(r,e){return r.x===e.x&&r.y===e.y}function Vv(r,e,t,n){const i=Bc(Wt(r,e,t)),s=Bc(Wt(r,e,n)),l=Bc(Wt(t,n,r)),c=Bc(Wt(t,n,e));return!!(i!==s&&l!==c||i===0&&zc(r,t,e)||s===0&&zc(r,n,e)||l===0&&zc(t,r,n)||c===0&&zc(t,e,n))}function zc(r,e,t){return e.x<=Math.max(r.x,t.x)&&e.x>=Math.min(r.x,t.x)&&e.y<=Math.max(r.y,t.y)&&e.y>=Math.min(r.y,t.y)}function Bc(r){return r>0?1:r<0?-1:0}function AA(r,e){let t=r;do{if(t.i!==r.i&&t.next.i!==r.i&&t.i!==e.i&&t.next.i!==e.i&&Vv(t,t.next,r,e))return!0;t=t.next}while(t!==r);return!1}function Ga(r,e){return Wt(r.prev,r,r.next)<0?Wt(r,e,r.next)>=0&&Wt(r,r.prev,e)>=0:Wt(r,e,r.prev)<0||Wt(r,r.next,e)<0}function bA(r,e){let t=r,n=!1;const i=(r.x+e.x)/2,s=(r.y+e.y)/2;do t.y>s!=t.next.y>s&&t.next.y!==t.y&&i<(t.next.x-t.x)*(s-t.y)/(t.next.y-t.y)+t.x&&(n=!n),t=t.next;while(t!==r);return n}function Gv(r,e){const t=new Ad(r.i,r.x,r.y),n=new Ad(e.i,e.x,e.y),i=r.next,s=e.prev;return r.next=e,e.prev=r,t.next=i,i.prev=t,n.next=t,t.prev=n,s.next=n,n.prev=s,n}function c0(r,e,t,n){const i=new Ad(r,e,t);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}function Wa(r){r.next.prev=r.prev,r.prev.next=r.next,r.prevZ&&(r.prevZ.nextZ=r.nextZ),r.nextZ&&(r.nextZ.prevZ=r.prevZ)}function Ad(r,e,t){this.i=r,this.x=e,this.y=t,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}function CA(r,e,t,n){let i=0;for(let s=e,l=t-n;s<t;s+=n)i+=(r[l]-r[s])*(r[s+1]+r[l+1]),l=s;return i}class Hi{static area(e){const t=e.length;let n=0;for(let i=t-1,s=0;s<t;i=s++)n+=e[i].x*e[s].y-e[s].x*e[i].y;return n*.5}static isClockWise(e){return Hi.area(e)<0}static triangulateShape(e,t){const n=[],i=[],s=[];u0(e),h0(n,e);let l=e.length;t.forEach(u0);for(let u=0;u<t.length;u++)i.push(l),l+=t[u].length,h0(n,t[u]);const c=fA.triangulate(n,i);for(let u=0;u<c.length;u+=3)s.push(c.slice(u,u+3));return s}}function u0(r){const e=r.length;e>2&&r[e-1].equals(r[0])&&r.pop()}function h0(r,e){for(let t=0;t<e.length;t++)r.push(e[t].x),r.push(e[t].y)}class Lu extends _t{constructor(e=new Ms([new ce(.5,.5),new ce(-.5,.5),new ce(-.5,-.5),new ce(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const n=this,i=[],s=[];for(let c=0,u=e.length;c<u;c++){const h=e[c];l(h)}this.setAttribute("position",new ke(i,3)),this.setAttribute("uv",new ke(s,2)),this.computeVertexNormals();function l(c){const u=[],h=t.curveSegments!==void 0?t.curveSegments:12,f=t.steps!==void 0?t.steps:1,p=t.depth!==void 0?t.depth:1;let g=t.bevelEnabled!==void 0?t.bevelEnabled:!0,m=t.bevelThickness!==void 0?t.bevelThickness:.2,y=t.bevelSize!==void 0?t.bevelSize:m-.1,M=t.bevelOffset!==void 0?t.bevelOffset:0,x=t.bevelSegments!==void 0?t.bevelSegments:3;const v=t.extrudePath,E=t.UVGenerator!==void 0?t.UVGenerator:RA;let w,A=!1,U,I,L,B;v&&(w=v.getSpacedPoints(f),A=!0,g=!1,U=v.computeFrenetFrames(f,!1),I=new N,L=new N,B=new N),g||(x=0,m=0,y=0,M=0);const R=c.extractPoints(h);let b=R.shape;const z=R.holes;if(!Hi.isClockWise(b)){b=b.reverse();for(let ae=0,pe=z.length;ae<pe;ae++){const he=z[ae];Hi.isClockWise(he)&&(z[ae]=he.reverse())}}const k=Hi.triangulateShape(b,z),J=b;for(let ae=0,pe=z.length;ae<pe;ae++){const he=z[ae];b=b.concat(he)}function se(ae,pe,he){return ae.clone().addScaledVector(pe,he)}const le=b.length,xe=k.length;function H(ae,pe,he){let we,me,Ne;const qe=ae.x-pe.x,F=ae.y-pe.y,P=he.x-ae.x,Z=he.y-ae.y,ue=qe*qe+F*F,ve=qe*Z-F*P;if(Math.abs(ve)>Number.EPSILON){const de=Math.sqrt(ue),Xe=Math.sqrt(P*P+Z*Z),Ae=pe.x-F/de,Te=pe.y+qe/de,tt=he.x-Z/Xe,Me=he.y+P/Xe,Ve=((tt-Ae)*Z-(Me-Te)*P)/(qe*Z-F*P);we=Ae+qe*Ve-ae.x,me=Te+F*Ve-ae.y;const pt=we*we+me*me;if(pt<=2)return new ce(we,me);Ne=Math.sqrt(pt/2)}else{let de=!1;qe>Number.EPSILON?P>Number.EPSILON&&(de=!0):qe<-Number.EPSILON?P<-Number.EPSILON&&(de=!0):Math.sign(F)===Math.sign(Z)&&(de=!0),de?(we=-F,me=qe,Ne=Math.sqrt(ue)):(we=qe,me=F,Ne=Math.sqrt(ue/2))}return new ce(we/Ne,me/Ne)}const te=[];for(let ae=0,pe=J.length,he=pe-1,we=ae+1;ae<pe;ae++,he++,we++)he===pe&&(he=0),we===pe&&(we=0),te[ae]=H(J[ae],J[he],J[we]);const j=[];let fe,Le=te.concat();for(let ae=0,pe=z.length;ae<pe;ae++){const he=z[ae];fe=[];for(let we=0,me=he.length,Ne=me-1,qe=we+1;we<me;we++,Ne++,qe++)Ne===me&&(Ne=0),qe===me&&(qe=0),fe[we]=H(he[we],he[Ne],he[qe]);j.push(fe),Le=Le.concat(fe)}for(let ae=0;ae<x;ae++){const pe=ae/x,he=m*Math.cos(pe*Math.PI/2),we=y*Math.sin(pe*Math.PI/2)+M;for(let me=0,Ne=J.length;me<Ne;me++){const qe=se(J[me],te[me],we);ye(qe.x,qe.y,-he)}for(let me=0,Ne=z.length;me<Ne;me++){const qe=z[me];fe=j[me];for(let F=0,P=qe.length;F<P;F++){const Z=se(qe[F],fe[F],we);ye(Z.x,Z.y,-he)}}}const Be=y+M;for(let ae=0;ae<le;ae++){const pe=g?se(b[ae],Le[ae],Be):b[ae];A?(L.copy(U.normals[0]).multiplyScalar(pe.x),I.copy(U.binormals[0]).multiplyScalar(pe.y),B.copy(w[0]).add(L).add(I),ye(B.x,B.y,B.z)):ye(pe.x,pe.y,0)}for(let ae=1;ae<=f;ae++)for(let pe=0;pe<le;pe++){const he=g?se(b[pe],Le[pe],Be):b[pe];A?(L.copy(U.normals[ae]).multiplyScalar(he.x),I.copy(U.binormals[ae]).multiplyScalar(he.y),B.copy(w[ae]).add(L).add(I),ye(B.x,B.y,B.z)):ye(he.x,he.y,p/f*ae)}for(let ae=x-1;ae>=0;ae--){const pe=ae/x,he=m*Math.cos(pe*Math.PI/2),we=y*Math.sin(pe*Math.PI/2)+M;for(let me=0,Ne=J.length;me<Ne;me++){const qe=se(J[me],te[me],we);ye(qe.x,qe.y,p+he)}for(let me=0,Ne=z.length;me<Ne;me++){const qe=z[me];fe=j[me];for(let F=0,P=qe.length;F<P;F++){const Z=se(qe[F],fe[F],we);A?ye(Z.x,Z.y+w[f-1].y,w[f-1].x+he):ye(Z.x,Z.y,p+he)}}}ne(),_e();function ne(){const ae=i.length/3;if(g){let pe=0,he=le*pe;for(let we=0;we<xe;we++){const me=k[we];nt(me[2]+he,me[1]+he,me[0]+he)}pe=f+x*2,he=le*pe;for(let we=0;we<xe;we++){const me=k[we];nt(me[0]+he,me[1]+he,me[2]+he)}}else{for(let pe=0;pe<xe;pe++){const he=k[pe];nt(he[2],he[1],he[0])}for(let pe=0;pe<xe;pe++){const he=k[pe];nt(he[0]+le*f,he[1]+le*f,he[2]+le*f)}}n.addGroup(ae,i.length/3-ae,0)}function _e(){const ae=i.length/3;let pe=0;Re(J,pe),pe+=J.length;for(let he=0,we=z.length;he<we;he++){const me=z[he];Re(me,pe),pe+=me.length}n.addGroup(ae,i.length/3-ae,1)}function Re(ae,pe){let he=ae.length;for(;--he>=0;){const we=he;let me=he-1;me<0&&(me=ae.length-1);for(let Ne=0,qe=f+x*2;Ne<qe;Ne++){const F=le*Ne,P=le*(Ne+1),Z=pe+we+F,ue=pe+me+F,ve=pe+me+P,de=pe+we+P;it(Z,ue,ve,de)}}}function ye(ae,pe,he){u.push(ae),u.push(pe),u.push(he)}function nt(ae,pe,he){W(ae),W(pe),W(he);const we=i.length/3,me=E.generateTopUV(n,i,we-3,we-2,we-1);Qe(me[0]),Qe(me[1]),Qe(me[2])}function it(ae,pe,he,we){W(ae),W(pe),W(we),W(pe),W(he),W(we);const me=i.length/3,Ne=E.generateSideWallUV(n,i,me-6,me-3,me-2,me-1);Qe(Ne[0]),Qe(Ne[1]),Qe(Ne[3]),Qe(Ne[1]),Qe(Ne[2]),Qe(Ne[3])}function W(ae){i.push(u[ae*3+0]),i.push(u[ae*3+1]),i.push(u[ae*3+2])}function Qe(ae){s.push(ae.x),s.push(ae.y)}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes,n=this.parameters.options;return PA(t,n,e)}static fromJSON(e,t){const n=[];for(let s=0,l=e.shapes.length;s<l;s++){const c=t[e.shapes[s]];n.push(c)}const i=e.options.extrudePath;return i!==void 0&&(e.options.extrudePath=new hu[i.type]().fromJSON(i)),new Lu(n,e.options)}}const RA={generateTopUV:function(r,e,t,n,i){const s=e[t*3],l=e[t*3+1],c=e[n*3],u=e[n*3+1],h=e[i*3],f=e[i*3+1];return[new ce(s,l),new ce(c,u),new ce(h,f)]},generateSideWallUV:function(r,e,t,n,i,s){const l=e[t*3],c=e[t*3+1],u=e[t*3+2],h=e[n*3],f=e[n*3+1],p=e[n*3+2],g=e[i*3],m=e[i*3+1],y=e[i*3+2],M=e[s*3],x=e[s*3+1],v=e[s*3+2];return Math.abs(c-f)<Math.abs(l-h)?[new ce(l,1-u),new ce(h,1-p),new ce(g,1-y),new ce(M,1-v)]:[new ce(c,1-u),new ce(f,1-p),new ce(m,1-y),new ce(x,1-v)]}};function PA(r,e,t){if(t.shapes=[],Array.isArray(r))for(let n=0,i=r.length;n<i;n++){const s=r[n];t.shapes.push(s.uuid)}else t.shapes.push(r.uuid);return t.options=Object.assign({},e),e.extrudePath!==void 0&&(t.options.extrudePath=e.extrudePath.toJSON()),t}class Du extends zr{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],s=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(i,s,e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Du(e.radius,e.detail)}}class il extends zr{constructor(e=1,t=0){const n=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],i=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(n,i,e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new il(e.radius,e.detail)}}class Nu extends _t{constructor(e=.5,t=1,n=32,i=1,s=0,l=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:i,thetaStart:s,thetaLength:l},n=Math.max(3,n),i=Math.max(1,i);const c=[],u=[],h=[],f=[];let p=e;const g=(t-e)/i,m=new N,y=new ce;for(let M=0;M<=i;M++){for(let x=0;x<=n;x++){const v=s+x/n*l;m.x=p*Math.cos(v),m.y=p*Math.sin(v),u.push(m.x,m.y,m.z),h.push(0,0,1),y.x=(m.x/t+1)/2,y.y=(m.y/t+1)/2,f.push(y.x,y.y)}p+=g}for(let M=0;M<i;M++){const x=M*(n+1);for(let v=0;v<n;v++){const E=v+x,w=E,A=E+n+1,U=E+n+2,I=E+1;c.push(w,A,I),c.push(A,U,I)}}this.setIndex(c),this.setAttribute("position",new ke(u,3)),this.setAttribute("normal",new ke(h,3)),this.setAttribute("uv",new ke(f,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Nu(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}}class Uu extends _t{constructor(e=new Ms([new ce(0,.5),new ce(-.5,-.5),new ce(.5,-.5)]),t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};const n=[],i=[],s=[],l=[];let c=0,u=0;if(Array.isArray(e)===!1)h(e);else for(let f=0;f<e.length;f++)h(e[f]),this.addGroup(c,u,f),c+=u,u=0;this.setIndex(n),this.setAttribute("position",new ke(i,3)),this.setAttribute("normal",new ke(s,3)),this.setAttribute("uv",new ke(l,2));function h(f){const p=i.length/3,g=f.extractPoints(t);let m=g.shape;const y=g.holes;Hi.isClockWise(m)===!1&&(m=m.reverse());for(let x=0,v=y.length;x<v;x++){const E=y[x];Hi.isClockWise(E)===!0&&(y[x]=E.reverse())}const M=Hi.triangulateShape(m,y);for(let x=0,v=y.length;x<v;x++){const E=y[x];m=m.concat(E)}for(let x=0,v=m.length;x<v;x++){const E=m[x];i.push(E.x,E.y,0),s.push(0,0,1),l.push(E.x,E.y)}for(let x=0,v=M.length;x<v;x++){const E=M[x],w=E[0]+p,A=E[1]+p,U=E[2]+p;n.push(w,A,U),u+=3}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes;return IA(t,e)}static fromJSON(e,t){const n=[];for(let i=0,s=e.shapes.length;i<s;i++){const l=t[e.shapes[i]];n.push(l)}return new Uu(n,e.curveSegments)}}function IA(r,e){if(e.shapes=[],Array.isArray(r))for(let t=0,n=r.length;t<n;t++){const i=r[t];e.shapes.push(i.uuid)}else e.shapes.push(r.uuid);return e}class rl extends _t{constructor(e=1,t=32,n=16,i=0,s=Math.PI*2,l=0,c=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:i,phiLength:s,thetaStart:l,thetaLength:c},t=Math.max(3,Math.floor(t)),n=Math.max(2,Math.floor(n));const u=Math.min(l+c,Math.PI);let h=0;const f=[],p=new N,g=new N,m=[],y=[],M=[],x=[];for(let v=0;v<=n;v++){const E=[],w=v/n;let A=0;v===0&&l===0?A=.5/t:v===n&&u===Math.PI&&(A=-.5/t);for(let U=0;U<=t;U++){const I=U/t;p.x=-e*Math.cos(i+I*s)*Math.sin(l+w*c),p.y=e*Math.cos(l+w*c),p.z=e*Math.sin(i+I*s)*Math.sin(l+w*c),y.push(p.x,p.y,p.z),g.copy(p).normalize(),M.push(g.x,g.y,g.z),x.push(I+A,1-w),E.push(h++)}f.push(E)}for(let v=0;v<n;v++)for(let E=0;E<t;E++){const w=f[v][E+1],A=f[v][E],U=f[v+1][E],I=f[v+1][E+1];(v!==0||l>0)&&m.push(w,A,I),(v!==n-1||u<Math.PI)&&m.push(A,U,I)}this.setIndex(m),this.setAttribute("position",new ke(y,3)),this.setAttribute("normal",new ke(M,3)),this.setAttribute("uv",new ke(x,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new rl(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class Ou extends zr{constructor(e=1,t=0){const n=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],i=[2,1,0,0,3,2,1,3,0,2,3,1];super(n,i,e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Ou(e.radius,e.detail)}}class Fu extends _t{constructor(e=1,t=.4,n=12,i=48,s=Math.PI*2){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:i,arc:s},n=Math.floor(n),i=Math.floor(i);const l=[],c=[],u=[],h=[],f=new N,p=new N,g=new N;for(let m=0;m<=n;m++)for(let y=0;y<=i;y++){const M=y/i*s,x=m/n*Math.PI*2;p.x=(e+t*Math.cos(x))*Math.cos(M),p.y=(e+t*Math.cos(x))*Math.sin(M),p.z=t*Math.sin(x),c.push(p.x,p.y,p.z),f.x=e*Math.cos(M),f.y=e*Math.sin(M),g.subVectors(p,f).normalize(),u.push(g.x,g.y,g.z),h.push(y/i),h.push(m/n)}for(let m=1;m<=n;m++)for(let y=1;y<=i;y++){const M=(i+1)*m+y-1,x=(i+1)*(m-1)+y-1,v=(i+1)*(m-1)+y,E=(i+1)*m+y;l.push(M,x,E),l.push(x,v,E)}this.setIndex(l),this.setAttribute("position",new ke(c,3)),this.setAttribute("normal",new ke(u,3)),this.setAttribute("uv",new ke(h,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Fu(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}class zu extends _t{constructor(e=1,t=.4,n=64,i=8,s=2,l=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:n,radialSegments:i,p:s,q:l},n=Math.floor(n),i=Math.floor(i);const c=[],u=[],h=[],f=[],p=new N,g=new N,m=new N,y=new N,M=new N,x=new N,v=new N;for(let w=0;w<=n;++w){const A=w/n*s*Math.PI*2;E(A,s,l,e,m),E(A+.01,s,l,e,y),x.subVectors(y,m),v.addVectors(y,m),M.crossVectors(x,v),v.crossVectors(M,x),M.normalize(),v.normalize();for(let U=0;U<=i;++U){const I=U/i*Math.PI*2,L=-t*Math.cos(I),B=t*Math.sin(I);p.x=m.x+(L*v.x+B*M.x),p.y=m.y+(L*v.y+B*M.y),p.z=m.z+(L*v.z+B*M.z),u.push(p.x,p.y,p.z),g.subVectors(p,m).normalize(),h.push(g.x,g.y,g.z),f.push(w/n),f.push(U/i)}}for(let w=1;w<=n;w++)for(let A=1;A<=i;A++){const U=(i+1)*(w-1)+(A-1),I=(i+1)*w+(A-1),L=(i+1)*w+A,B=(i+1)*(w-1)+A;c.push(U,I,B),c.push(I,L,B)}this.setIndex(c),this.setAttribute("position",new ke(u,3)),this.setAttribute("normal",new ke(h,3)),this.setAttribute("uv",new ke(f,2));function E(w,A,U,I,L){const B=Math.cos(w),R=Math.sin(w),b=U/A*w,z=Math.cos(b);L.x=I*(2+z)*.5*B,L.y=I*(2+z)*R*.5,L.z=I*Math.sin(b)*.5}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new zu(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}}class Bu extends _t{constructor(e=new up(new N(-1,-1,0),new N(-1,1,0),new N(1,1,0)),t=64,n=1,i=8,s=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:n,radialSegments:i,closed:s};const l=e.computeFrenetFrames(t,s);this.tangents=l.tangents,this.normals=l.normals,this.binormals=l.binormals;const c=new N,u=new N,h=new ce;let f=new N;const p=[],g=[],m=[],y=[];M(),this.setIndex(y),this.setAttribute("position",new ke(p,3)),this.setAttribute("normal",new ke(g,3)),this.setAttribute("uv",new ke(m,2));function M(){for(let w=0;w<t;w++)x(w);x(s===!1?t:0),E(),v()}function x(w){f=e.getPointAt(w/t,f);const A=l.normals[w],U=l.binormals[w];for(let I=0;I<=i;I++){const L=I/i*Math.PI*2,B=Math.sin(L),R=-Math.cos(L);u.x=R*A.x+B*U.x,u.y=R*A.y+B*U.y,u.z=R*A.z+B*U.z,u.normalize(),g.push(u.x,u.y,u.z),c.x=f.x+n*u.x,c.y=f.y+n*u.y,c.z=f.z+n*u.z,p.push(c.x,c.y,c.z)}}function v(){for(let w=1;w<=t;w++)for(let A=1;A<=i;A++){const U=(i+1)*(w-1)+(A-1),I=(i+1)*w+(A-1),L=(i+1)*w+A,B=(i+1)*(w-1)+A;y.push(U,I,B),y.push(I,L,B)}}function E(){for(let w=0;w<=t;w++)for(let A=0;A<=i;A++)h.x=w/t,h.y=A/i,m.push(h.x,h.y)}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new Bu(new hu[e.path.type]().fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}class Wv extends _t{constructor(e=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:e},e!==null){const t=[],n=new Set,i=new N,s=new N;if(e.index!==null){const l=e.attributes.position,c=e.index;let u=e.groups;u.length===0&&(u=[{start:0,count:c.count,materialIndex:0}]);for(let h=0,f=u.length;h<f;++h){const p=u[h],g=p.start,m=p.count;for(let y=g,M=g+m;y<M;y+=3)for(let x=0;x<3;x++){const v=c.getX(y+x),E=c.getX(y+(x+1)%3);i.fromBufferAttribute(l,v),s.fromBufferAttribute(l,E),f0(i,s,n)===!0&&(t.push(i.x,i.y,i.z),t.push(s.x,s.y,s.z))}}}else{const l=e.attributes.position;for(let c=0,u=l.count/3;c<u;c++)for(let h=0;h<3;h++){const f=3*c+h,p=3*c+(h+1)%3;i.fromBufferAttribute(l,f),s.fromBufferAttribute(l,p),f0(i,s,n)===!0&&(t.push(i.x,i.y,i.z),t.push(s.x,s.y,s.z))}}this.setAttribute("position",new ke(t,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}function f0(r,e,t){const n=`${r.x},${r.y},${r.z}-${e.x},${e.y},${e.z}`,i=`${e.x},${e.y},${e.z}-${r.x},${r.y},${r.z}`;return t.has(n)===!0||t.has(i)===!0?!1:(t.add(n),t.add(i),!0)}var d0=Object.freeze({__proto__:null,BoxGeometry:Cs,CapsuleGeometry:bu,CircleGeometry:Cu,ConeGeometry:Ru,CylinderGeometry:zo,DodecahedronGeometry:Pu,EdgesGeometry:kv,ExtrudeGeometry:Lu,IcosahedronGeometry:Du,LatheGeometry:nl,OctahedronGeometry:il,PlaneGeometry:Oo,PolyhedronGeometry:zr,RingGeometry:Nu,ShapeGeometry:Uu,SphereGeometry:rl,TetrahedronGeometry:Ou,TorusGeometry:Fu,TorusKnotGeometry:zu,TubeGeometry:Bu,WireframeGeometry:Wv});class Xv extends _n{constructor(e){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new Oe(0),this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.fog=e.fog,this}}class Yv extends Ti{constructor(e){super(e),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class fp extends _n{constructor(e){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new Oe(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Oe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Or,this.normalScale=new ce(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new ei,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class qv extends fp{constructor(e){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new ce(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return Zt(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new Oe(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new Oe(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new Oe(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._dispersion=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(e)}get anisotropy(){return this._anisotropy}set anisotropy(e){this._anisotropy>0!=e>0&&this.version++,this._anisotropy=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get iridescence(){return this._iridescence}set iridescence(e){this._iridescence>0!=e>0&&this.version++,this._iridescence=e}get dispersion(){return this._dispersion}set dispersion(e){this._dispersion>0!=e>0&&this.version++,this._dispersion=e}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=e.anisotropy,this.anisotropyRotation=e.anisotropyRotation,this.anisotropyMap=e.anisotropyMap,this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.dispersion=e.dispersion,this.ior=e.ior,this.iridescence=e.iridescence,this.iridescenceMap=e.iridescenceMap,this.iridescenceIOR=e.iridescenceIOR,this.iridescenceThicknessRange=[...e.iridescenceThicknessRange],this.iridescenceThicknessMap=e.iridescenceThicknessMap,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}class Zv extends _n{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new Oe(16777215),this.specular=new Oe(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Oe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Or,this.normalScale=new ce(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new ei,this.combine=ja,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class jv extends _n{constructor(e){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new Oe(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Oe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Or,this.normalScale=new ce(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}class Jv extends _n{constructor(e){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Or,this.normalScale=new ce(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}class Kv extends _n{constructor(e){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new Oe(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Oe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Or,this.normalScale=new ce(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new ei,this.combine=ja,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Qv extends _n{constructor(e){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new Oe(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Or,this.normalScale=new ce(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this.fog=e.fog,this}}class $v extends Fn{constructor(e){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}function ps(r,e,t){return!r||!t&&r.constructor===e?r:typeof e.BYTES_PER_ELEMENT=="number"?new e(r):Array.prototype.slice.call(r)}function ey(r){return ArrayBuffer.isView(r)&&!(r instanceof DataView)}function ty(r){function e(i,s){return r[i]-r[s]}const t=r.length,n=new Array(t);for(let i=0;i!==t;++i)n[i]=i;return n.sort(e),n}function bd(r,e,t){const n=r.length,i=new r.constructor(n);for(let s=0,l=0;l!==n;++s){const c=t[s]*e;for(let u=0;u!==e;++u)i[l++]=r[c+u]}return i}function dp(r,e,t,n){let i=1,s=r[0];for(;s!==void 0&&s[n]===void 0;)s=r[i++];if(s===void 0)return;let l=s[n];if(l!==void 0)if(Array.isArray(l))do l=s[n],l!==void 0&&(e.push(s.time),t.push.apply(t,l)),s=r[i++];while(s!==void 0);else if(l.toArray!==void 0)do l=s[n],l!==void 0&&(e.push(s.time),l.toArray(t,t.length)),s=r[i++];while(s!==void 0);else do l=s[n],l!==void 0&&(e.push(s.time),t.push(l)),s=r[i++];while(s!==void 0)}function LA(r,e,t,n,i=30){const s=r.clone();s.name=e;const l=[];for(let u=0;u<s.tracks.length;++u){const h=s.tracks[u],f=h.getValueSize(),p=[],g=[];for(let m=0;m<h.times.length;++m){const y=h.times[m]*i;if(!(y<t||y>=n)){p.push(h.times[m]);for(let M=0;M<f;++M)g.push(h.values[m*f+M])}}p.length!==0&&(h.times=ps(p,h.times.constructor),h.values=ps(g,h.values.constructor),l.push(h))}s.tracks=l;let c=1/0;for(let u=0;u<s.tracks.length;++u)c>s.tracks[u].times[0]&&(c=s.tracks[u].times[0]);for(let u=0;u<s.tracks.length;++u)s.tracks[u].shift(-1*c);return s.resetDuration(),s}function DA(r,e=0,t=r,n=30){n<=0&&(n=30);const i=t.tracks.length,s=e/n;for(let l=0;l<i;++l){const c=t.tracks[l],u=c.ValueTypeName;if(u==="bool"||u==="string")continue;const h=r.tracks.find(function(v){return v.name===c.name&&v.ValueTypeName===u});if(h===void 0)continue;let f=0;const p=c.getValueSize();c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(f=p/3);let g=0;const m=h.getValueSize();h.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(g=m/3);const y=c.times.length-1;let M;if(s<=c.times[0]){const v=f,E=p-f;M=c.values.slice(v,E)}else if(s>=c.times[y]){const v=y*p+f,E=v+p-f;M=c.values.slice(v,E)}else{const v=c.createInterpolant(),E=f,w=p-f;v.evaluate(s),M=v.resultBuffer.slice(E,w)}u==="quaternion"&&new bn().fromArray(M).normalize().conjugate().toArray(M);const x=h.times.length;for(let v=0;v<x;++v){const E=v*m+g;if(u==="quaternion")bn.multiplyQuaternionsFlat(h.values,E,M,0,h.values,E);else{const w=m-g*2;for(let A=0;A<w;++A)h.values[E+A]-=M[A]}}}return r.blendMode=qd,r}const NA={convertArray:ps,isTypedArray:ey,getKeyframeOrder:ty,sortedArray:bd,flattenJSON:dp,subclip:LA,makeClipAdditive:DA};class sl{constructor(e,t,n,i){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=i!==void 0?i:new t.constructor(n),this.sampleValues=t,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let n=this._cachedIndex,i=t[n],s=t[n-1];e:{t:{let l;n:{i:if(!(e<i)){for(let c=n+2;;){if(i===void 0){if(e<s)break i;return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}if(n===c)break;if(s=i,i=t[++n],e<i)break t}l=t.length;break n}if(!(e>=s)){const c=t[1];e<c&&(n=2,s=c);for(let u=n-2;;){if(s===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(n===u)break;if(i=s,s=t[--n-1],e>=s)break t}l=n,n=0;break n}break e}for(;n<l;){const c=n+l>>>1;e<t[c]?l=c:n=c+1}if(i=t[n],s=t[n-1],s===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(i===void 0)return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}this._cachedIndex=n,this.intervalChanged_(n,s,i)}return this.interpolate_(n,s,e,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,i=this.valueSize,s=e*i;for(let l=0;l!==i;++l)t[l]=n[s+l];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class ny extends sl{constructor(e,t,n,i){super(e,t,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:hs,endingEnd:hs}}intervalChanged_(e,t,n){const i=this.parameterPositions;let s=e-2,l=e+1,c=i[s],u=i[l];if(c===void 0)switch(this.getSettings_().endingStart){case fs:s=e,c=2*t-n;break;case Na:s=i.length-2,c=t+i[s]-i[s+1];break;default:s=e,c=n}if(u===void 0)switch(this.getSettings_().endingEnd){case fs:l=e,u=2*n-t;break;case Na:l=1,u=n+i[1]-i[0];break;default:l=e-1,u=t}const h=(n-t)*.5,f=this.valueSize;this._weightPrev=h/(t-c),this._weightNext=h/(u-n),this._offsetPrev=s*f,this._offsetNext=l*f}interpolate_(e,t,n,i){const s=this.resultBuffer,l=this.sampleValues,c=this.valueSize,u=e*c,h=u-c,f=this._offsetPrev,p=this._offsetNext,g=this._weightPrev,m=this._weightNext,y=(n-t)/(i-t),M=y*y,x=M*y,v=-g*x+2*g*M-g*y,E=(1+g)*x+(-1.5-2*g)*M+(-.5+g)*y+1,w=(-1-m)*x+(1.5+m)*M+.5*y,A=m*x-m*M;for(let U=0;U!==c;++U)s[U]=v*l[f+U]+E*l[h+U]+w*l[u+U]+A*l[p+U];return s}}class pp extends sl{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const s=this.resultBuffer,l=this.sampleValues,c=this.valueSize,u=e*c,h=u-c,f=(n-t)/(i-t),p=1-f;for(let g=0;g!==c;++g)s[g]=l[h+g]*p+l[u+g]*f;return s}}class iy extends sl{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e){return this.copySampleValue_(e-1)}}class bi{constructor(e,t,n,i){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===void 0||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=ps(t,this.TimeBufferType),this.values=ps(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let n;if(t.toJSON!==this.toJSON)n=t.toJSON(e);else{n={name:e.name,times:ps(e.times,Array),values:ps(e.values,Array)};const i=e.getInterpolation();i!==e.DefaultInterpolation&&(n.interpolation=i)}return n.type=e.ValueTypeName,n}InterpolantFactoryMethodDiscrete(e){return new iy(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new pp(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new ny(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case La:t=this.InterpolantFactoryMethodDiscrete;break;case Da:t=this.InterpolantFactoryMethodLinear;break;case nu:t=this.InterpolantFactoryMethodSmooth;break}if(t===void 0){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return La;case this.InterpolantFactoryMethodLinear:return Da;case this.InterpolantFactoryMethodSmooth:return nu}}getValueSize(){return this.values.length/this.times.length}shift(e){if(e!==0){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]+=e}return this}scale(e){if(e!==1){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]*=e}return this}trim(e,t){const n=this.times,i=n.length;let s=0,l=i-1;for(;s!==i&&n[s]<e;)++s;for(;l!==-1&&n[l]>t;)--l;if(++l,s!==0||l!==i){s>=l&&(l=Math.max(l,1),s=l-1);const c=this.getValueSize();this.times=n.slice(s,l),this.values=this.values.slice(s*c,l*c)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!==0&&(e=!1);const n=this.times,i=this.values,s=n.length;s===0&&(e=!1);let l=null;for(let c=0;c!==s;c++){const u=n[c];if(typeof u=="number"&&isNaN(u)){e=!1;break}if(l!==null&&l>u){e=!1;break}l=u}if(i!==void 0&&ey(i))for(let c=0,u=i.length;c!==u;++c){const h=i[c];if(isNaN(h)){e=!1;break}}return e}optimize(){const e=this.times.slice(),t=this.values.slice(),n=this.getValueSize(),i=this.getInterpolation()===nu,s=e.length-1;let l=1;for(let c=1;c<s;++c){let u=!1;const h=e[c],f=e[c+1];if(h!==f&&(c!==1||h!==e[0]))if(i)u=!0;else{const p=c*n,g=p-n,m=p+n;for(let y=0;y!==n;++y){const M=t[p+y];if(M!==t[g+y]||M!==t[m+y]){u=!0;break}}}if(u){if(c!==l){e[l]=e[c];const p=c*n,g=l*n;for(let m=0;m!==n;++m)t[g+m]=t[p+m]}++l}}if(s>0){e[l]=e[s];for(let c=s*n,u=l*n,h=0;h!==n;++h)t[u+h]=t[c+h];++l}return l!==e.length?(this.times=e.slice(0,l),this.values=t.slice(0,l*n)):(this.times=e,this.values=t),this}clone(){const e=this.times.slice(),t=this.values.slice(),n=this.constructor,i=new n(this.name,e,t);return i.createInterpolant=this.createInterpolant,i}}bi.prototype.TimeBufferType=Float32Array;bi.prototype.ValueBufferType=Float32Array;bi.prototype.DefaultInterpolation=Da;class Rs extends bi{}Rs.prototype.ValueTypeName="bool";Rs.prototype.ValueBufferType=Array;Rs.prototype.DefaultInterpolation=La;Rs.prototype.InterpolantFactoryMethodLinear=void 0;Rs.prototype.InterpolantFactoryMethodSmooth=void 0;class mp extends bi{}mp.prototype.ValueTypeName="color";class Xa extends bi{}Xa.prototype.ValueTypeName="number";class ry extends sl{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const s=this.resultBuffer,l=this.sampleValues,c=this.valueSize,u=(n-t)/(i-t);let h=e*c;for(let f=h+c;h!==f;h+=4)bn.slerpFlat(s,0,l,h-c,l,h,u);return s}}class Bo extends bi{InterpolantFactoryMethodLinear(e){return new ry(this.times,this.values,this.getValueSize(),e)}}Bo.prototype.ValueTypeName="quaternion";Bo.prototype.DefaultInterpolation=Da;Bo.prototype.InterpolantFactoryMethodSmooth=void 0;class Ps extends bi{}Ps.prototype.ValueTypeName="string";Ps.prototype.ValueBufferType=Array;Ps.prototype.DefaultInterpolation=La;Ps.prototype.InterpolantFactoryMethodLinear=void 0;Ps.prototype.InterpolantFactoryMethodSmooth=void 0;class Ya extends bi{}Ya.prototype.ValueTypeName="vector";class qa{constructor(e="",t=-1,n=[],i=_u){this.name=e,this.tracks=n,this.duration=t,this.blendMode=i,this.uuid=$n(),this.duration<0&&this.resetDuration()}static parse(e){const t=[],n=e.tracks,i=1/(e.fps||1);for(let l=0,c=n.length;l!==c;++l)t.push(OA(n[l]).scale(i));const s=new this(e.name,e.duration,t,e.blendMode);return s.uuid=e.uuid,s}static toJSON(e){const t=[],n=e.tracks,i={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let s=0,l=n.length;s!==l;++s)t.push(bi.toJSON(n[s]));return i}static CreateFromMorphTargetSequence(e,t,n,i){const s=t.length,l=[];for(let c=0;c<s;c++){let u=[],h=[];u.push((c+s-1)%s,c,(c+1)%s),h.push(0,1,0);const f=ty(u);u=bd(u,1,f),h=bd(h,1,f),!i&&u[0]===0&&(u.push(s),h.push(h[0])),l.push(new Xa(".morphTargetInfluences["+t[c].name+"]",u,h).scale(1/n))}return new this(e,-1,l)}static findByName(e,t){let n=e;if(!Array.isArray(e)){const i=e;n=i.geometry&&i.geometry.animations||i.animations}for(let i=0;i<n.length;i++)if(n[i].name===t)return n[i];return null}static CreateClipsFromMorphTargetSequences(e,t,n){const i={},s=/^([\w-]*?)([\d]+)$/;for(let c=0,u=e.length;c<u;c++){const h=e[c],f=h.name.match(s);if(f&&f.length>1){const p=f[1];let g=i[p];g||(i[p]=g=[]),g.push(h)}}const l=[];for(const c in i)l.push(this.CreateFromMorphTargetSequence(c,i[c],t,n));return l}static parseAnimation(e,t){if(!e)return null;const n=function(p,g,m,y,M){if(m.length!==0){const x=[],v=[];dp(m,x,v,y),x.length!==0&&M.push(new p(g,x,v))}},i=[],s=e.name||"default",l=e.fps||30,c=e.blendMode;let u=e.length||-1;const h=e.hierarchy||[];for(let p=0;p<h.length;p++){const g=h[p].keys;if(!(!g||g.length===0))if(g[0].morphTargets){const m={};let y;for(y=0;y<g.length;y++)if(g[y].morphTargets)for(let M=0;M<g[y].morphTargets.length;M++)m[g[y].morphTargets[M]]=-1;for(const M in m){const x=[],v=[];for(let E=0;E!==g[y].morphTargets.length;++E){const w=g[y];x.push(w.time),v.push(w.morphTarget===M?1:0)}i.push(new Xa(".morphTargetInfluence["+M+"]",x,v))}u=m.length*l}else{const m=".bones["+t[p].name+"]";n(Ya,m+".position",g,"pos",i),n(Bo,m+".quaternion",g,"rot",i),n(Ya,m+".scale",g,"scl",i)}}return i.length===0?null:new this(s,u,i,c)}resetDuration(){const e=this.tracks;let t=0;for(let n=0,i=e.length;n!==i;++n){const s=this.tracks[n];t=Math.max(t,s.times[s.times.length-1])}return this.duration=t,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function UA(r){switch(r.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Xa;case"vector":case"vector2":case"vector3":case"vector4":return Ya;case"color":return mp;case"quaternion":return Bo;case"bool":case"boolean":return Rs;case"string":return Ps}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+r)}function OA(r){if(r.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=UA(r.type);if(r.times===void 0){const t=[],n=[];dp(r.keys,t,n,"value"),r.times=t,r.values=n}return e.parse!==void 0?e.parse(r):new e(r.name,r.times,r.values,r.interpolation)}const ar={enabled:!1,files:{},add:function(r,e){this.enabled!==!1&&(this.files[r]=e)},get:function(r){if(this.enabled!==!1)return this.files[r]},remove:function(r){delete this.files[r]},clear:function(){this.files={}}};class gp{constructor(e,t,n){const i=this;let s=!1,l=0,c=0,u;const h=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(f){c++,s===!1&&i.onStart!==void 0&&i.onStart(f,l,c),s=!0},this.itemEnd=function(f){l++,i.onProgress!==void 0&&i.onProgress(f,l,c),l===c&&(s=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(f){i.onError!==void 0&&i.onError(f)},this.resolveURL=function(f){return u?u(f):f},this.setURLModifier=function(f){return u=f,this},this.addHandler=function(f,p){return h.push(f,p),this},this.removeHandler=function(f){const p=h.indexOf(f);return p!==-1&&h.splice(p,2),this},this.getHandler=function(f){for(let p=0,g=h.length;p<g;p+=2){const m=h[p],y=h[p+1];if(m.global&&(m.lastIndex=0),m.test(f))return y}return null}}}const sy=new gp;class Wn{constructor(e){this.manager=e!==void 0?e:sy,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const n=this;return new Promise(function(i,s){n.load(e,i,t,s)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}Wn.DEFAULT_MATERIAL_NAME="__DEFAULT";const ir={};class FA extends Error{constructor(e,t){super(e),this.response=t}}class hr extends Wn{constructor(e){super(e)}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=ar.get(e);if(s!==void 0)return this.manager.itemStart(e),setTimeout(()=>{t&&t(s),this.manager.itemEnd(e)},0),s;if(ir[e]!==void 0){ir[e].push({onLoad:t,onProgress:n,onError:i});return}ir[e]=[],ir[e].push({onLoad:t,onProgress:n,onError:i});const l=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),c=this.mimeType,u=this.responseType;fetch(l).then(h=>{if(h.status===200||h.status===0){if(h.status,typeof ReadableStream>"u"||h.body===void 0||h.body.getReader===void 0)return h;const f=ir[e],p=h.body.getReader(),g=h.headers.get("X-File-Size")||h.headers.get("Content-Length"),m=g?parseInt(g):0,y=m!==0;let M=0;const x=new ReadableStream({start(v){E();function E(){p.read().then(({done:w,value:A})=>{if(w)v.close();else{M+=A.byteLength;const U=new ProgressEvent("progress",{lengthComputable:y,loaded:M,total:m});for(let I=0,L=f.length;I<L;I++){const B=f[I];B.onProgress&&B.onProgress(U)}v.enqueue(A),E()}})}}});return new Response(x)}else throw new FA(`fetch for "${h.url}" responded with ${h.status}: ${h.statusText}`,h)}).then(h=>{switch(u){case"arraybuffer":return h.arrayBuffer();case"blob":return h.blob();case"document":return h.text().then(f=>new DOMParser().parseFromString(f,c));case"json":return h.json();default:if(c===void 0)return h.text();{const p=/charset="?([^;"\s]*)"?/i.exec(c),g=p&&p[1]?p[1].toLowerCase():void 0,m=new TextDecoder(g);return h.arrayBuffer().then(y=>m.decode(y))}}}).then(h=>{ar.add(e,h);const f=ir[e];delete ir[e];for(let p=0,g=f.length;p<g;p++){const m=f[p];m.onLoad&&m.onLoad(h)}}).catch(h=>{const f=ir[e];if(f===void 0)throw this.manager.itemError(e),h;delete ir[e];for(let p=0,g=f.length;p<g;p++){const m=f[p];m.onError&&m.onError(h)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class zA extends Wn{constructor(e){super(e)}load(e,t,n,i){const s=this,l=new hr(this.manager);l.setPath(this.path),l.setRequestHeader(this.requestHeader),l.setWithCredentials(this.withCredentials),l.load(e,function(c){try{t(s.parse(JSON.parse(c)))}catch(u){i&&i(u),s.manager.itemError(e)}},n,i)}parse(e){const t=[];for(let n=0;n<e.length;n++){const i=qa.parse(e[n]);t.push(i)}return t}}class BA extends Wn{constructor(e){super(e)}load(e,t,n,i){const s=this,l=[],c=new Tu,u=new hr(this.manager);u.setPath(this.path),u.setResponseType("arraybuffer"),u.setRequestHeader(this.requestHeader),u.setWithCredentials(s.withCredentials);let h=0;function f(p){u.load(e[p],function(g){const m=s.parse(g,!0);l[p]={width:m.width,height:m.height,format:m.format,mipmaps:m.mipmaps},h+=1,h===6&&(m.mipmapCount===1&&(c.minFilter=rn),c.image=l,c.format=m.format,c.needsUpdate=!0,t&&t(c))},n,i)}if(Array.isArray(e))for(let p=0,g=e.length;p<g;++p)f(p);else u.load(e,function(p){const g=s.parse(p,!0);if(g.isCubemap){const m=g.mipmaps.length/g.mipmapCount;for(let y=0;y<m;y++){l[y]={mipmaps:[]};for(let M=0;M<g.mipmapCount;M++)l[y].mipmaps.push(g.mipmaps[y*g.mipmapCount+M]),l[y].format=g.format,l[y].width=g.width,l[y].height=g.height}c.image=l}else c.image.width=g.width,c.image.height=g.height,c.mipmaps=g.mipmaps;g.mipmapCount===1&&(c.minFilter=rn),c.format=g.format,c.needsUpdate=!0,t&&t(c)},n,i);return c}}class Za extends Wn{constructor(e){super(e)}load(e,t,n,i){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,l=ar.get(e);if(l!==void 0)return s.manager.itemStart(e),setTimeout(function(){t&&t(l),s.manager.itemEnd(e)},0),l;const c=ka("img");function u(){f(),ar.add(e,this),t&&t(this),s.manager.itemEnd(e)}function h(p){f(),i&&i(p),s.manager.itemError(e),s.manager.itemEnd(e)}function f(){c.removeEventListener("load",u,!1),c.removeEventListener("error",h,!1)}return c.addEventListener("load",u,!1),c.addEventListener("error",h,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(c.crossOrigin=this.crossOrigin),s.manager.itemStart(e),c.src=e,c}}class kA extends Wn{constructor(e){super(e)}load(e,t,n,i){const s=new $a;s.colorSpace=hi;const l=new Za(this.manager);l.setCrossOrigin(this.crossOrigin),l.setPath(this.path);let c=0;function u(h){l.load(e[h],function(f){s.images[h]=f,c++,c===6&&(s.needsUpdate=!0,t&&t(s))},void 0,i)}for(let h=0;h<e.length;++h)u(h);return s}}class HA extends Wn{constructor(e){super(e)}load(e,t,n,i){const s=this,l=new Dr,c=new hr(this.manager);return c.setResponseType("arraybuffer"),c.setRequestHeader(this.requestHeader),c.setPath(this.path),c.setWithCredentials(s.withCredentials),c.load(e,function(u){let h;try{h=s.parse(u)}catch(f){if(i!==void 0)i(f);else return}h.image!==void 0?l.image=h.image:h.data!==void 0&&(l.image.width=h.width,l.image.height=h.height,l.image.data=h.data),l.wrapS=h.wrapS!==void 0?h.wrapS:fi,l.wrapT=h.wrapT!==void 0?h.wrapT:fi,l.magFilter=h.magFilter!==void 0?h.magFilter:rn,l.minFilter=h.minFilter!==void 0?h.minFilter:rn,l.anisotropy=h.anisotropy!==void 0?h.anisotropy:1,h.colorSpace!==void 0&&(l.colorSpace=h.colorSpace),h.flipY!==void 0&&(l.flipY=h.flipY),h.format!==void 0&&(l.format=h.format),h.type!==void 0&&(l.type=h.type),h.mipmaps!==void 0&&(l.mipmaps=h.mipmaps,l.minFilter=zi),h.mipmapCount===1&&(l.minFilter=rn),h.generateMipmaps!==void 0&&(l.generateMipmaps=h.generateMipmaps),l.needsUpdate=!0,t&&t(l,h)},n,i),l}}class Cd extends Wn{constructor(e){super(e)}load(e,t,n,i){const s=new Xt,l=new Za(this.manager);return l.setCrossOrigin(this.crossOrigin),l.setPath(this.path),l.load(e,function(c){s.image=c,s.needsUpdate=!0,t!==void 0&&t(s)},n,i),s}}class Br extends bt{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new Oe(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),t}}class oy extends Br{constructor(e,t,n){super(e,n),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(bt.DEFAULT_UP),this.updateMatrix(),this.groundColor=new Oe(t)}copy(e,t){return super.copy(e,t),this.groundColor.copy(e.groundColor),this}}const Pf=new et,p0=new N,m0=new N;class _p{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new ce(512,512),this.map=null,this.mapPass=null,this.matrix=new et,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new el,this._frameExtents=new ce(1,1),this._viewportCount=1,this._viewports=[new It(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;p0.setFromMatrixPosition(e.matrixWorld),t.position.copy(p0),m0.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(m0),t.updateMatrixWorld(),Pf.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Pf),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(Pf)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class VA extends _p{constructor(){super(new pn(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(e){const t=this.camera,n=Po*2*e.angle*this.focus,i=this.mapSize.width/this.mapSize.height,s=e.distance||t.far;(n!==t.fov||i!==t.aspect||s!==t.far)&&(t.fov=n,t.aspect=i,t.far=s,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}class ay extends Br{constructor(e,t,n=0,i=Math.PI/3,s=0,l=2){super(e,t),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(bt.DEFAULT_UP),this.updateMatrix(),this.target=new bt,this.distance=n,this.angle=i,this.penumbra=s,this.decay=l,this.map=null,this.shadow=new VA}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}const g0=new et,_a=new N,If=new N;class GA extends _p{constructor(){super(new pn(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new ce(4,2),this._viewportCount=6,this._viewports=[new It(2,1,1,1),new It(0,1,1,1),new It(3,1,1,1),new It(1,1,1,1),new It(3,0,1,1),new It(1,0,1,1)],this._cubeDirections=[new N(1,0,0),new N(-1,0,0),new N(0,0,1),new N(0,0,-1),new N(0,1,0),new N(0,-1,0)],this._cubeUps=[new N(0,1,0),new N(0,1,0),new N(0,1,0),new N(0,1,0),new N(0,0,1),new N(0,0,-1)]}updateMatrices(e,t=0){const n=this.camera,i=this.matrix,s=e.distance||n.far;s!==n.far&&(n.far=s,n.updateProjectionMatrix()),_a.setFromMatrixPosition(e.matrixWorld),n.position.copy(_a),If.copy(n.position),If.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(If),n.updateMatrixWorld(),i.makeTranslation(-_a.x,-_a.y,-_a.z),g0.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(g0)}}class ly extends Br{constructor(e,t,n=0,i=2){super(e,t),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new GA}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}class WA extends _p{constructor(){super(new tl(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class cy extends Br{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(bt.DEFAULT_UP),this.updateMatrix(),this.target=new bt,this.shadow=new WA}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class uy extends Br{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}class hy extends Br{constructor(e,t,n=10,i=10){super(e,t),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=n,this.height=i}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}class fy{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new N)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const n=e.x,i=e.y,s=e.z,l=this.coefficients;return t.copy(l[0]).multiplyScalar(.282095),t.addScaledVector(l[1],.488603*i),t.addScaledVector(l[2],.488603*s),t.addScaledVector(l[3],.488603*n),t.addScaledVector(l[4],1.092548*(n*i)),t.addScaledVector(l[5],1.092548*(i*s)),t.addScaledVector(l[6],.315392*(3*s*s-1)),t.addScaledVector(l[7],1.092548*(n*s)),t.addScaledVector(l[8],.546274*(n*n-i*i)),t}getIrradianceAt(e,t){const n=e.x,i=e.y,s=e.z,l=this.coefficients;return t.copy(l[0]).multiplyScalar(.886227),t.addScaledVector(l[1],2*.511664*i),t.addScaledVector(l[2],2*.511664*s),t.addScaledVector(l[3],2*.511664*n),t.addScaledVector(l[4],2*.429043*n*i),t.addScaledVector(l[5],2*.429043*i*s),t.addScaledVector(l[6],.743125*s*s-.247708),t.addScaledVector(l[7],2*.429043*n*s),t.addScaledVector(l[8],.429043*(n*n-i*i)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(e.coefficients[n],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let n=0;n<9;n++)this.coefficients[n].lerp(e.coefficients[n],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(e,t+i*3);return this}toArray(e=[],t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(e,t+i*3);return e}static getBasisAt(e,t){const n=e.x,i=e.y,s=e.z;t[0]=.282095,t[1]=.488603*i,t[2]=.488603*s,t[3]=.488603*n,t[4]=1.092548*n*i,t[5]=1.092548*i*s,t[6]=.315392*(3*s*s-1),t[7]=1.092548*n*s,t[8]=.546274*(n*n-i*i)}}class dy extends Br{constructor(e=new fy,t=1){super(void 0,t),this.isLightProbe=!0,this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}class ku extends Wn{constructor(e){super(e),this.textures={}}load(e,t,n,i){const s=this,l=new hr(s.manager);l.setPath(s.path),l.setRequestHeader(s.requestHeader),l.setWithCredentials(s.withCredentials),l.load(e,function(c){try{t(s.parse(JSON.parse(c)))}catch(u){i&&i(u),s.manager.itemError(e)}},n,i)}parse(e){const t=this.textures;function n(s){return t[s],t[s]}const i=ku.createMaterialFromType(e.type);if(e.uuid!==void 0&&(i.uuid=e.uuid),e.name!==void 0&&(i.name=e.name),e.color!==void 0&&i.color!==void 0&&i.color.setHex(e.color),e.roughness!==void 0&&(i.roughness=e.roughness),e.metalness!==void 0&&(i.metalness=e.metalness),e.sheen!==void 0&&(i.sheen=e.sheen),e.sheenColor!==void 0&&(i.sheenColor=new Oe().setHex(e.sheenColor)),e.sheenRoughness!==void 0&&(i.sheenRoughness=e.sheenRoughness),e.emissive!==void 0&&i.emissive!==void 0&&i.emissive.setHex(e.emissive),e.specular!==void 0&&i.specular!==void 0&&i.specular.setHex(e.specular),e.specularIntensity!==void 0&&(i.specularIntensity=e.specularIntensity),e.specularColor!==void 0&&i.specularColor!==void 0&&i.specularColor.setHex(e.specularColor),e.shininess!==void 0&&(i.shininess=e.shininess),e.clearcoat!==void 0&&(i.clearcoat=e.clearcoat),e.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=e.clearcoatRoughness),e.dispersion!==void 0&&(i.dispersion=e.dispersion),e.iridescence!==void 0&&(i.iridescence=e.iridescence),e.iridescenceIOR!==void 0&&(i.iridescenceIOR=e.iridescenceIOR),e.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=e.iridescenceThicknessRange),e.transmission!==void 0&&(i.transmission=e.transmission),e.thickness!==void 0&&(i.thickness=e.thickness),e.attenuationDistance!==void 0&&(i.attenuationDistance=e.attenuationDistance),e.attenuationColor!==void 0&&i.attenuationColor!==void 0&&i.attenuationColor.setHex(e.attenuationColor),e.anisotropy!==void 0&&(i.anisotropy=e.anisotropy),e.anisotropyRotation!==void 0&&(i.anisotropyRotation=e.anisotropyRotation),e.fog!==void 0&&(i.fog=e.fog),e.flatShading!==void 0&&(i.flatShading=e.flatShading),e.blending!==void 0&&(i.blending=e.blending),e.combine!==void 0&&(i.combine=e.combine),e.side!==void 0&&(i.side=e.side),e.shadowSide!==void 0&&(i.shadowSide=e.shadowSide),e.opacity!==void 0&&(i.opacity=e.opacity),e.transparent!==void 0&&(i.transparent=e.transparent),e.alphaTest!==void 0&&(i.alphaTest=e.alphaTest),e.alphaHash!==void 0&&(i.alphaHash=e.alphaHash),e.depthFunc!==void 0&&(i.depthFunc=e.depthFunc),e.depthTest!==void 0&&(i.depthTest=e.depthTest),e.depthWrite!==void 0&&(i.depthWrite=e.depthWrite),e.colorWrite!==void 0&&(i.colorWrite=e.colorWrite),e.blendSrc!==void 0&&(i.blendSrc=e.blendSrc),e.blendDst!==void 0&&(i.blendDst=e.blendDst),e.blendEquation!==void 0&&(i.blendEquation=e.blendEquation),e.blendSrcAlpha!==void 0&&(i.blendSrcAlpha=e.blendSrcAlpha),e.blendDstAlpha!==void 0&&(i.blendDstAlpha=e.blendDstAlpha),e.blendEquationAlpha!==void 0&&(i.blendEquationAlpha=e.blendEquationAlpha),e.blendColor!==void 0&&i.blendColor!==void 0&&i.blendColor.setHex(e.blendColor),e.blendAlpha!==void 0&&(i.blendAlpha=e.blendAlpha),e.stencilWriteMask!==void 0&&(i.stencilWriteMask=e.stencilWriteMask),e.stencilFunc!==void 0&&(i.stencilFunc=e.stencilFunc),e.stencilRef!==void 0&&(i.stencilRef=e.stencilRef),e.stencilFuncMask!==void 0&&(i.stencilFuncMask=e.stencilFuncMask),e.stencilFail!==void 0&&(i.stencilFail=e.stencilFail),e.stencilZFail!==void 0&&(i.stencilZFail=e.stencilZFail),e.stencilZPass!==void 0&&(i.stencilZPass=e.stencilZPass),e.stencilWrite!==void 0&&(i.stencilWrite=e.stencilWrite),e.wireframe!==void 0&&(i.wireframe=e.wireframe),e.wireframeLinewidth!==void 0&&(i.wireframeLinewidth=e.wireframeLinewidth),e.wireframeLinecap!==void 0&&(i.wireframeLinecap=e.wireframeLinecap),e.wireframeLinejoin!==void 0&&(i.wireframeLinejoin=e.wireframeLinejoin),e.rotation!==void 0&&(i.rotation=e.rotation),e.linewidth!==void 0&&(i.linewidth=e.linewidth),e.dashSize!==void 0&&(i.dashSize=e.dashSize),e.gapSize!==void 0&&(i.gapSize=e.gapSize),e.scale!==void 0&&(i.scale=e.scale),e.polygonOffset!==void 0&&(i.polygonOffset=e.polygonOffset),e.polygonOffsetFactor!==void 0&&(i.polygonOffsetFactor=e.polygonOffsetFactor),e.polygonOffsetUnits!==void 0&&(i.polygonOffsetUnits=e.polygonOffsetUnits),e.dithering!==void 0&&(i.dithering=e.dithering),e.alphaToCoverage!==void 0&&(i.alphaToCoverage=e.alphaToCoverage),e.premultipliedAlpha!==void 0&&(i.premultipliedAlpha=e.premultipliedAlpha),e.forceSinglePass!==void 0&&(i.forceSinglePass=e.forceSinglePass),e.visible!==void 0&&(i.visible=e.visible),e.toneMapped!==void 0&&(i.toneMapped=e.toneMapped),e.userData!==void 0&&(i.userData=e.userData),e.vertexColors!==void 0&&(typeof e.vertexColors=="number"?i.vertexColors=e.vertexColors>0:i.vertexColors=e.vertexColors),e.uniforms!==void 0)for(const s in e.uniforms){const l=e.uniforms[s];switch(i.uniforms[s]={},l.type){case"t":i.uniforms[s].value=n(l.value);break;case"c":i.uniforms[s].value=new Oe().setHex(l.value);break;case"v2":i.uniforms[s].value=new ce().fromArray(l.value);break;case"v3":i.uniforms[s].value=new N().fromArray(l.value);break;case"v4":i.uniforms[s].value=new It().fromArray(l.value);break;case"m3":i.uniforms[s].value=new ft().fromArray(l.value);break;case"m4":i.uniforms[s].value=new et().fromArray(l.value);break;default:i.uniforms[s].value=l.value}}if(e.defines!==void 0&&(i.defines=e.defines),e.vertexShader!==void 0&&(i.vertexShader=e.vertexShader),e.fragmentShader!==void 0&&(i.fragmentShader=e.fragmentShader),e.glslVersion!==void 0&&(i.glslVersion=e.glslVersion),e.extensions!==void 0)for(const s in e.extensions)i.extensions[s]=e.extensions[s];if(e.lights!==void 0&&(i.lights=e.lights),e.clipping!==void 0&&(i.clipping=e.clipping),e.size!==void 0&&(i.size=e.size),e.sizeAttenuation!==void 0&&(i.sizeAttenuation=e.sizeAttenuation),e.map!==void 0&&(i.map=n(e.map)),e.matcap!==void 0&&(i.matcap=n(e.matcap)),e.alphaMap!==void 0&&(i.alphaMap=n(e.alphaMap)),e.bumpMap!==void 0&&(i.bumpMap=n(e.bumpMap)),e.bumpScale!==void 0&&(i.bumpScale=e.bumpScale),e.normalMap!==void 0&&(i.normalMap=n(e.normalMap)),e.normalMapType!==void 0&&(i.normalMapType=e.normalMapType),e.normalScale!==void 0){let s=e.normalScale;Array.isArray(s)===!1&&(s=[s,s]),i.normalScale=new ce().fromArray(s)}return e.displacementMap!==void 0&&(i.displacementMap=n(e.displacementMap)),e.displacementScale!==void 0&&(i.displacementScale=e.displacementScale),e.displacementBias!==void 0&&(i.displacementBias=e.displacementBias),e.roughnessMap!==void 0&&(i.roughnessMap=n(e.roughnessMap)),e.metalnessMap!==void 0&&(i.metalnessMap=n(e.metalnessMap)),e.emissiveMap!==void 0&&(i.emissiveMap=n(e.emissiveMap)),e.emissiveIntensity!==void 0&&(i.emissiveIntensity=e.emissiveIntensity),e.specularMap!==void 0&&(i.specularMap=n(e.specularMap)),e.specularIntensityMap!==void 0&&(i.specularIntensityMap=n(e.specularIntensityMap)),e.specularColorMap!==void 0&&(i.specularColorMap=n(e.specularColorMap)),e.envMap!==void 0&&(i.envMap=n(e.envMap)),e.envMapRotation!==void 0&&i.envMapRotation.fromArray(e.envMapRotation),e.envMapIntensity!==void 0&&(i.envMapIntensity=e.envMapIntensity),e.reflectivity!==void 0&&(i.reflectivity=e.reflectivity),e.refractionRatio!==void 0&&(i.refractionRatio=e.refractionRatio),e.lightMap!==void 0&&(i.lightMap=n(e.lightMap)),e.lightMapIntensity!==void 0&&(i.lightMapIntensity=e.lightMapIntensity),e.aoMap!==void 0&&(i.aoMap=n(e.aoMap)),e.aoMapIntensity!==void 0&&(i.aoMapIntensity=e.aoMapIntensity),e.gradientMap!==void 0&&(i.gradientMap=n(e.gradientMap)),e.clearcoatMap!==void 0&&(i.clearcoatMap=n(e.clearcoatMap)),e.clearcoatRoughnessMap!==void 0&&(i.clearcoatRoughnessMap=n(e.clearcoatRoughnessMap)),e.clearcoatNormalMap!==void 0&&(i.clearcoatNormalMap=n(e.clearcoatNormalMap)),e.clearcoatNormalScale!==void 0&&(i.clearcoatNormalScale=new ce().fromArray(e.clearcoatNormalScale)),e.iridescenceMap!==void 0&&(i.iridescenceMap=n(e.iridescenceMap)),e.iridescenceThicknessMap!==void 0&&(i.iridescenceThicknessMap=n(e.iridescenceThicknessMap)),e.transmissionMap!==void 0&&(i.transmissionMap=n(e.transmissionMap)),e.thicknessMap!==void 0&&(i.thicknessMap=n(e.thicknessMap)),e.anisotropyMap!==void 0&&(i.anisotropyMap=n(e.anisotropyMap)),e.sheenColorMap!==void 0&&(i.sheenColorMap=n(e.sheenColorMap)),e.sheenRoughnessMap!==void 0&&(i.sheenRoughnessMap=n(e.sheenRoughnessMap)),i}setTextures(e){return this.textures=e,this}static createMaterialFromType(e){const t={ShadowMaterial:Xv,SpriteMaterial:ip,RawShaderMaterial:Yv,ShaderMaterial:Ti,PointsMaterial:sp,MeshPhysicalMaterial:qv,MeshStandardMaterial:fp,MeshPhongMaterial:Zv,MeshToonMaterial:jv,MeshNormalMaterial:Jv,MeshLambertMaterial:Kv,MeshDepthMaterial:tp,MeshDistanceMaterial:np,MeshBasicMaterial:Fr,MeshMatcapMaterial:Qv,LineDashedMaterial:$v,LineBasicMaterial:Fn,Material:_n};return new t[e]}}class Rd{static decodeText(e){if(typeof TextDecoder<"u")return new TextDecoder().decode(e);let t="";for(let n=0,i=e.length;n<i;n++)t+=String.fromCharCode(e[n]);try{return decodeURIComponent(escape(t))}catch{return t}}static extractUrlBase(e){const t=e.lastIndexOf("/");return t===-1?"./":e.slice(0,t+1)}static resolveURL(e,t){return typeof e!="string"||e===""?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}}class py extends _t{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}toJSON(){const e=super.toJSON();return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}class my extends Wn{constructor(e){super(e)}load(e,t,n,i){const s=this,l=new hr(s.manager);l.setPath(s.path),l.setRequestHeader(s.requestHeader),l.setWithCredentials(s.withCredentials),l.load(e,function(c){try{t(s.parse(JSON.parse(c)))}catch(u){i&&i(u),s.manager.itemError(e)}},n,i)}parse(e){const t={},n={};function i(m,y){if(t[y]!==void 0)return t[y];const x=m.interleavedBuffers[y],v=s(m,x.buffer),E=Mo(x.type,v),w=new wu(E,x.stride);return w.uuid=x.uuid,t[y]=w,w}function s(m,y){if(n[y]!==void 0)return n[y];const x=m.arrayBuffers[y],v=new Uint32Array(x).buffer;return n[y]=v,v}const l=e.isInstancedBufferGeometry?new py:new _t,c=e.data.index;if(c!==void 0){const m=Mo(c.type,c.array);l.setIndex(new Lt(m,1))}const u=e.data.attributes;for(const m in u){const y=u[m];let M;if(y.isInterleavedBufferAttribute){const x=i(e.data,y.data);M=new Es(x,y.itemSize,y.offset,y.normalized)}else{const x=Mo(y.type,y.array),v=y.isInstancedBufferAttribute?Lo:Lt;M=new v(x,y.itemSize,y.normalized)}y.name!==void 0&&(M.name=y.name),y.usage!==void 0&&M.setUsage(y.usage),l.setAttribute(m,M)}const h=e.data.morphAttributes;if(h)for(const m in h){const y=h[m],M=[];for(let x=0,v=y.length;x<v;x++){const E=y[x];let w;if(E.isInterleavedBufferAttribute){const A=i(e.data,E.data);w=new Es(A,E.itemSize,E.offset,E.normalized)}else{const A=Mo(E.type,E.array);w=new Lt(A,E.itemSize,E.normalized)}E.name!==void 0&&(w.name=E.name),M.push(w)}l.morphAttributes[m]=M}e.data.morphTargetsRelative&&(l.morphTargetsRelative=!0);const p=e.data.groups||e.data.drawcalls||e.data.offsets;if(p!==void 0)for(let m=0,y=p.length;m!==y;++m){const M=p[m];l.addGroup(M.start,M.count,M.materialIndex)}const g=e.data.boundingSphere;if(g!==void 0){const m=new N;g.center!==void 0&&m.fromArray(g.center),l.boundingSphere=new Cn(m,g.radius)}return e.name&&(l.name=e.name),e.userData&&(l.userData=e.userData),l}}class XA extends Wn{constructor(e){super(e)}load(e,t,n,i){const s=this,l=this.path===""?Rd.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||l;const c=new hr(this.manager);c.setPath(this.path),c.setRequestHeader(this.requestHeader),c.setWithCredentials(this.withCredentials),c.load(e,function(u){let h=null;try{h=JSON.parse(u)}catch(p){i!==void 0&&i(p);return}const f=h.metadata;if(f===void 0||f.type===void 0||f.type.toLowerCase()==="geometry"){i!==void 0&&i(new Error("THREE.ObjectLoader: Can't load "+e));return}s.parse(h,t)},n,i)}async loadAsync(e,t){const n=this,i=this.path===""?Rd.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||i;const s=new hr(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials);const l=await s.loadAsync(e,t),c=JSON.parse(l),u=c.metadata;if(u===void 0||u.type===void 0||u.type.toLowerCase()==="geometry")throw new Error("THREE.ObjectLoader: Can't load "+e);return await n.parseAsync(c)}parse(e,t){const n=this.parseAnimations(e.animations),i=this.parseShapes(e.shapes),s=this.parseGeometries(e.geometries,i),l=this.parseImages(e.images,function(){t!==void 0&&t(h)}),c=this.parseTextures(e.textures,l),u=this.parseMaterials(e.materials,c),h=this.parseObject(e.object,s,u,c,n),f=this.parseSkeletons(e.skeletons,h);if(this.bindSkeletons(h,f),t!==void 0){let p=!1;for(const g in l)if(l[g].data instanceof HTMLImageElement){p=!0;break}p===!1&&t(h)}return h}async parseAsync(e){const t=this.parseAnimations(e.animations),n=this.parseShapes(e.shapes),i=this.parseGeometries(e.geometries,n),s=await this.parseImagesAsync(e.images),l=this.parseTextures(e.textures,s),c=this.parseMaterials(e.materials,l),u=this.parseObject(e.object,i,c,l,t),h=this.parseSkeletons(e.skeletons,u);return this.bindSkeletons(u,h),u}parseShapes(e){const t={};if(e!==void 0)for(let n=0,i=e.length;n<i;n++){const s=new Ms().fromJSON(e[n]);t[s.uuid]=s}return t}parseSkeletons(e,t){const n={},i={};if(t.traverse(function(s){s.isBone&&(i[s.uuid]=s)}),e!==void 0)for(let s=0,l=e.length;s<l;s++){const c=new Eu().fromJSON(e[s],i);n[c.uuid]=c}return n}parseGeometries(e,t){const n={};if(e!==void 0){const i=new my;for(let s=0,l=e.length;s<l;s++){let c;const u=e[s];switch(u.type){case"BufferGeometry":case"InstancedBufferGeometry":c=i.parse(u);break;default:u.type in d0&&(c=d0[u.type].fromJSON(u,t))}c.uuid=u.uuid,u.name!==void 0&&(c.name=u.name),u.userData!==void 0&&(c.userData=u.userData),n[u.uuid]=c}}return n}parseMaterials(e,t){const n={},i={};if(e!==void 0){const s=new ku;s.setTextures(t);for(let l=0,c=e.length;l<c;l++){const u=e[l];n[u.uuid]===void 0&&(n[u.uuid]=s.parse(u)),i[u.uuid]=n[u.uuid]}}return i}parseAnimations(e){const t={};if(e!==void 0)for(let n=0;n<e.length;n++){const i=e[n],s=qa.parse(i);t[s.uuid]=s}return t}parseImages(e,t){const n=this,i={};let s;function l(u){return n.manager.itemStart(u),s.load(u,function(){n.manager.itemEnd(u)},void 0,function(){n.manager.itemError(u),n.manager.itemEnd(u)})}function c(u){if(typeof u=="string"){const h=u,f=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(h)?h:n.resourcePath+h;return l(f)}else return u.data?{data:Mo(u.type,u.data),width:u.width,height:u.height}:null}if(e!==void 0&&e.length>0){const u=new gp(t);s=new Za(u),s.setCrossOrigin(this.crossOrigin);for(let h=0,f=e.length;h<f;h++){const p=e[h],g=p.url;if(Array.isArray(g)){const m=[];for(let y=0,M=g.length;y<M;y++){const x=g[y],v=c(x);v!==null&&(v instanceof HTMLImageElement?m.push(v):m.push(new Dr(v.data,v.width,v.height)))}i[p.uuid]=new ds(m)}else{const m=c(p.url);i[p.uuid]=new ds(m)}}}return i}async parseImagesAsync(e){const t=this,n={};let i;async function s(l){if(typeof l=="string"){const c=l,u=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(c)?c:t.resourcePath+c;return await i.loadAsync(u)}else return l.data?{data:Mo(l.type,l.data),width:l.width,height:l.height}:null}if(e!==void 0&&e.length>0){i=new Za(this.manager),i.setCrossOrigin(this.crossOrigin);for(let l=0,c=e.length;l<c;l++){const u=e[l],h=u.url;if(Array.isArray(h)){const f=[];for(let p=0,g=h.length;p<g;p++){const m=h[p],y=await s(m);y!==null&&(y instanceof HTMLImageElement?f.push(y):f.push(new Dr(y.data,y.width,y.height)))}n[u.uuid]=new ds(f)}else{const f=await s(u.url);n[u.uuid]=new ds(f)}}}return n}parseTextures(e,t){function n(s,l){return typeof s=="number"?s:l[s]}const i={};if(e!==void 0)for(let s=0,l=e.length;s<l;s++){const c=e[s];c.image,t[c.image];const u=t[c.image],h=u.data;let f;Array.isArray(h)?(f=new $a,h.length===6&&(f.needsUpdate=!0)):(h&&h.data?f=new Dr:f=new Xt,h&&(f.needsUpdate=!0)),f.source=u,f.uuid=c.uuid,c.name!==void 0&&(f.name=c.name),c.mapping!==void 0&&(f.mapping=n(c.mapping,YA)),c.channel!==void 0&&(f.channel=c.channel),c.offset!==void 0&&f.offset.fromArray(c.offset),c.repeat!==void 0&&f.repeat.fromArray(c.repeat),c.center!==void 0&&f.center.fromArray(c.center),c.rotation!==void 0&&(f.rotation=c.rotation),c.wrap!==void 0&&(f.wrapS=n(c.wrap[0],_0),f.wrapT=n(c.wrap[1],_0)),c.format!==void 0&&(f.format=c.format),c.internalFormat!==void 0&&(f.internalFormat=c.internalFormat),c.type!==void 0&&(f.type=c.type),c.colorSpace!==void 0&&(f.colorSpace=c.colorSpace),c.minFilter!==void 0&&(f.minFilter=n(c.minFilter,v0)),c.magFilter!==void 0&&(f.magFilter=n(c.magFilter,v0)),c.anisotropy!==void 0&&(f.anisotropy=c.anisotropy),c.flipY!==void 0&&(f.flipY=c.flipY),c.generateMipmaps!==void 0&&(f.generateMipmaps=c.generateMipmaps),c.premultiplyAlpha!==void 0&&(f.premultiplyAlpha=c.premultiplyAlpha),c.unpackAlignment!==void 0&&(f.unpackAlignment=c.unpackAlignment),c.compareFunction!==void 0&&(f.compareFunction=c.compareFunction),c.userData!==void 0&&(f.userData=c.userData),i[c.uuid]=f}return i}parseObject(e,t,n,i,s){let l;function c(g){return t[g],t[g]}function u(g){if(g!==void 0){if(Array.isArray(g)){const m=[];for(let y=0,M=g.length;y<M;y++){const x=g[y];n[x],m.push(n[x])}return m}return n[g],n[g]}}function h(g){return i[g],i[g]}let f,p;switch(e.type){case"Scene":l=new lu,e.background!==void 0&&(Number.isInteger(e.background)?l.background=new Oe(e.background):l.background=h(e.background)),e.environment!==void 0&&(l.environment=h(e.environment)),e.fog!==void 0&&(e.fog.type==="Fog"?l.fog=new Mu(e.fog.color,e.fog.near,e.fog.far):e.fog.type==="FogExp2"&&(l.fog=new Su(e.fog.color,e.fog.density)),e.fog.name!==""&&(l.fog.name=e.fog.name)),e.backgroundBlurriness!==void 0&&(l.backgroundBlurriness=e.backgroundBlurriness),e.backgroundIntensity!==void 0&&(l.backgroundIntensity=e.backgroundIntensity),e.backgroundRotation!==void 0&&l.backgroundRotation.fromArray(e.backgroundRotation),e.environmentIntensity!==void 0&&(l.environmentIntensity=e.environmentIntensity),e.environmentRotation!==void 0&&l.environmentRotation.fromArray(e.environmentRotation);break;case"PerspectiveCamera":l=new pn(e.fov,e.aspect,e.near,e.far),e.focus!==void 0&&(l.focus=e.focus),e.zoom!==void 0&&(l.zoom=e.zoom),e.filmGauge!==void 0&&(l.filmGauge=e.filmGauge),e.filmOffset!==void 0&&(l.filmOffset=e.filmOffset),e.view!==void 0&&(l.view=Object.assign({},e.view));break;case"OrthographicCamera":l=new tl(e.left,e.right,e.top,e.bottom,e.near,e.far),e.zoom!==void 0&&(l.zoom=e.zoom),e.view!==void 0&&(l.view=Object.assign({},e.view));break;case"AmbientLight":l=new uy(e.color,e.intensity);break;case"DirectionalLight":l=new cy(e.color,e.intensity);break;case"PointLight":l=new ly(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":l=new hy(e.color,e.intensity,e.width,e.height);break;case"SpotLight":l=new ay(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case"HemisphereLight":l=new oy(e.color,e.groundColor,e.intensity);break;case"LightProbe":l=new dy().fromJSON(e);break;case"SkinnedMesh":f=c(e.geometry),p=u(e.material),l=new Pv(f,p),e.bindMode!==void 0&&(l.bindMode=e.bindMode),e.bindMatrix!==void 0&&l.bindMatrix.fromArray(e.bindMatrix),e.skeleton!==void 0&&(l.skeleton=e.skeleton);break;case"Mesh":f=c(e.geometry),p=u(e.material),l=new sn(f,p);break;case"InstancedMesh":f=c(e.geometry),p=u(e.material);const g=e.count,m=e.instanceMatrix,y=e.instanceColor;l=new Iv(f,p,g),l.instanceMatrix=new Lo(new Float32Array(m.array),16),y!==void 0&&(l.instanceColor=new Lo(new Float32Array(y.array),y.itemSize));break;case"BatchedMesh":f=c(e.geometry),p=u(e.material),l=new Lv(e.maxGeometryCount,e.maxVertexCount,e.maxIndexCount,p),l.geometry=f,l.perObjectFrustumCulled=e.perObjectFrustumCulled,l.sortObjects=e.sortObjects,l._drawRanges=e.drawRanges,l._reservedRanges=e.reservedRanges,l._visibility=e.visibility,l._active=e.active,l._bounds=e.bounds.map(M=>{const x=new On;x.min.fromArray(M.boxMin),x.max.fromArray(M.boxMax);const v=new Cn;return v.radius=M.sphereRadius,v.center.fromArray(M.sphereCenter),{boxInitialized:M.boxInitialized,box:x,sphereInitialized:M.sphereInitialized,sphere:v}}),l._maxGeometryCount=e.maxGeometryCount,l._maxVertexCount=e.maxVertexCount,l._maxIndexCount=e.maxIndexCount,l._geometryInitialized=e.geometryInitialized,l._geometryCount=e.geometryCount,l._matricesTexture=h(e.matricesTexture.uuid);break;case"LOD":l=new Rv;break;case"Line":l=new Ur(c(e.geometry),u(e.material));break;case"LineLoop":l=new Dv(c(e.geometry),u(e.material));break;case"LineSegments":l=new Wi(c(e.geometry),u(e.material));break;case"PointCloud":case"Points":l=new Nv(c(e.geometry),u(e.material));break;case"Sprite":l=new Cv(u(e.material));break;case"Group":l=new To;break;case"Bone":l=new rp;break;default:l=new bt}if(l.uuid=e.uuid,e.name!==void 0&&(l.name=e.name),e.matrix!==void 0?(l.matrix.fromArray(e.matrix),e.matrixAutoUpdate!==void 0&&(l.matrixAutoUpdate=e.matrixAutoUpdate),l.matrixAutoUpdate&&l.matrix.decompose(l.position,l.quaternion,l.scale)):(e.position!==void 0&&l.position.fromArray(e.position),e.rotation!==void 0&&l.rotation.fromArray(e.rotation),e.quaternion!==void 0&&l.quaternion.fromArray(e.quaternion),e.scale!==void 0&&l.scale.fromArray(e.scale)),e.up!==void 0&&l.up.fromArray(e.up),e.castShadow!==void 0&&(l.castShadow=e.castShadow),e.receiveShadow!==void 0&&(l.receiveShadow=e.receiveShadow),e.shadow&&(e.shadow.bias!==void 0&&(l.shadow.bias=e.shadow.bias),e.shadow.normalBias!==void 0&&(l.shadow.normalBias=e.shadow.normalBias),e.shadow.radius!==void 0&&(l.shadow.radius=e.shadow.radius),e.shadow.mapSize!==void 0&&l.shadow.mapSize.fromArray(e.shadow.mapSize),e.shadow.camera!==void 0&&(l.shadow.camera=this.parseObject(e.shadow.camera))),e.visible!==void 0&&(l.visible=e.visible),e.frustumCulled!==void 0&&(l.frustumCulled=e.frustumCulled),e.renderOrder!==void 0&&(l.renderOrder=e.renderOrder),e.userData!==void 0&&(l.userData=e.userData),e.layers!==void 0&&(l.layers.mask=e.layers),e.children!==void 0){const g=e.children;for(let m=0;m<g.length;m++)l.add(this.parseObject(g[m],t,n,i,s))}if(e.animations!==void 0){const g=e.animations;for(let m=0;m<g.length;m++){const y=g[m];l.animations.push(s[y])}}if(e.type==="LOD"){e.autoUpdate!==void 0&&(l.autoUpdate=e.autoUpdate);const g=e.levels;for(let m=0;m<g.length;m++){const y=g[m],M=l.getObjectByProperty("uuid",y.object);M!==void 0&&l.addLevel(M,y.distance,y.hysteresis)}}return l}bindSkeletons(e,t){Object.keys(t).length!==0&&e.traverse(function(n){if(n.isSkinnedMesh===!0&&n.skeleton!==void 0){const i=t[n.skeleton];i===void 0||n.bind(i,n.bindMatrix)}})}}const YA={UVMapping:gu,CubeReflectionMapping:ur,CubeRefractionMapping:Nr,EquirectangularReflectionMapping:Ca,EquirectangularRefractionMapping:Ra,CubeUVReflectionMapping:No},_0={RepeatWrapping:Pa,ClampToEdgeWrapping:fi,MirroredRepeatWrapping:Ia},v0={NearestFilter:mn,NearestMipmapNearestFilter:zd,NearestMipmapLinearFilter:So,LinearFilter:rn,LinearMipmapNearestFilter:wa,LinearMipmapLinearFilter:zi};class qA extends Wn{constructor(e){super(e),this.isImageBitmapLoader=!0,this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,l=ar.get(e);if(l!==void 0){if(s.manager.itemStart(e),l.then){l.then(h=>{t&&t(h),s.manager.itemEnd(e)}).catch(h=>{i&&i(h)});return}return setTimeout(function(){t&&t(l),s.manager.itemEnd(e)},0),l}const c={};c.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",c.headers=this.requestHeader;const u=fetch(e,c).then(function(h){return h.blob()}).then(function(h){return createImageBitmap(h,Object.assign(s.options,{colorSpaceConversion:"none"}))}).then(function(h){return ar.add(e,h),t&&t(h),s.manager.itemEnd(e),h}).catch(function(h){i&&i(h),ar.remove(e),s.manager.itemError(e),s.manager.itemEnd(e)});ar.add(e,u),s.manager.itemStart(e)}}let kc;class vp{static getContext(){return kc===void 0&&(kc=new(window.AudioContext||window.webkitAudioContext)),kc}static setContext(e){kc=e}}class ZA extends Wn{constructor(e){super(e)}load(e,t,n,i){const s=this,l=new hr(this.manager);l.setResponseType("arraybuffer"),l.setPath(this.path),l.setRequestHeader(this.requestHeader),l.setWithCredentials(this.withCredentials),l.load(e,function(u){try{const h=u.slice(0);vp.getContext().decodeAudioData(h,function(p){t(p)}).catch(c)}catch(h){c(h)}},n,i);function c(u){i&&i(u),s.manager.itemError(e)}}}const y0=new et,x0=new et,ns=new et;class jA{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new pn,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new pn,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(e){const t=this._cache;if(t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep,ns.copy(e.projectionMatrix);const i=t.eyeSep/2,s=i*t.near/t.focus,l=t.near*Math.tan(xs*t.fov*.5)/t.zoom;let c,u;x0.elements[12]=-i,y0.elements[12]=i,c=-l*t.aspect+s,u=l*t.aspect+s,ns.elements[0]=2*t.near/(u-c),ns.elements[8]=(u+c)/(u-c),this.cameraL.projectionMatrix.copy(ns),c=-l*t.aspect-s,u=l*t.aspect-s,ns.elements[0]=2*t.near/(u-c),ns.elements[8]=(u+c)/(u-c),this.cameraR.projectionMatrix.copy(ns)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(x0),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(y0)}}class yp{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=S0(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=S0();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function S0(){return(typeof performance>"u"?Date:performance).now()}const is=new N,M0=new bn,JA=new N,rs=new N;class KA extends bt{constructor(){super(),this.type="AudioListener",this.context=vp.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new yp}getInput(){return this.gain}removeFilter(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);const t=this.context.listener,n=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(is,M0,JA),rs.set(0,0,-1).applyQuaternion(M0),t.positionX){const i=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(is.x,i),t.positionY.linearRampToValueAtTime(is.y,i),t.positionZ.linearRampToValueAtTime(is.z,i),t.forwardX.linearRampToValueAtTime(rs.x,i),t.forwardY.linearRampToValueAtTime(rs.y,i),t.forwardZ.linearRampToValueAtTime(rs.z,i),t.upX.linearRampToValueAtTime(n.x,i),t.upY.linearRampToValueAtTime(n.y,i),t.upZ.linearRampToValueAtTime(n.z,i)}else t.setPosition(is.x,is.y,is.z),t.setOrientation(rs.x,rs.y,rs.z,n.x,n.y,n.z)}}class gy extends bt{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(this.isPlaying===!0||this.hasPlaybackControl===!1)return;this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl!==!1)return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(){if(this.hasPlaybackControl!==!1)return this._progress=0,this.source!==null&&(this.source.stop(),this.source.onended=null),this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this._connected!==!1){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}}getFilters(){return this.filters}setFilters(e){return e||(e=[]),this._connected===!0?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){return this.detune=e,this.isPlaying===!0&&this.source.detune!==void 0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(this.hasPlaybackControl!==!1)return this.playbackRate=e,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return this.hasPlaybackControl===!1?!1:this.loop}setLoop(e){if(this.hasPlaybackControl!==!1)return this.loop=e,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}const ss=new N,w0=new bn,QA=new N,os=new N;class $A extends gy{constructor(e){super(e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}connect(){super.connect(),this.panner.connect(this.gain)}disconnect(){super.disconnect(),this.panner.disconnect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){return this.panner.refDistance=e,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){return this.panner.rolloffFactor=e,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){return this.panner.distanceModel=e,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){return this.panner.maxDistance=e,this}setDirectionalCone(e,t,n){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=n,this}updateMatrixWorld(e){if(super.updateMatrixWorld(e),this.hasPlaybackControl===!0&&this.isPlaying===!1)return;this.matrixWorld.decompose(ss,w0,QA),os.set(0,0,1).applyQuaternion(w0);const t=this.panner;if(t.positionX){const n=this.context.currentTime+this.listener.timeDelta;t.positionX.linearRampToValueAtTime(ss.x,n),t.positionY.linearRampToValueAtTime(ss.y,n),t.positionZ.linearRampToValueAtTime(ss.z,n),t.orientationX.linearRampToValueAtTime(os.x,n),t.orientationY.linearRampToValueAtTime(os.y,n),t.orientationZ.linearRampToValueAtTime(os.z,n)}else t.setPosition(ss.x,ss.y,ss.z),t.setOrientation(os.x,os.y,os.z)}}class eb{constructor(e,t=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let e=0;const t=this.getFrequencyData();for(let n=0;n<t.length;n++)e+=t[n];return e/t.length}}class _y{constructor(e,t,n){this.binding=e,this.valueSize=n;let i,s,l;switch(t){case"quaternion":i=this._slerp,s=this._slerpAdditive,l=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(n*6),this._workIndex=5;break;case"string":case"bool":i=this._select,s=this._select,l=this._setAdditiveIdentityOther,this.buffer=new Array(n*5);break;default:i=this._lerp,s=this._lerpAdditive,l=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(n*5)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=s,this._setIdentity=l,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){const n=this.buffer,i=this.valueSize,s=e*i+i;let l=this.cumulativeWeight;if(l===0){for(let c=0;c!==i;++c)n[s+c]=n[c];l=t}else{l+=t;const c=t/l;this._mixBufferRegion(n,s,0,c,i)}this.cumulativeWeight=l}accumulateAdditive(e){const t=this.buffer,n=this.valueSize,i=n*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(t,i,0,e,n),this.cumulativeWeightAdditive+=e}apply(e){const t=this.valueSize,n=this.buffer,i=e*t+t,s=this.cumulativeWeight,l=this.cumulativeWeightAdditive,c=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,s<1){const u=t*this._origIndex;this._mixBufferRegion(n,i,u,1-s,t)}l>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*t,1,t);for(let u=t,h=t+t;u!==h;++u)if(n[u]!==n[u+t]){c.setValue(n,i);break}}saveOriginalState(){const e=this.binding,t=this.buffer,n=this.valueSize,i=n*this._origIndex;e.getValue(t,i);for(let s=n,l=i;s!==l;++s)t[s]=t[i+s%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const e=this.valueSize*3;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let n=e;n<t;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[t+n]=this.buffer[e+n]}_select(e,t,n,i,s){if(i>=.5)for(let l=0;l!==s;++l)e[t+l]=e[n+l]}_slerp(e,t,n,i){bn.slerpFlat(e,t,e,t,e,n,i)}_slerpAdditive(e,t,n,i,s){const l=this._workIndex*s;bn.multiplyQuaternionsFlat(e,l,e,t,e,n),bn.slerpFlat(e,t,e,t,e,l,i)}_lerp(e,t,n,i,s){const l=1-i;for(let c=0;c!==s;++c){const u=t+c;e[u]=e[u]*l+e[n+c]*i}}_lerpAdditive(e,t,n,i,s){for(let l=0;l!==s;++l){const c=t+l;e[c]=e[c]+e[n+l]*i}}}const xp="\\[\\]\\.:\\/",tb=new RegExp("["+xp+"]","g"),Sp="[^"+xp+"]",nb="[^"+xp.replace("\\.","")+"]",ib=/((?:WC+[\/:])*)/.source.replace("WC",Sp),rb=/(WCOD+)?/.source.replace("WCOD",nb),sb=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Sp),ob=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Sp),ab=new RegExp("^"+ib+rb+sb+ob+"$"),lb=["material","materials","bones","map"];class cb{constructor(e,t,n){const i=n||wt.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,i)}getValue(e,t){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];i!==void 0&&i.getValue(e,t)}setValue(e,t){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,s=n.length;i!==s;++i)n[i].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}}class wt{constructor(e,t,n){this.path=t,this.parsedPath=n||wt.parseTrackName(t),this.node=wt.findNode(e,this.parsedPath.nodeName),this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,n){return e&&e.isAnimationObjectGroup?new wt.Composite(e,t,n):new wt(e,t,n)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(tb,"")}static parseTrackName(e){const t=ab.exec(e);if(t===null)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(i!==void 0&&i!==-1){const s=n.nodeName.substring(i+1);lb.indexOf(s)!==-1&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=s)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n}static findNode(e,t){if(t===void 0||t===""||t==="."||t===-1||t===e.name||t===e.uuid)return e;if(e.skeleton){const n=e.skeleton.getBoneByName(t);if(n!==void 0)return n}if(e.children){const n=function(s){for(let l=0;l<s.length;l++){const c=s[l];if(c.name===t||c.uuid===t)return c;const u=n(c.children);if(u)return u}return null},i=n(e.children);if(i)return i}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)e[t++]=n[i]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,n=t.objectName,i=t.propertyName;let s=t.propertyIndex;if(e||(e=wt.findNode(this.rootNode,t.nodeName),this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e)return;if(n){let h=t.objectIndex;switch(n){case"materials":if(!e.material||!e.material.materials)return;e=e.material.materials;break;case"bones":if(!e.skeleton)return;e=e.skeleton.bones;for(let f=0;f<e.length;f++)if(e[f].name===h){h=f;break}break;case"map":if("map"in e){e=e.map;break}if(!e.material||!e.material.map)return;e=e.material.map;break;default:if(e[n]===void 0)return;e=e[n]}if(h!==void 0){if(e[h]===void 0)return;e=e[h]}}const l=e[i];if(l===void 0){const h=t.nodeName;return}let c=this.Versioning.None;this.targetObject=e,e.needsUpdate!==void 0?c=this.Versioning.NeedsUpdate:e.matrixWorldNeedsUpdate!==void 0&&(c=this.Versioning.MatrixWorldNeedsUpdate);let u=this.BindingType.Direct;if(s!==void 0){if(i==="morphTargetInfluences"){if(!e.geometry||!e.geometry.morphAttributes)return;e.morphTargetDictionary[s]!==void 0&&(s=e.morphTargetDictionary[s])}u=this.BindingType.ArrayElement,this.resolvedProperty=l,this.propertyIndex=s}else l.fromArray!==void 0&&l.toArray!==void 0?(u=this.BindingType.HasFromToArray,this.resolvedProperty=l):Array.isArray(l)?(u=this.BindingType.EntireArray,this.resolvedProperty=l):this.propertyName=i;this.getValue=this.GetterByBindingType[u],this.setValue=this.SetterByBindingTypeAndVersioning[u][c]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}wt.Composite=cb;wt.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};wt.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};wt.prototype.GetterByBindingType=[wt.prototype._getValue_direct,wt.prototype._getValue_array,wt.prototype._getValue_arrayElement,wt.prototype._getValue_toArray];wt.prototype.SetterByBindingTypeAndVersioning=[[wt.prototype._setValue_direct,wt.prototype._setValue_direct_setNeedsUpdate,wt.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[wt.prototype._setValue_array,wt.prototype._setValue_array_setNeedsUpdate,wt.prototype._setValue_array_setMatrixWorldNeedsUpdate],[wt.prototype._setValue_arrayElement,wt.prototype._setValue_arrayElement_setNeedsUpdate,wt.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[wt.prototype._setValue_fromArray,wt.prototype._setValue_fromArray_setNeedsUpdate,wt.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class ub{constructor(){this.isAnimationObjectGroup=!0,this.uuid=$n(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const e={};this._indicesByUUID=e;for(let n=0,i=arguments.length;n!==i;++n)e[arguments[n].uuid]=n;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const t=this;this.stats={objects:{get total(){return t._objects.length},get inUse(){return this.total-t.nCachedObjects_}},get bindingsPerObject(){return t._bindings.length}}}add(){const e=this._objects,t=this._indicesByUUID,n=this._paths,i=this._parsedPaths,s=this._bindings,l=s.length;let c,u=e.length,h=this.nCachedObjects_;for(let f=0,p=arguments.length;f!==p;++f){const g=arguments[f],m=g.uuid;let y=t[m];if(y===void 0){y=u++,t[m]=y,e.push(g);for(let M=0,x=l;M!==x;++M)s[M].push(new wt(g,n[M],i[M]))}else if(y<h){c=e[y];const M=--h,x=e[M];t[x.uuid]=y,e[y]=x,t[m]=M,e[M]=g;for(let v=0,E=l;v!==E;++v){const w=s[v],A=w[M];let U=w[y];w[y]=A,U===void 0&&(U=new wt(g,n[v],i[v])),w[M]=U}}else e[y]}this.nCachedObjects_=h}remove(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let s=this.nCachedObjects_;for(let l=0,c=arguments.length;l!==c;++l){const u=arguments[l],h=u.uuid,f=t[h];if(f!==void 0&&f>=s){const p=s++,g=e[p];t[g.uuid]=f,e[f]=g,t[h]=p,e[p]=u;for(let m=0,y=i;m!==y;++m){const M=n[m],x=M[p],v=M[f];M[f]=x,M[p]=v}}}this.nCachedObjects_=s}uncache(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let s=this.nCachedObjects_,l=e.length;for(let c=0,u=arguments.length;c!==u;++c){const h=arguments[c],f=h.uuid,p=t[f];if(p!==void 0)if(delete t[f],p<s){const g=--s,m=e[g],y=--l,M=e[y];t[m.uuid]=p,e[p]=m,t[M.uuid]=g,e[g]=M,e.pop();for(let x=0,v=i;x!==v;++x){const E=n[x],w=E[g],A=E[y];E[p]=w,E[g]=A,E.pop()}}else{const g=--l,m=e[g];g>0&&(t[m.uuid]=p),e[p]=m,e.pop();for(let y=0,M=i;y!==M;++y){const x=n[y];x[p]=x[g],x.pop()}}}this.nCachedObjects_=s}subscribe_(e,t){const n=this._bindingsIndicesByPath;let i=n[e];const s=this._bindings;if(i!==void 0)return s[i];const l=this._paths,c=this._parsedPaths,u=this._objects,h=u.length,f=this.nCachedObjects_,p=new Array(h);i=s.length,n[e]=i,l.push(e),c.push(t),s.push(p);for(let g=f,m=u.length;g!==m;++g){const y=u[g];p[g]=new wt(y,e,t)}return p}unsubscribe_(e){const t=this._bindingsIndicesByPath,n=t[e];if(n!==void 0){const i=this._paths,s=this._parsedPaths,l=this._bindings,c=l.length-1,u=l[c],h=e[c];t[h]=n,l[n]=u,l.pop(),s[n]=s[c],s.pop(),i[n]=i[c],i.pop()}}}class vy{constructor(e,t,n=null,i=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=n,this.blendMode=i;const s=t.tracks,l=s.length,c=new Array(l),u={endingStart:hs,endingEnd:hs};for(let h=0;h!==l;++h){const f=s[h].createInterpolant(null);c[h]=f,f.settings=u}this._interpolantSettings=u,this._interpolants=c,this._propertyBindings=new Array(l),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=j_,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,n){if(e.fadeOut(t),this.fadeIn(t),n){const i=this._clip.duration,s=e._clip.duration,l=s/i,c=i/s;e.warp(1,l,t),this.warp(c,1,t)}return this}crossFadeTo(e,t,n){return e.crossFadeFrom(this,t,n)}stopFading(){const e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,n){const i=this._mixer,s=i.time,l=this.timeScale;let c=this._timeScaleInterpolant;c===null&&(c=i._lendControlInterpolant(),this._timeScaleInterpolant=c);const u=c.parameterPositions,h=c.sampleValues;return u[0]=s,u[1]=s+n,h[0]=e/l,h[1]=t/l,this}stopWarping(){const e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,n,i){if(!this.enabled){this._updateWeight(e);return}const s=this._startTime;if(s!==null){const u=(e-s)*n;u<0||n===0?t=0:(this._startTime=null,t=n*u)}t*=this._updateTimeScale(e);const l=this._updateTime(t),c=this._updateWeight(e);if(c>0){const u=this._interpolants,h=this._propertyBindings;switch(this.blendMode){case qd:for(let f=0,p=u.length;f!==p;++f)u[f].evaluate(l),h[f].accumulateAdditive(c);break;case _u:default:for(let f=0,p=u.length;f!==p;++f)u[f].evaluate(l),h[f].accumulate(i,c)}}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const n=this._weightInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopFading(),i===0&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const n=this._timeScaleInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopWarping(),t===0?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,n=this.loop;let i=this.time+e,s=this._loopCount;const l=n===J_;if(e===0)return s===-1?i:l&&(s&1)===1?t-i:i;if(n===Z_){s===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(i>=t)i=t;else if(i<0)i=0;else{this.time=i;break e}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(s===-1&&(e>=0?(s=0,this._setEndings(!0,this.repetitions===0,l)):this._setEndings(this.repetitions===0,!0,l)),i>=t||i<0){const c=Math.floor(i/t);i-=t*c,s+=Math.abs(c);const u=this.repetitions-s;if(u<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=e>0?t:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(u===1){const h=e<0;this._setEndings(h,!h,l)}else this._setEndings(!1,!1,l);this._loopCount=s,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:c})}}else this.time=i;if(l&&(s&1)===1)return t-i}return i}_setEndings(e,t,n){const i=this._interpolantSettings;n?(i.endingStart=fs,i.endingEnd=fs):(e?i.endingStart=this.zeroSlopeAtStart?fs:hs:i.endingStart=Na,t?i.endingEnd=this.zeroSlopeAtEnd?fs:hs:i.endingEnd=Na)}_scheduleFading(e,t,n){const i=this._mixer,s=i.time;let l=this._weightInterpolant;l===null&&(l=i._lendControlInterpolant(),this._weightInterpolant=l);const c=l.parameterPositions,u=l.sampleValues;return c[0]=s,u[0]=t,c[1]=s+e,u[1]=n,this}}const hb=new Float32Array(1);class fb extends Gi{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,t){const n=e._localRoot||this._root,i=e._clip.tracks,s=i.length,l=e._propertyBindings,c=e._interpolants,u=n.uuid,h=this._bindingsByRootAndName;let f=h[u];f===void 0&&(f={},h[u]=f);for(let p=0;p!==s;++p){const g=i[p],m=g.name;let y=f[m];if(y!==void 0)++y.referenceCount,l[p]=y;else{if(y=l[p],y!==void 0){y._cacheIndex===null&&(++y.referenceCount,this._addInactiveBinding(y,u,m));continue}const M=t&&t._propertyBindings[p].binding.parsedPath;y=new _y(wt.create(n,m,M),g.ValueTypeName,g.getValueSize()),++y.referenceCount,this._addInactiveBinding(y,u,m),l[p]=y}c[p].resultBuffer=y.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(e._cacheIndex===null){const n=(e._localRoot||this._root).uuid,i=e._clip.uuid,s=this._actionsByClip[i];this._bindAction(e,s&&s.knownActions[0]),this._addInactiveAction(e,i,n)}const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];s.useCount++===0&&(this._lendBinding(s),s.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];--s.useCount===0&&(s.restoreOriginalState(),this._takeBackBinding(s))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){const t=e._cacheIndex;return t!==null&&t<this._nActiveActions}_addInactiveAction(e,t,n){const i=this._actions,s=this._actionsByClip;let l=s[t];if(l===void 0)l={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,s[t]=l;else{const c=l.knownActions;e._byClipCacheIndex=c.length,c.push(e)}e._cacheIndex=i.length,i.push(e),l.actionByRoot[n]=e}_removeInactiveAction(e){const t=this._actions,n=t[t.length-1],i=e._cacheIndex;n._cacheIndex=i,t[i]=n,t.pop(),e._cacheIndex=null;const s=e._clip.uuid,l=this._actionsByClip,c=l[s],u=c.knownActions,h=u[u.length-1],f=e._byClipCacheIndex;h._byClipCacheIndex=f,u[f]=h,u.pop(),e._byClipCacheIndex=null;const p=c.actionByRoot,g=(e._localRoot||this._root).uuid;delete p[g],u.length===0&&delete l[s],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];--s.referenceCount===0&&this._removeInactiveBinding(s)}}_lendAction(e){const t=this._actions,n=e._cacheIndex,i=this._nActiveActions++,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_takeBackAction(e){const t=this._actions,n=e._cacheIndex,i=--this._nActiveActions,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_addInactiveBinding(e,t,n){const i=this._bindingsByRootAndName,s=this._bindings;let l=i[t];l===void 0&&(l={},i[t]=l),l[n]=e,e._cacheIndex=s.length,s.push(e)}_removeInactiveBinding(e){const t=this._bindings,n=e.binding,i=n.rootNode.uuid,s=n.path,l=this._bindingsByRootAndName,c=l[i],u=t[t.length-1],h=e._cacheIndex;u._cacheIndex=h,t[h]=u,t.pop(),delete c[s],Object.keys(c).length===0&&delete l[i]}_lendBinding(e){const t=this._bindings,n=e._cacheIndex,i=this._nActiveBindings++,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_takeBackBinding(e){const t=this._bindings,n=e._cacheIndex,i=--this._nActiveBindings,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_lendControlInterpolant(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let n=e[t];return n===void 0&&(n=new pp(new Float32Array(2),new Float32Array(2),1,hb),n.__cacheIndex=t,e[t]=n),n}_takeBackControlInterpolant(e){const t=this._controlInterpolants,n=e.__cacheIndex,i=--this._nActiveControlInterpolants,s=t[i];e.__cacheIndex=i,t[i]=e,s.__cacheIndex=n,t[n]=s}clipAction(e,t,n){const i=t||this._root,s=i.uuid;let l=typeof e=="string"?qa.findByName(i,e):e;const c=l!==null?l.uuid:e,u=this._actionsByClip[c];let h=null;if(n===void 0&&(l!==null?n=l.blendMode:n=_u),u!==void 0){const p=u.actionByRoot[s];if(p!==void 0&&p.blendMode===n)return p;h=u.knownActions[0],l===null&&(l=h._clip)}if(l===null)return null;const f=new vy(this,l,t,n);return this._bindAction(f,h),this._addInactiveAction(f,c,s),f}existingAction(e,t){const n=t||this._root,i=n.uuid,s=typeof e=="string"?qa.findByName(n,e):e,l=s?s.uuid:e,c=this._actionsByClip[l];return c!==void 0&&c.actionByRoot[i]||null}stopAllAction(){const e=this._actions,t=this._nActiveActions;for(let n=t-1;n>=0;--n)e[n].stop();return this}update(e){e*=this.timeScale;const t=this._actions,n=this._nActiveActions,i=this.time+=e,s=Math.sign(e),l=this._accuIndex^=1;for(let h=0;h!==n;++h)t[h]._update(i,e,s,l);const c=this._bindings,u=this._nActiveBindings;for(let h=0;h!==u;++h)c[h].apply(l);return this}setTime(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){const t=this._actions,n=e.uuid,i=this._actionsByClip,s=i[n];if(s!==void 0){const l=s.knownActions;for(let c=0,u=l.length;c!==u;++c){const h=l[c];this._deactivateAction(h);const f=h._cacheIndex,p=t[t.length-1];h._cacheIndex=null,h._byClipCacheIndex=null,p._cacheIndex=f,t[f]=p,t.pop(),this._removeInactiveBindingsForAction(h)}delete i[n]}}uncacheRoot(e){const t=e.uuid,n=this._actionsByClip;for(const l in n){const c=n[l].actionByRoot,u=c[t];u!==void 0&&(this._deactivateAction(u),this._removeInactiveAction(u))}const i=this._bindingsByRootAndName,s=i[t];if(s!==void 0)for(const l in s){const c=s[l];c.restoreOriginalState(),this._removeInactiveBinding(c)}}uncacheAction(e,t){const n=this.existingAction(e,t);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}}class Mp{constructor(e){this.value=e}clone(){return new Mp(this.value.clone===void 0?this.value:this.value.clone())}}let db=0;class pb extends Gi{constructor(){super(),this.isUniformsGroup=!0,Object.defineProperty(this,"id",{value:db++}),this.name="",this.usage=za,this.uniforms=[]}add(e){return this.uniforms.push(e),this}remove(e){const t=this.uniforms.indexOf(e);return t!==-1&&this.uniforms.splice(t,1),this}setName(e){return this.name=e,this}setUsage(e){return this.usage=e,this}dispose(){return this.dispatchEvent({type:"dispose"}),this}copy(e){this.name=e.name,this.usage=e.usage;const t=e.uniforms;this.uniforms.length=0;for(let n=0,i=t.length;n<i;n++){const s=Array.isArray(t[n])?t[n]:[t[n]];for(let l=0;l<s.length;l++)this.uniforms.push(s[l].clone())}return this}clone(){return new this.constructor().copy(this)}}class mb extends wu{constructor(e,t,n=1){super(e,t),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}class gb{constructor(e,t,n,i,s){this.isGLBufferAttribute=!0,this.name="",this.buffer=e,this.type=t,this.itemSize=n,this.elementSize=i,this.count=s,this.version=0}set needsUpdate(e){e===!0&&this.version++}setBuffer(e){return this.buffer=e,this}setType(e,t){return this.type=e,this.elementSize=t,this}setItemSize(e){return this.itemSize=e,this}setCount(e){return this.count=e,this}}const E0=new et;class yy{constructor(e,t,n=0,i=1/0){this.ray=new bs(e,t),this.near=n,this.far=i,this.camera=null,this.layers=new Ss,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera&&(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t)}setFromXRController(e){return E0.identity().extractRotation(e.matrixWorld),this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(0,0,-1).applyMatrix4(E0),this}intersectObject(e,t=!0,n=[]){return Pd(e,this,n,t),n.sort(T0),n}intersectObjects(e,t=!0,n=[]){for(let i=0,s=e.length;i<s;i++)Pd(e[i],this,n,t);return n.sort(T0),n}}function T0(r,e){return r.distance-e.distance}function Pd(r,e,t,n){if(r.layers.test(e.layers)&&r.raycast(e,t),n===!0){const i=r.children;for(let s=0,l=i.length;s<l;s++)Pd(i[s],e,t,!0)}}class Id{constructor(e=1,t=0,n=0){return this.radius=e,this.phi=t,this.theta=n,this}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(Zt(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class _b{constructor(e=1,t=0,n=0){return this.radius=e,this.theta=t,this.y=n,this}set(e,t,n){return this.radius=e,this.theta=t,this.y=n,this}copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+n*n),this.theta=Math.atan2(e,n),this.y=t,this}clone(){return new this.constructor().copy(this)}}const A0=new ce;class vb{constructor(e=new ce(1/0,1/0),t=new ce(-1/0,-1/0)){this.isBox2=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=A0.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,A0).distanceTo(e)}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const b0=new N,Hc=new N;class yb{constructor(e=new N,t=new N){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){b0.subVectors(e,this.start),Hc.subVectors(this.end,this.start);const n=Hc.dot(Hc);let s=Hc.dot(b0)/n;return t&&(s=Zt(s,0,1)),s}closestPointToPoint(e,t,n){const i=this.closestPointToPointParameter(e,t);return this.delta(n).multiplyScalar(i).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}const C0=new N;class xb extends bt{constructor(e,t){super(),this.light=e,this.matrixAutoUpdate=!1,this.color=t,this.type="SpotLightHelper";const n=new _t,i=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let l=0,c=1,u=32;l<u;l++,c++){const h=l/u*Math.PI*2,f=c/u*Math.PI*2;i.push(Math.cos(h),Math.sin(h),1,Math.cos(f),Math.sin(f),1)}n.setAttribute("position",new ke(i,3));const s=new Fn({fog:!1,toneMapped:!1});this.cone=new Wi(n,s),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),this.parent?(this.parent.updateWorldMatrix(!0),this.matrix.copy(this.parent.matrixWorld).invert().multiply(this.light.matrixWorld)):this.matrix.copy(this.light.matrixWorld),this.matrixWorld.copy(this.light.matrixWorld);const e=this.light.distance?this.light.distance:1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),C0.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(C0),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const Pr=new N,Vc=new et,Lf=new et;class Sb extends Wi{constructor(e){const t=xy(e),n=new _t,i=[],s=[],l=new Oe(0,0,1),c=new Oe(0,1,0);for(let h=0;h<t.length;h++){const f=t[h];f.parent&&f.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),s.push(l.r,l.g,l.b),s.push(c.r,c.g,c.b))}n.setAttribute("position",new ke(i,3)),n.setAttribute("color",new ke(s,3));const u=new Fn({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(n,u),this.isSkeletonHelper=!0,this.type="SkeletonHelper",this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const t=this.bones,n=this.geometry,i=n.getAttribute("position");Lf.copy(this.root.matrixWorld).invert();for(let s=0,l=0;s<t.length;s++){const c=t[s];c.parent&&c.parent.isBone&&(Vc.multiplyMatrices(Lf,c.matrixWorld),Pr.setFromMatrixPosition(Vc),i.setXYZ(l,Pr.x,Pr.y,Pr.z),Vc.multiplyMatrices(Lf,c.parent.matrixWorld),Pr.setFromMatrixPosition(Vc),i.setXYZ(l+1,Pr.x,Pr.y,Pr.z),l+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose()}}function xy(r){const e=[];r.isBone===!0&&e.push(r);for(let t=0;t<r.children.length;t++)e.push.apply(e,xy(r.children[t]));return e}class Mb extends sn{constructor(e,t,n){const i=new rl(t,4,2),s=new Fr({wireframe:!0,fog:!1,toneMapped:!1});super(i,s),this.light=e,this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const wb=new N,R0=new Oe,P0=new Oe;class Eb extends bt{constructor(e,t,n){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="HemisphereLightHelper";const i=new il(t);i.rotateY(Math.PI*.5),this.material=new Fr({wireframe:!0,fog:!1,toneMapped:!1}),this.color===void 0&&(this.material.vertexColors=!0);const s=i.getAttribute("position"),l=new Float32Array(s.count*3);i.setAttribute("color",new Lt(l,3)),this.add(new sn(i,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const e=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{const t=e.geometry.getAttribute("color");R0.copy(this.light.color),P0.copy(this.light.groundColor);for(let n=0,i=t.count;n<i;n++){const s=n<i/2?R0:P0;t.setXYZ(n,s.r,s.g,s.b)}t.needsUpdate=!0}this.light.updateWorldMatrix(!0,!1),e.lookAt(wb.setFromMatrixPosition(this.light.matrixWorld).negate())}}class Tb extends Wi{constructor(e=10,t=10,n=4473924,i=8947848){n=new Oe(n),i=new Oe(i);const s=t/2,l=e/t,c=e/2,u=[],h=[];for(let g=0,m=0,y=-c;g<=t;g++,y+=l){u.push(-c,0,y,c,0,y),u.push(y,0,-c,y,0,c);const M=g===s?n:i;M.toArray(h,m),m+=3,M.toArray(h,m),m+=3,M.toArray(h,m),m+=3,M.toArray(h,m),m+=3}const f=new _t;f.setAttribute("position",new ke(u,3)),f.setAttribute("color",new ke(h,3));const p=new Fn({vertexColors:!0,toneMapped:!1});super(f,p),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}class Ab extends Wi{constructor(e=10,t=16,n=8,i=64,s=4473924,l=8947848){s=new Oe(s),l=new Oe(l);const c=[],u=[];if(t>1)for(let p=0;p<t;p++){const g=p/t*(Math.PI*2),m=Math.sin(g)*e,y=Math.cos(g)*e;c.push(0,0,0),c.push(m,0,y);const M=p&1?s:l;u.push(M.r,M.g,M.b),u.push(M.r,M.g,M.b)}for(let p=0;p<n;p++){const g=p&1?s:l,m=e-e/n*p;for(let y=0;y<i;y++){let M=y/i*(Math.PI*2),x=Math.sin(M)*m,v=Math.cos(M)*m;c.push(x,0,v),u.push(g.r,g.g,g.b),M=(y+1)/i*(Math.PI*2),x=Math.sin(M)*m,v=Math.cos(M)*m,c.push(x,0,v),u.push(g.r,g.g,g.b)}}const h=new _t;h.setAttribute("position",new ke(c,3)),h.setAttribute("color",new ke(u,3));const f=new Fn({vertexColors:!0,toneMapped:!1});super(h,f),this.type="PolarGridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}const I0=new N,Gc=new N,L0=new N;class bb extends bt{constructor(e,t,n){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="DirectionalLightHelper",t===void 0&&(t=1);let i=new _t;i.setAttribute("position",new ke([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));const s=new Fn({fog:!1,toneMapped:!1});this.lightPlane=new Ur(i,s),this.add(this.lightPlane),i=new _t,i.setAttribute("position",new ke([0,0,0,0,0,1],3)),this.targetLine=new Ur(i,s),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),I0.setFromMatrixPosition(this.light.matrixWorld),Gc.setFromMatrixPosition(this.light.target.matrixWorld),L0.subVectors(Gc,I0),this.lightPlane.lookAt(Gc),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(Gc),this.targetLine.scale.z=L0.length()}}const Wc=new N,qt=new Qa;class Cb extends Wi{constructor(e){const t=new _t,n=new Fn({color:16777215,vertexColors:!0,toneMapped:!1}),i=[],s=[],l={};c("n1","n2"),c("n2","n4"),c("n4","n3"),c("n3","n1"),c("f1","f2"),c("f2","f4"),c("f4","f3"),c("f3","f1"),c("n1","f1"),c("n2","f2"),c("n3","f3"),c("n4","f4"),c("p","n1"),c("p","n2"),c("p","n3"),c("p","n4"),c("u1","u2"),c("u2","u3"),c("u3","u1"),c("c","t"),c("p","c"),c("cn1","cn2"),c("cn3","cn4"),c("cf1","cf2"),c("cf3","cf4");function c(y,M){u(y),u(M)}function u(y){i.push(0,0,0),s.push(0,0,0),l[y]===void 0&&(l[y]=[]),l[y].push(i.length/3-1)}t.setAttribute("position",new ke(i,3)),t.setAttribute("color",new ke(s,3)),super(t,n),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=l,this.update();const h=new Oe(16755200),f=new Oe(16711680),p=new Oe(43775),g=new Oe(16777215),m=new Oe(3355443);this.setColors(h,f,p,g,m)}setColors(e,t,n,i,s){const c=this.geometry.getAttribute("color");c.setXYZ(0,e.r,e.g,e.b),c.setXYZ(1,e.r,e.g,e.b),c.setXYZ(2,e.r,e.g,e.b),c.setXYZ(3,e.r,e.g,e.b),c.setXYZ(4,e.r,e.g,e.b),c.setXYZ(5,e.r,e.g,e.b),c.setXYZ(6,e.r,e.g,e.b),c.setXYZ(7,e.r,e.g,e.b),c.setXYZ(8,e.r,e.g,e.b),c.setXYZ(9,e.r,e.g,e.b),c.setXYZ(10,e.r,e.g,e.b),c.setXYZ(11,e.r,e.g,e.b),c.setXYZ(12,e.r,e.g,e.b),c.setXYZ(13,e.r,e.g,e.b),c.setXYZ(14,e.r,e.g,e.b),c.setXYZ(15,e.r,e.g,e.b),c.setXYZ(16,e.r,e.g,e.b),c.setXYZ(17,e.r,e.g,e.b),c.setXYZ(18,e.r,e.g,e.b),c.setXYZ(19,e.r,e.g,e.b),c.setXYZ(20,e.r,e.g,e.b),c.setXYZ(21,e.r,e.g,e.b),c.setXYZ(22,e.r,e.g,e.b),c.setXYZ(23,e.r,e.g,e.b),c.setXYZ(24,t.r,t.g,t.b),c.setXYZ(25,t.r,t.g,t.b),c.setXYZ(26,t.r,t.g,t.b),c.setXYZ(27,t.r,t.g,t.b),c.setXYZ(28,t.r,t.g,t.b),c.setXYZ(29,t.r,t.g,t.b),c.setXYZ(30,t.r,t.g,t.b),c.setXYZ(31,t.r,t.g,t.b),c.setXYZ(32,n.r,n.g,n.b),c.setXYZ(33,n.r,n.g,n.b),c.setXYZ(34,n.r,n.g,n.b),c.setXYZ(35,n.r,n.g,n.b),c.setXYZ(36,n.r,n.g,n.b),c.setXYZ(37,n.r,n.g,n.b),c.setXYZ(38,i.r,i.g,i.b),c.setXYZ(39,i.r,i.g,i.b),c.setXYZ(40,s.r,s.g,s.b),c.setXYZ(41,s.r,s.g,s.b),c.setXYZ(42,s.r,s.g,s.b),c.setXYZ(43,s.r,s.g,s.b),c.setXYZ(44,s.r,s.g,s.b),c.setXYZ(45,s.r,s.g,s.b),c.setXYZ(46,s.r,s.g,s.b),c.setXYZ(47,s.r,s.g,s.b),c.setXYZ(48,s.r,s.g,s.b),c.setXYZ(49,s.r,s.g,s.b),c.needsUpdate=!0}update(){const e=this.geometry,t=this.pointMap,n=1,i=1;qt.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),Jt("c",t,e,qt,0,0,-1),Jt("t",t,e,qt,0,0,1),Jt("n1",t,e,qt,-n,-i,-1),Jt("n2",t,e,qt,n,-i,-1),Jt("n3",t,e,qt,-n,i,-1),Jt("n4",t,e,qt,n,i,-1),Jt("f1",t,e,qt,-n,-i,1),Jt("f2",t,e,qt,n,-i,1),Jt("f3",t,e,qt,-n,i,1),Jt("f4",t,e,qt,n,i,1),Jt("u1",t,e,qt,n*.7,i*1.1,-1),Jt("u2",t,e,qt,-n*.7,i*1.1,-1),Jt("u3",t,e,qt,0,i*2,-1),Jt("cf1",t,e,qt,-n,0,1),Jt("cf2",t,e,qt,n,0,1),Jt("cf3",t,e,qt,0,-i,1),Jt("cf4",t,e,qt,0,i,1),Jt("cn1",t,e,qt,-n,0,-1),Jt("cn2",t,e,qt,n,0,-1),Jt("cn3",t,e,qt,0,-i,-1),Jt("cn4",t,e,qt,0,i,-1),e.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function Jt(r,e,t,n,i,s,l){Wc.set(i,s,l).unproject(n);const c=e[r];if(c!==void 0){const u=t.getAttribute("position");for(let h=0,f=c.length;h<f;h++)u.setXYZ(c[h],Wc.x,Wc.y,Wc.z)}}const Xc=new On;class Rb extends Wi{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Float32Array(8*3),s=new _t;s.setIndex(new Lt(n,1)),s.setAttribute("position",new Lt(i,3)),super(s,new Fn({color:t,toneMapped:!1})),this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(e){if(this.object!==void 0&&Xc.setFromObject(this.object),Xc.isEmpty())return;const t=Xc.min,n=Xc.max,i=this.geometry.attributes.position,s=i.array;s[0]=n.x,s[1]=n.y,s[2]=n.z,s[3]=t.x,s[4]=n.y,s[5]=n.z,s[6]=t.x,s[7]=t.y,s[8]=n.z,s[9]=n.x,s[10]=t.y,s[11]=n.z,s[12]=n.x,s[13]=n.y,s[14]=t.z,s[15]=t.x,s[16]=n.y,s[17]=t.z,s[18]=t.x,s[19]=t.y,s[20]=t.z,s[21]=n.x,s[22]=t.y,s[23]=t.z,i.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(e){return this.object=e,this.update(),this}copy(e,t){return super.copy(e,t),this.object=e.object,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class Pb extends Wi{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],s=new _t;s.setIndex(new Lt(n,1)),s.setAttribute("position",new ke(i,3)),super(s,new Fn({color:t,toneMapped:!1})),this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){const t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}dispose(){this.geometry.dispose(),this.material.dispose()}}class Ib extends Ur{constructor(e,t=1,n=16776960){const i=n,s=[1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],l=new _t;l.setAttribute("position",new ke(s,3)),l.computeBoundingSphere(),super(l,new Fn({color:i,toneMapped:!1})),this.type="PlaneHelper",this.plane=e,this.size=t;const c=[1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],u=new _t;u.setAttribute("position",new ke(c,3)),u.computeBoundingSphere(),this.add(new sn(u,new Fr({color:i,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()}}const D0=new N;let Yc,Df;class Lb extends bt{constructor(e=new N(0,0,1),t=new N(0,0,0),n=1,i=16776960,s=n*.2,l=s*.2){super(),this.type="ArrowHelper",Yc===void 0&&(Yc=new _t,Yc.setAttribute("position",new ke([0,0,0,0,1,0],3)),Df=new zo(0,.5,1,5,1),Df.translate(0,-.5,0)),this.position.copy(t),this.line=new Ur(Yc,new Fn({color:i,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new sn(Df,new Fr({color:i,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(n,s,l)}setDirection(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{D0.set(e.z,0,-e.x).normalize();const t=Math.acos(e.y);this.quaternion.setFromAxisAngle(D0,t)}}setLength(e,t=e*.2,n=t*.2){this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(n,t,n),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}}class Db extends Wi{constructor(e=1){const t=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],n=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],i=new _t;i.setAttribute("position",new ke(t,3)),i.setAttribute("color",new ke(n,3));const s=new Fn({vertexColors:!0,toneMapped:!1});super(i,s),this.type="AxesHelper"}setColors(e,t,n){const i=new Oe,s=this.geometry.attributes.color.array;return i.set(e),i.toArray(s,0),i.toArray(s,3),i.set(t),i.toArray(s,6),i.toArray(s,9),i.set(n),i.toArray(s,12),i.toArray(s,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class Nb{constructor(){this.type="ShapePath",this.color=new Oe,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new Ha,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,n,i){return this.currentPath.quadraticCurveTo(e,t,n,i),this}bezierCurveTo(e,t,n,i,s,l){return this.currentPath.bezierCurveTo(e,t,n,i,s,l),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(e){function t(v){const E=[];for(let w=0,A=v.length;w<A;w++){const U=v[w],I=new Ms;I.curves=U.curves,E.push(I)}return E}function n(v,E){const w=E.length;let A=!1;for(let U=w-1,I=0;I<w;U=I++){let L=E[U],B=E[I],R=B.x-L.x,b=B.y-L.y;if(Math.abs(b)>Number.EPSILON){if(b<0&&(L=E[I],R=-R,B=E[U],b=-b),v.y<L.y||v.y>B.y)continue;if(v.y===L.y){if(v.x===L.x)return!0}else{const z=b*(v.x-L.x)-R*(v.y-L.y);if(z===0)return!0;if(z<0)continue;A=!A}}else{if(v.y!==L.y)continue;if(B.x<=v.x&&v.x<=L.x||L.x<=v.x&&v.x<=B.x)return!0}}return A}const i=Hi.isClockWise,s=this.subPaths;if(s.length===0)return[];let l,c,u;const h=[];if(s.length===1)return c=s[0],u=new Ms,u.curves=c.curves,h.push(u),h;let f=!i(s[0].getPoints());f=e?!f:f;const p=[],g=[];let m=[],y=0,M;g[y]=void 0,m[y]=[];for(let v=0,E=s.length;v<E;v++)c=s[v],M=c.getPoints(),l=i(M),l=e?!l:l,l?(!f&&g[y]&&y++,g[y]={s:new Ms,p:M},g[y].s.curves=c.curves,f&&y++,m[y]=[]):m[y].push({h:c,p:M[0]});if(!g[0])return t(s);if(g.length>1){let v=!1,E=0;for(let w=0,A=g.length;w<A;w++)p[w]=[];for(let w=0,A=g.length;w<A;w++){const U=m[w];for(let I=0;I<U.length;I++){const L=U[I];let B=!0;for(let R=0;R<g.length;R++)n(L.p,g[R].p)&&(w!==R&&E++,B?(B=!1,p[R].push(L)):v=!0);B&&p[w].push(L)}}E>0&&v===!1&&(m=p)}let x;for(let v=0,E=g.length;v<E;v++){u=g[v].s,h.push(u),x=m[v];for(let w=0,A=x.length;w<A;w++)u.holes.push(x[w].h)}return h}}class Ub extends Ei{constructor(e=1,t=1,n=1,i={}){super(e,t,{...i,count:n}),this.isWebGLMultipleRenderTargets=!0}get texture(){return this.textures}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:pu}}));typeof window<"u"&&(window.__THREE__||(window.__THREE__=pu));const Ob=Object.freeze(Object.defineProperty({__proto__:null,ACESFilmicToneMapping:Fd,AddEquation:Lr,AddOperation:I_,AdditiveAnimationBlendMode:qd,AdditiveBlending:su,AgXToneMapping:O_,AlphaFormat:V_,AlwaysCompare:ov,AlwaysDepth:E_,AlwaysStencilFunc:xd,AmbientLight:uy,AnimationAction:vy,AnimationClip:qa,AnimationLoader:zA,AnimationMixer:fb,AnimationObjectGroup:ub,AnimationUtils:NA,ArcCurve:Uv,ArrayCamera:Tv,ArrowHelper:Lb,AttachedBindMode:qf,Audio:gy,AudioAnalyser:eb,AudioContext:vp,AudioListener:KA,AudioLoader:ZA,AxesHelper:Db,BackSide:An,BasicDepthPacking:K_,BasicShadowMap:r_,BatchedMesh:Lv,Bone:rp,BooleanKeyframeTrack:Rs,Box2:vb,Box3:On,Box3Helper:Pb,BoxGeometry:Cs,BoxHelper:Rb,BufferAttribute:Lt,BufferGeometry:_t,BufferGeometryLoader:my,ByteType:B_,Cache:ar,Camera:Qa,CameraHelper:Cb,CanvasTexture:rA,CapsuleGeometry:bu,CatmullRomCurve3:Ov,CineonToneMapping:N_,CircleGeometry:Cu,ClampToEdgeWrapping:fi,Clock:yp,Color:Oe,ColorKeyframeTrack:mp,ColorManagement:Pt,CompressedArrayTexture:nA,CompressedCubeTexture:iA,CompressedTexture:Tu,CompressedTextureLoader:BA,ConeGeometry:Ru,ConstantAlphaFactor:S_,ConstantColorFactor:y_,CubeCamera:gv,CubeReflectionMapping:ur,CubeRefractionMapping:Nr,CubeTexture:$a,CubeTextureLoader:kA,CubeUVReflectionMapping:No,CubicBezierCurve:ap,CubicBezierCurve3:Fv,CubicInterpolant:ny,CullFaceBack:Wf,CullFaceFront:i_,CullFaceFrontBack:Yx,CullFaceNone:n_,Curve:Ai,CurvePath:Bv,CustomBlending:s_,CustomToneMapping:U_,CylinderGeometry:zo,Cylindrical:_b,Data3DTexture:Jd,DataArrayTexture:yu,DataTexture:Dr,DataTextureLoader:HA,DataUtils:eM,DecrementStencilOp:iS,DecrementWrapStencilOp:sS,DefaultLoadingManager:sy,DepthFormat:ys,DepthStencilFormat:Ro,DepthTexture:ep,DetachedBindMode:z_,DirectionalLight:cy,DirectionalLightHelper:bb,DiscreteInterpolant:iy,DisplayP3ColorSpace:vu,DodecahedronGeometry:Pu,DoubleSide:Fi,DstAlphaFactor:p_,DstColorFactor:g_,DynamicCopyUsage:xS,DynamicDrawUsage:pS,DynamicReadUsage:_S,EdgesGeometry:kv,EllipseCurve:Au,EqualCompare:nv,EqualDepth:A_,EqualStencilFunc:cS,EquirectangularReflectionMapping:Ca,EquirectangularRefractionMapping:Ra,Euler:ei,EventDispatcher:Gi,ExtrudeGeometry:Lu,FileLoader:hr,Float16BufferAttribute:oM,Float32BufferAttribute:ke,FloatType:di,Fog:Mu,FogExp2:Su,FramebufferTexture:tA,FrontSide:cr,Frustum:el,GLBufferAttribute:gb,GLSL1:MS,GLSL3:Sd,GreaterCompare:iv,GreaterDepth:C_,GreaterEqualCompare:sv,GreaterEqualDepth:b_,GreaterEqualStencilFunc:dS,GreaterStencilFunc:hS,GridHelper:Tb,Group:To,HalfFloatType:Ja,HemisphereLight:oy,HemisphereLightHelper:Eb,IcosahedronGeometry:Du,ImageBitmapLoader:qA,ImageLoader:Za,ImageUtils:hv,IncrementStencilOp:nS,IncrementWrapStencilOp:rS,InstancedBufferAttribute:Lo,InstancedBufferGeometry:py,InstancedInterleavedBuffer:mb,InstancedMesh:Iv,Int16BufferAttribute:rM,Int32BufferAttribute:sM,Int8BufferAttribute:tM,IntType:kd,InterleavedBuffer:wu,InterleavedBufferAttribute:Es,Interpolant:sl,InterpolateDiscrete:La,InterpolateLinear:Da,InterpolateSmooth:nu,InvertStencilOp:oS,KeepStencilOp:cs,KeyframeTrack:bi,LOD:Rv,LatheGeometry:nl,Layers:Ss,LessCompare:tv,LessDepth:T_,LessEqualCompare:Zd,LessEqualDepth:ba,LessEqualStencilFunc:uS,LessStencilFunc:lS,Light:Br,LightProbe:dy,Line:Ur,Line3:yb,LineBasicMaterial:Fn,LineCurve:lp,LineCurve3:zv,LineDashedMaterial:$v,LineLoop:Dv,LineSegments:Wi,LinearDisplayP3ColorSpace:Ka,LinearFilter:rn,LinearInterpolant:pp,LinearMipMapLinearFilter:Jx,LinearMipMapNearestFilter:jx,LinearMipmapLinearFilter:zi,LinearMipmapNearestFilter:wa,LinearSRGBColorSpace:fr,LinearToneMapping:L_,LinearTransfer:Ua,Loader:Wn,LoaderUtils:Rd,LoadingManager:gp,LoopOnce:Z_,LoopPingPong:J_,LoopRepeat:j_,LuminanceAlphaFormat:X_,LuminanceFormat:W_,MOUSE:as,Material:_n,MaterialLoader:ku,MathUtils:av,Matrix3:ft,Matrix4:et,MaxEquation:c_,Mesh:sn,MeshBasicMaterial:Fr,MeshDepthMaterial:tp,MeshDistanceMaterial:np,MeshLambertMaterial:Kv,MeshMatcapMaterial:Qv,MeshNormalMaterial:Jv,MeshPhongMaterial:Zv,MeshPhysicalMaterial:qv,MeshStandardMaterial:fp,MeshToonMaterial:jv,MinEquation:l_,MirroredRepeatWrapping:Ia,MixOperation:P_,MultiplyBlending:Yf,MultiplyOperation:ja,NearestFilter:mn,NearestMipMapLinearFilter:Zx,NearestMipMapNearestFilter:qx,NearestMipmapLinearFilter:So,NearestMipmapNearestFilter:zd,NeutralToneMapping:F_,NeverCompare:ev,NeverDepth:w_,NeverStencilFunc:aS,NoBlending:lr,NoColorSpace:sr,NoToneMapping:ki,NormalAnimationBlendMode:_u,NormalBlending:vs,NotEqualCompare:rv,NotEqualDepth:R_,NotEqualStencilFunc:fS,NumberKeyframeTrack:Xa,Object3D:bt,ObjectLoader:XA,ObjectSpaceNormalMap:$_,OctahedronGeometry:il,OneFactor:h_,OneMinusConstantAlphaFactor:M_,OneMinusConstantColorFactor:x_,OneMinusDstAlphaFactor:m_,OneMinusDstColorFactor:__,OneMinusSrcAlphaFactor:au,OneMinusSrcColorFactor:d_,OrthographicCamera:tl,P3Primaries:Fa,PCFShadowMap:mu,PCFSoftShadowMap:Ma,PMREMGenerator:Md,Path:Ha,PerspectiveCamera:pn,Plane:rr,PlaneGeometry:Oo,PlaneHelper:Ib,PointLight:ly,PointLightHelper:Mb,Points:Nv,PointsMaterial:sp,PolarGridHelper:Ab,PolyhedronGeometry:zr,PositionalAudio:$A,PropertyBinding:wt,PropertyMixer:_y,QuadraticBezierCurve:cp,QuadraticBezierCurve3:up,Quaternion:bn,QuaternionKeyframeTrack:Bo,QuaternionLinearInterpolant:ry,RED_GREEN_RGTC2_Format:vd,RED_RGTC1_Format:q_,REVISION:pu,RGBADepthPacking:Q_,RGBAFormat:Gn,RGBAIntegerFormat:Yd,RGBA_ASTC_10x10_Format:fd,RGBA_ASTC_10x5_Format:cd,RGBA_ASTC_10x6_Format:ud,RGBA_ASTC_10x8_Format:hd,RGBA_ASTC_12x10_Format:dd,RGBA_ASTC_12x12_Format:pd,RGBA_ASTC_4x4_Format:td,RGBA_ASTC_5x4_Format:nd,RGBA_ASTC_5x5_Format:id,RGBA_ASTC_6x5_Format:rd,RGBA_ASTC_6x6_Format:sd,RGBA_ASTC_8x5_Format:od,RGBA_ASTC_8x6_Format:ad,RGBA_ASTC_8x8_Format:ld,RGBA_BPTC_Format:tu,RGBA_ETC2_EAC_Format:ed,RGBA_PVRTC_2BPPV1_Format:Kf,RGBA_PVRTC_4BPPV1_Format:Jf,RGBA_S3TC_DXT1_Format:Qc,RGBA_S3TC_DXT3_Format:$c,RGBA_S3TC_DXT5_Format:eu,RGBFormat:G_,RGB_BPTC_SIGNED_Format:md,RGB_BPTC_UNSIGNED_Format:gd,RGB_ETC1_Format:Qf,RGB_ETC2_Format:$f,RGB_PVRTC_2BPPV1_Format:jf,RGB_PVRTC_4BPPV1_Format:Zf,RGB_S3TC_DXT1_Format:Kc,RGFormat:Y_,RGIntegerFormat:Xd,RawShaderMaterial:Yv,Ray:bs,Raycaster:yy,Rec709Primaries:Oa,RectAreaLight:hy,RedFormat:Gd,RedIntegerFormat:Wd,ReinhardToneMapping:D_,RenderTarget:fv,RepeatWrapping:Pa,ReplaceStencilOp:tS,ReverseSubtractEquation:a_,RingGeometry:Nu,SIGNED_RED_GREEN_RGTC2_Format:yd,SIGNED_RED_RGTC1_Format:_d,SRGBColorSpace:hi,SRGBTransfer:Ot,Scene:lu,ShaderChunk:gt,ShaderLib:wi,ShaderMaterial:Ti,ShadowMaterial:Xv,Shape:Ms,ShapeGeometry:Uu,ShapePath:Nb,ShapeUtils:Hi,ShortType:k_,Skeleton:Eu,SkeletonHelper:Sb,SkinnedMesh:Pv,Source:ds,Sphere:Cn,SphereGeometry:rl,Spherical:Id,SphericalHarmonics3:fy,SplineCurve:hp,SpotLight:ay,SpotLightHelper:xb,Sprite:Cv,SpriteMaterial:ip,SrcAlphaFactor:ou,SrcAlphaSaturateFactor:v_,SrcColorFactor:f_,StaticCopyUsage:yS,StaticDrawUsage:za,StaticReadUsage:gS,StereoCamera:jA,StreamCopyUsage:SS,StreamDrawUsage:mS,StreamReadUsage:vS,StringKeyframeTrack:Ps,SubtractEquation:o_,SubtractiveBlending:Xf,TOUCH:ls,TangentSpaceNormalMap:Or,TetrahedronGeometry:Ou,Texture:Xt,TextureLoader:Cd,TorusGeometry:Fu,TorusKnotGeometry:zu,Triangle:Qn,TriangleFanDrawMode:$x,TriangleStripDrawMode:Qx,TrianglesDrawMode:Kx,TubeGeometry:Bu,UVMapping:gu,Uint16BufferAttribute:Kd,Uint32BufferAttribute:Qd,Uint8BufferAttribute:nM,Uint8ClampedBufferAttribute:iM,Uniform:Mp,UniformsGroup:pb,UniformsLib:Ce,UniformsUtils:mv,UnsignedByteType:Vi,UnsignedInt248Type:Uo,UnsignedInt5999Type:H_,UnsignedIntType:ws,UnsignedShort4444Type:Hd,UnsignedShort5551Type:Vd,UnsignedShortType:Bd,VSMShadowMap:Si,Vector2:ce,Vector3:N,Vector4:It,VectorKeyframeTrack:Ya,VideoTexture:eA,WebGL3DRenderTarget:WS,WebGLArrayRenderTarget:GS,WebGLCoordinateSystem:Bi,WebGLCubeRenderTarget:_v,WebGLMultipleRenderTargets:Ub,WebGLRenderTarget:Ei,WebGLRenderer:Av,WebGLUtils:Ev,WebGPUCoordinateSystem:Ba,WireframeGeometry:Wv,WrapAroundEnding:Na,ZeroCurvatureEnding:hs,ZeroFactor:u_,ZeroSlopeEnding:fs,ZeroStencilOp:eS,createCanvasElement:cv},Symbol.toStringTag,{value:"Module"}));var Sy={exports:{}},Is={};/**
 * @license React
 * react-reconciler-constants.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */Is.ConcurrentRoot=1;Is.ContinuousEventPriority=4;Is.DefaultEventPriority=16;Is.DiscreteEventPriority=1;Is.IdleEventPriority=536870912;Is.LegacyRoot=0;Sy.exports=Is;var bo=Sy.exports;function Fb(r){let e;const t=new Set,n=(h,f)=>{const p=typeof h=="function"?h(e):h;if(p!==e){const g=e;e=f?p:Object.assign({},e,p),t.forEach(m=>m(e,g))}},i=()=>e,s=(h,f=i,p=Object.is)=>{let g=f(e);function m(){const y=f(e);if(!p(g,y)){const M=g;h(g=y,M)}}return t.add(m),()=>t.delete(m)},u={setState:n,getState:i,subscribe:(h,f,p)=>f||p?s(h,f,p):(t.add(h),()=>t.delete(h)),destroy:()=>t.clear()};return e=r(n,i,u),u}const zb=typeof window>"u"||!window.navigator||/ServerSideRendering|^Deno\//.test(window.navigator.userAgent),N0=zb?be.useEffect:be.useLayoutEffect;function Bb(r){const e=typeof r=="function"?Fb(r):r,t=(n=e.getState,i=Object.is)=>{const[,s]=be.useReducer(x=>x+1,0),l=e.getState(),c=be.useRef(l),u=be.useRef(n),h=be.useRef(i),f=be.useRef(!1),p=be.useRef();p.current===void 0&&(p.current=n(l));let g,m=!1;(c.current!==l||u.current!==n||h.current!==i||f.current)&&(g=n(l),m=!i(p.current,g)),N0(()=>{m&&(p.current=g),c.current=l,u.current=n,h.current=i,f.current=!1});const y=be.useRef(l);N0(()=>{const x=()=>{try{const E=e.getState(),w=u.current(E);h.current(p.current,w)||(c.current=E,p.current=w,s())}catch{f.current=!0,s()}},v=e.subscribe(x);return e.getState()!==y.current&&x(),v},[]);const M=m?g:p.current;return be.useDebugValue(M),M};return Object.assign(t,e),t[Symbol.iterator]=function(){const n=[t,e];return{next(){const i=n.length<=0;return{value:n.shift(),done:i}}}},t}var My={exports:{}},wy={exports:{}},Ey={};/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */(function(r){function e(H,te){var j=H.length;H.push(te);e:for(;0<j;){var fe=j-1>>>1,Le=H[fe];if(0<i(Le,te))H[fe]=te,H[j]=Le,j=fe;else break e}}function t(H){return H.length===0?null:H[0]}function n(H){if(H.length===0)return null;var te=H[0],j=H.pop();if(j!==te){H[0]=j;e:for(var fe=0,Le=H.length,Be=Le>>>1;fe<Be;){var ne=2*(fe+1)-1,_e=H[ne],Re=ne+1,ye=H[Re];if(0>i(_e,j))Re<Le&&0>i(ye,_e)?(H[fe]=ye,H[Re]=j,fe=Re):(H[fe]=_e,H[ne]=j,fe=ne);else if(Re<Le&&0>i(ye,j))H[fe]=ye,H[Re]=j,fe=Re;else break e}}return te}function i(H,te){var j=H.sortIndex-te.sortIndex;return j!==0?j:H.id-te.id}if(typeof performance=="object"&&typeof performance.now=="function"){var s=performance;r.unstable_now=function(){return s.now()}}else{var l=Date,c=l.now();r.unstable_now=function(){return l.now()-c}}var u=[],h=[],f=1,p=null,g=3,m=!1,y=!1,M=!1,x=typeof setTimeout=="function"?setTimeout:null,v=typeof clearTimeout=="function"?clearTimeout:null,E=typeof setImmediate<"u"?setImmediate:null;typeof navigator<"u"&&navigator.scheduling!==void 0&&navigator.scheduling.isInputPending!==void 0&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function w(H){for(var te=t(h);te!==null;){if(te.callback===null)n(h);else if(te.startTime<=H)n(h),te.sortIndex=te.expirationTime,e(u,te);else break;te=t(h)}}function A(H){if(M=!1,w(H),!y)if(t(u)!==null)y=!0,le(U);else{var te=t(h);te!==null&&xe(A,te.startTime-H)}}function U(H,te){y=!1,M&&(M=!1,v(B),B=-1),m=!0;var j=g;try{for(w(te),p=t(u);p!==null&&(!(p.expirationTime>te)||H&&!z());){var fe=p.callback;if(typeof fe=="function"){p.callback=null,g=p.priorityLevel;var Le=fe(p.expirationTime<=te);te=r.unstable_now(),typeof Le=="function"?p.callback=Le:p===t(u)&&n(u),w(te)}else n(u);p=t(u)}if(p!==null)var Be=!0;else{var ne=t(h);ne!==null&&xe(A,ne.startTime-te),Be=!1}return Be}finally{p=null,g=j,m=!1}}var I=!1,L=null,B=-1,R=5,b=-1;function z(){return!(r.unstable_now()-b<R)}function Y(){if(L!==null){var H=r.unstable_now();b=H;var te=!0;try{te=L(!0,H)}finally{te?k():(I=!1,L=null)}}else I=!1}var k;if(typeof E=="function")k=function(){E(Y)};else if(typeof MessageChannel<"u"){var J=new MessageChannel,se=J.port2;J.port1.onmessage=Y,k=function(){se.postMessage(null)}}else k=function(){x(Y,0)};function le(H){L=H,I||(I=!0,k())}function xe(H,te){B=x(function(){H(r.unstable_now())},te)}r.unstable_IdlePriority=5,r.unstable_ImmediatePriority=1,r.unstable_LowPriority=4,r.unstable_NormalPriority=3,r.unstable_Profiling=null,r.unstable_UserBlockingPriority=2,r.unstable_cancelCallback=function(H){H.callback=null},r.unstable_continueExecution=function(){y||m||(y=!0,le(U))},r.unstable_forceFrameRate=function(H){0>H||125<H||(R=0<H?Math.floor(1e3/H):5)},r.unstable_getCurrentPriorityLevel=function(){return g},r.unstable_getFirstCallbackNode=function(){return t(u)},r.unstable_next=function(H){switch(g){case 1:case 2:case 3:var te=3;break;default:te=g}var j=g;g=te;try{return H()}finally{g=j}},r.unstable_pauseExecution=function(){},r.unstable_requestPaint=function(){},r.unstable_runWithPriority=function(H,te){switch(H){case 1:case 2:case 3:case 4:case 5:break;default:H=3}var j=g;g=H;try{return te()}finally{g=j}},r.unstable_scheduleCallback=function(H,te,j){var fe=r.unstable_now();switch(typeof j=="object"&&j!==null?(j=j.delay,j=typeof j=="number"&&0<j?fe+j:fe):j=fe,H){case 1:var Le=-1;break;case 2:Le=250;break;case 5:Le=1073741823;break;case 4:Le=1e4;break;default:Le=5e3}return Le=j+Le,H={id:f++,callback:te,priorityLevel:H,startTime:j,expirationTime:Le,sortIndex:-1},j>fe?(H.sortIndex=j,e(h,H),t(u)===null&&H===t(h)&&(M?(v(B),B=-1):M=!0,xe(A,j-fe))):(H.sortIndex=Le,e(u,H),y||m||(y=!0,le(U))),H},r.unstable_shouldYield=z,r.unstable_wrapCallback=function(H){var te=g;return function(){var j=g;g=te;try{return H.apply(this,arguments)}finally{g=j}}}})(Ey);wy.exports=Ey;var Ld=wy.exports;/**
 * @license React
 * react-reconciler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var kb=function(e){var t={},n=be,i=Ld,s=Object.assign;function l(o){for(var a="https://reactjs.org/docs/error-decoder.html?invariant="+o,d=1;d<arguments.length;d++)a+="&args[]="+encodeURIComponent(arguments[d]);return"Minified React error #"+o+"; visit "+a+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var c=n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,u=Symbol.for("react.element"),h=Symbol.for("react.portal"),f=Symbol.for("react.fragment"),p=Symbol.for("react.strict_mode"),g=Symbol.for("react.profiler"),m=Symbol.for("react.provider"),y=Symbol.for("react.context"),M=Symbol.for("react.forward_ref"),x=Symbol.for("react.suspense"),v=Symbol.for("react.suspense_list"),E=Symbol.for("react.memo"),w=Symbol.for("react.lazy"),A=Symbol.for("react.offscreen"),U=Symbol.iterator;function I(o){return o===null||typeof o!="object"?null:(o=U&&o[U]||o["@@iterator"],typeof o=="function"?o:null)}function L(o){if(o==null)return null;if(typeof o=="function")return o.displayName||o.name||null;if(typeof o=="string")return o;switch(o){case f:return"Fragment";case h:return"Portal";case g:return"Profiler";case p:return"StrictMode";case x:return"Suspense";case v:return"SuspenseList"}if(typeof o=="object")switch(o.$$typeof){case y:return(o.displayName||"Context")+".Consumer";case m:return(o._context.displayName||"Context")+".Provider";case M:var a=o.render;return o=o.displayName,o||(o=a.displayName||a.name||"",o=o!==""?"ForwardRef("+o+")":"ForwardRef"),o;case E:return a=o.displayName||null,a!==null?a:L(o.type)||"Memo";case w:a=o._payload,o=o._init;try{return L(o(a))}catch{}}return null}function B(o){var a=o.type;switch(o.tag){case 24:return"Cache";case 9:return(a.displayName||"Context")+".Consumer";case 10:return(a._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return o=a.render,o=o.displayName||o.name||"",a.displayName||(o!==""?"ForwardRef("+o+")":"ForwardRef");case 7:return"Fragment";case 5:return a;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return L(a);case 8:return a===p?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if(typeof a=="function")return a.displayName||a.name||null;if(typeof a=="string")return a}return null}function R(o){var a=o,d=o;if(o.alternate)for(;a.return;)a=a.return;else{o=a;do a=o,a.flags&4098&&(d=a.return),o=a.return;while(o)}return a.tag===3?d:null}function b(o){if(R(o)!==o)throw Error(l(188))}function z(o){var a=o.alternate;if(!a){if(a=R(o),a===null)throw Error(l(188));return a!==o?null:o}for(var d=o,_=a;;){var S=d.return;if(S===null)break;var T=S.alternate;if(T===null){if(_=S.return,_!==null){d=_;continue}break}if(S.child===T.child){for(T=S.child;T;){if(T===d)return b(S),o;if(T===_)return b(S),a;T=T.sibling}throw Error(l(188))}if(d.return!==_.return)d=S,_=T;else{for(var O=!1,V=S.child;V;){if(V===d){O=!0,d=S,_=T;break}if(V===_){O=!0,_=S,d=T;break}V=V.sibling}if(!O){for(V=T.child;V;){if(V===d){O=!0,d=T,_=S;break}if(V===_){O=!0,_=T,d=S;break}V=V.sibling}if(!O)throw Error(l(189))}}if(d.alternate!==_)throw Error(l(190))}if(d.tag!==3)throw Error(l(188));return d.stateNode.current===d?o:a}function Y(o){return o=z(o),o!==null?k(o):null}function k(o){if(o.tag===5||o.tag===6)return o;for(o=o.child;o!==null;){var a=k(o);if(a!==null)return a;o=o.sibling}return null}function J(o){if(o.tag===5||o.tag===6)return o;for(o=o.child;o!==null;){if(o.tag!==4){var a=J(o);if(a!==null)return a}o=o.sibling}return null}var se=Array.isArray,le=e.getPublicInstance,xe=e.getRootHostContext,H=e.getChildHostContext,te=e.prepareForCommit,j=e.resetAfterCommit,fe=e.createInstance,Le=e.appendInitialChild,Be=e.finalizeInitialChildren,ne=e.prepareUpdate,_e=e.shouldSetTextContent,Re=e.createTextInstance,ye=e.scheduleTimeout,nt=e.cancelTimeout,it=e.noTimeout,W=e.isPrimaryRenderer,Qe=e.supportsMutation,ae=e.supportsPersistence,pe=e.supportsHydration,he=e.getInstanceFromNode,we=e.preparePortalMount,me=e.getCurrentEventPriority,Ne=e.detachDeletedInstance,qe=e.supportsMicrotasks,F=e.scheduleMicrotask,P=e.supportsTestSelectors,Z=e.findFiberRoot,ue=e.getBoundingRect,ve=e.getTextContent,de=e.isHiddenSubtree,Xe=e.matchAccessibilityRole,Ae=e.setFocusIfFocusable,Te=e.setupIntersectionObserver,tt=e.appendChild,Me=e.appendChildToContainer,Ve=e.commitTextUpdate,pt=e.commitMount,Ze=e.commitUpdate,Fe=e.insertBefore,at=e.insertInContainerBefore,vt=e.removeChild,Rt=e.removeChildFromContainer,lt=e.resetTextContent,C=e.hideInstance,X=e.hideTextInstance,K=e.unhideInstance,ge=e.unhideTextInstance,Ee=e.clearContainer,ct=e.cloneInstance,mt=e.createContainerChildSet,Ut=e.appendChildToContainerChildSet,Kt=e.finalizeContainerChildren,Mt=e.replaceContainerChildren,kt=e.cloneHiddenInstance,Dt=e.cloneHiddenTextInstance,Ci=e.canHydrateInstance,zn=e.canHydrateTextInstance,Ri=e.canHydrateSuspenseInstance,ti=e.isSuspenseInstancePending,Xi=e.isSuspenseInstanceFallback,Ds=e.registerSuspenseInstanceRetry,dr=e.getNextHydratableSibling,al=e.getFirstHydratableChild,Hu=e.getFirstHydratableChildWithinContainer,Vu=e.getFirstHydratableChildWithinSuspenseInstance,Gu=e.hydrateInstance,D=e.hydrateTextInstance,q=e.hydrateSuspenseInstance,ie=e.getNextHydratableInstanceAfterSuspenseInstance,$=e.commitHydratedContainer,ee=e.commitHydratedSuspenseInstance,Pe=e.clearSuspenseBoundary,He=e.clearSuspenseBoundaryFromContainer,Ge=e.shouldDeleteUnhydratedTailInstances,$e=e.didNotMatchHydratedContainerTextInstance,rt=e.didNotMatchHydratedTextInstance,st;function ot(o){if(st===void 0)try{throw Error()}catch(d){var a=d.stack.trim().match(/\n( *(at )?)/);st=a&&a[1]||""}return`
`+st+o}var zt=!1;function Qt(o,a){if(!o||zt)return"";zt=!0;var d=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(a)if(a=function(){throw Error()},Object.defineProperty(a.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(a,[])}catch(Se){var _=Se}Reflect.construct(o,[],a)}else{try{a.call()}catch(Se){_=Se}o.call(a.prototype)}else{try{throw Error()}catch(Se){_=Se}o()}}catch(Se){if(Se&&_&&typeof Se.stack=="string"){for(var S=Se.stack.split(`
`),T=_.stack.split(`
`),O=S.length-1,V=T.length-1;1<=O&&0<=V&&S[O]!==T[V];)V--;for(;1<=O&&0<=V;O--,V--)if(S[O]!==T[V]){if(O!==1||V!==1)do if(O--,V--,0>V||S[O]!==T[V]){var oe=`
`+S[O].replace(" at new "," at ");return o.displayName&&oe.includes("<anonymous>")&&(oe=oe.replace("<anonymous>",o.displayName)),oe}while(1<=O&&0<=V);break}}}finally{zt=!1,Error.prepareStackTrace=d}return(o=o?o.displayName||o.name:"")?ot(o):""}var Rn=Object.prototype.hasOwnProperty,Xn=[],St=-1;function Je(o){return{current:o}}function Ct(o){0>St||(o.current=Xn[St],Xn[St]=null,St--)}function Ke(o,a){St++,Xn[St]=o.current,o.current=a}var vn={},on=Je(vn),$t=Je(!1),pi=vn;function Ht(o,a){var d=o.type.contextTypes;if(!d)return vn;var _=o.stateNode;if(_&&_.__reactInternalMemoizedUnmaskedChildContext===a)return _.__reactInternalMemoizedMaskedChildContext;var S={},T;for(T in d)S[T]=a[T];return _&&(o=o.stateNode,o.__reactInternalMemoizedUnmaskedChildContext=a,o.__reactInternalMemoizedMaskedChildContext=S),S}function Vt(o){return o=o.childContextTypes,o!=null}function pr(){Ct($t),Ct(on)}function Pn(o,a,d){if(on.current!==vn)throw Error(l(168));Ke(on,a),Ke($t,d)}function Ns(o,a,d){var _=o.stateNode;if(a=a.childContextTypes,typeof _.getChildContext!="function")return d;_=_.getChildContext();for(var S in _)if(!(S in a))throw Error(l(108,B(o)||"Unknown",S));return s({},d,_)}function Us(o){return o=(o=o.stateNode)&&o.__reactInternalMemoizedMergedChildContext||vn,pi=on.current,Ke(on,o),Ke($t,$t.current),!0}function ko(o,a,d){var _=o.stateNode;if(!_)throw Error(l(169));d?(o=Ns(o,a,pi),_.__reactInternalMemoizedMergedChildContext=o,Ct($t),Ct(on),Ke(on,o)):Ct($t),Ke($t,d)}var mi=Math.clz32?Math.clz32:Zy,Yy=Math.log,qy=Math.LN2;function Zy(o){return o>>>=0,o===0?32:31-(Yy(o)/qy|0)|0}var ll=64,cl=4194304;function Ho(o){switch(o&-o){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return o&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return o&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return o}}function ul(o,a){var d=o.pendingLanes;if(d===0)return 0;var _=0,S=o.suspendedLanes,T=o.pingedLanes,O=d&268435455;if(O!==0){var V=O&~S;V!==0?_=Ho(V):(T&=O,T!==0&&(_=Ho(T)))}else O=d&~S,O!==0?_=Ho(O):T!==0&&(_=Ho(T));if(_===0)return 0;if(a!==0&&a!==_&&!(a&S)&&(S=_&-_,T=a&-a,S>=T||S===16&&(T&4194240)!==0))return a;if(_&4&&(_|=d&16),a=o.entangledLanes,a!==0)for(o=o.entanglements,a&=_;0<a;)d=31-mi(a),S=1<<d,_|=o[d],a&=~S;return _}function jy(o,a){switch(o){case 1:case 2:case 4:return a+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return a+5e3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}function Jy(o,a){for(var d=o.suspendedLanes,_=o.pingedLanes,S=o.expirationTimes,T=o.pendingLanes;0<T;){var O=31-mi(T),V=1<<O,oe=S[O];oe===-1?(!(V&d)||V&_)&&(S[O]=jy(V,a)):oe<=a&&(o.expiredLanes|=V),T&=~V}}function Wu(o){return o=o.pendingLanes&-1073741825,o!==0?o:o&1073741824?1073741824:0}function Xu(o){for(var a=[],d=0;31>d;d++)a.push(o);return a}function Vo(o,a,d){o.pendingLanes|=a,a!==536870912&&(o.suspendedLanes=0,o.pingedLanes=0),o=o.eventTimes,a=31-mi(a),o[a]=d}function Ky(o,a){var d=o.pendingLanes&~a;o.pendingLanes=a,o.suspendedLanes=0,o.pingedLanes=0,o.expiredLanes&=a,o.mutableReadLanes&=a,o.entangledLanes&=a,a=o.entanglements;var _=o.eventTimes;for(o=o.expirationTimes;0<d;){var S=31-mi(d),T=1<<S;a[S]=0,_[S]=-1,o[S]=-1,d&=~T}}function Yu(o,a){var d=o.entangledLanes|=a;for(o=o.entanglements;d;){var _=31-mi(d),S=1<<_;S&a|o[_]&a&&(o[_]|=a),d&=~S}}var Et=0;function Tp(o){return o&=-o,1<o?4<o?o&268435455?16:536870912:4:1}var qu=i.unstable_scheduleCallback,Ap=i.unstable_cancelCallback,Qy=i.unstable_shouldYield,$y=i.unstable_requestPaint,un=i.unstable_now,Zu=i.unstable_ImmediatePriority,ex=i.unstable_UserBlockingPriority,ju=i.unstable_NormalPriority,tx=i.unstable_IdlePriority,hl=null,Pi=null;function nx(o){if(Pi&&typeof Pi.onCommitFiberRoot=="function")try{Pi.onCommitFiberRoot(hl,o,void 0,(o.current.flags&128)===128)}catch{}}function ix(o,a){return o===a&&(o!==0||1/o===1/a)||o!==o&&a!==a}var Ii=typeof Object.is=="function"?Object.is:ix,Yi=null,fl=!1,Ju=!1;function bp(o){Yi===null?Yi=[o]:Yi.push(o)}function rx(o){fl=!0,bp(o)}function Li(){if(!Ju&&Yi!==null){Ju=!0;var o=0,a=Et;try{var d=Yi;for(Et=1;o<d.length;o++){var _=d[o];do _=_(!0);while(_!==null)}Yi=null,fl=!1}catch(S){throw Yi!==null&&(Yi=Yi.slice(o+1)),qu(Zu,Li),S}finally{Et=a,Ju=!1}}return null}var sx=c.ReactCurrentBatchConfig;function dl(o,a){if(Ii(o,a))return!0;if(typeof o!="object"||o===null||typeof a!="object"||a===null)return!1;var d=Object.keys(o),_=Object.keys(a);if(d.length!==_.length)return!1;for(_=0;_<d.length;_++){var S=d[_];if(!Rn.call(a,S)||!Ii(o[S],a[S]))return!1}return!0}function ox(o){switch(o.tag){case 5:return ot(o.type);case 16:return ot("Lazy");case 13:return ot("Suspense");case 19:return ot("SuspenseList");case 0:case 2:case 15:return o=Qt(o.type,!1),o;case 11:return o=Qt(o.type.render,!1),o;case 1:return o=Qt(o.type,!0),o;default:return""}}function gi(o,a){if(o&&o.defaultProps){a=s({},a),o=o.defaultProps;for(var d in o)a[d]===void 0&&(a[d]=o[d]);return a}return a}var pl=Je(null),ml=null,Os=null,Ku=null;function Qu(){Ku=Os=ml=null}function Cp(o,a,d){W?(Ke(pl,a._currentValue),a._currentValue=d):(Ke(pl,a._currentValue2),a._currentValue2=d)}function $u(o){var a=pl.current;Ct(pl),W?o._currentValue=a:o._currentValue2=a}function eh(o,a,d){for(;o!==null;){var _=o.alternate;if((o.childLanes&a)!==a?(o.childLanes|=a,_!==null&&(_.childLanes|=a)):_!==null&&(_.childLanes&a)!==a&&(_.childLanes|=a),o===d)break;o=o.return}}function Fs(o,a){ml=o,Ku=Os=null,o=o.dependencies,o!==null&&o.firstContext!==null&&(o.lanes&a&&(Zn=!0),o.firstContext=null)}function ni(o){var a=W?o._currentValue:o._currentValue2;if(Ku!==o)if(o={context:o,memoizedValue:a,next:null},Os===null){if(ml===null)throw Error(l(308));Os=o,ml.dependencies={lanes:0,firstContext:o}}else Os=Os.next=o;return a}var Di=null,mr=!1;function th(o){o.updateQueue={baseState:o.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function Rp(o,a){o=o.updateQueue,a.updateQueue===o&&(a.updateQueue={baseState:o.baseState,firstBaseUpdate:o.firstBaseUpdate,lastBaseUpdate:o.lastBaseUpdate,shared:o.shared,effects:o.effects})}function qi(o,a){return{eventTime:o,lane:a,tag:0,payload:null,callback:null,next:null}}function gr(o,a){var d=o.updateQueue;d!==null&&(d=d.shared,en!==null&&o.mode&1&&!(xt&2)?(o=d.interleaved,o===null?(a.next=a,Di===null?Di=[d]:Di.push(d)):(a.next=o.next,o.next=a),d.interleaved=a):(o=d.pending,o===null?a.next=a:(a.next=o.next,o.next=a),d.pending=a))}function gl(o,a,d){if(a=a.updateQueue,a!==null&&(a=a.shared,(d&4194240)!==0)){var _=a.lanes;_&=o.pendingLanes,d|=_,a.lanes=d,Yu(o,d)}}function Pp(o,a){var d=o.updateQueue,_=o.alternate;if(_!==null&&(_=_.updateQueue,d===_)){var S=null,T=null;if(d=d.firstBaseUpdate,d!==null){do{var O={eventTime:d.eventTime,lane:d.lane,tag:d.tag,payload:d.payload,callback:d.callback,next:null};T===null?S=T=O:T=T.next=O,d=d.next}while(d!==null);T===null?S=T=a:T=T.next=a}else S=T=a;d={baseState:_.baseState,firstBaseUpdate:S,lastBaseUpdate:T,shared:_.shared,effects:_.effects},o.updateQueue=d;return}o=d.lastBaseUpdate,o===null?d.firstBaseUpdate=a:o.next=a,d.lastBaseUpdate=a}function _l(o,a,d,_){var S=o.updateQueue;mr=!1;var T=S.firstBaseUpdate,O=S.lastBaseUpdate,V=S.shared.pending;if(V!==null){S.shared.pending=null;var oe=V,Se=oe.next;oe.next=null,O===null?T=Se:O.next=Se,O=oe;var ze=o.alternate;ze!==null&&(ze=ze.updateQueue,V=ze.lastBaseUpdate,V!==O&&(V===null?ze.firstBaseUpdate=Se:V.next=Se,ze.lastBaseUpdate=oe))}if(T!==null){var ut=S.baseState;O=0,ze=Se=oe=null,V=T;do{var je=V.lane,Nt=V.eventTime;if((_&je)===je){ze!==null&&(ze=ze.next={eventTime:Nt,lane:0,tag:V.tag,payload:V.payload,callback:V.callback,next:null});e:{var Ye=o,Mn=V;switch(je=a,Nt=d,Mn.tag){case 1:if(Ye=Mn.payload,typeof Ye=="function"){ut=Ye.call(Nt,ut,je);break e}ut=Ye;break e;case 3:Ye.flags=Ye.flags&-65537|128;case 0:if(Ye=Mn.payload,je=typeof Ye=="function"?Ye.call(Nt,ut,je):Ye,je==null)break e;ut=s({},ut,je);break e;case 2:mr=!0}}V.callback!==null&&V.lane!==0&&(o.flags|=64,je=S.effects,je===null?S.effects=[V]:je.push(V))}else Nt={eventTime:Nt,lane:je,tag:V.tag,payload:V.payload,callback:V.callback,next:null},ze===null?(Se=ze=Nt,oe=ut):ze=ze.next=Nt,O|=je;if(V=V.next,V===null){if(V=S.shared.pending,V===null)break;je=V,V=je.next,je.next=null,S.lastBaseUpdate=je,S.shared.pending=null}}while(!0);if(ze===null&&(oe=ut),S.baseState=oe,S.firstBaseUpdate=Se,S.lastBaseUpdate=ze,a=S.shared.interleaved,a!==null){S=a;do O|=S.lane,S=S.next;while(S!==a)}else T===null&&(S.shared.lanes=0);Ys|=O,o.lanes=O,o.memoizedState=ut}}function Ip(o,a,d){if(o=a.effects,a.effects=null,o!==null)for(a=0;a<o.length;a++){var _=o[a],S=_.callback;if(S!==null){if(_.callback=null,_=d,typeof S!="function")throw Error(l(191,S));S.call(_)}}}var Lp=new n.Component().refs;function nh(o,a,d,_){a=o.memoizedState,d=d(_,a),d=d==null?a:s({},a,d),o.memoizedState=d,o.lanes===0&&(o.updateQueue.baseState=d)}var vl={isMounted:function(o){return(o=o._reactInternals)?R(o)===o:!1},enqueueSetState:function(o,a,d){o=o._reactInternals;var _=Ln(),S=yr(o),T=qi(_,S);T.payload=a,d!=null&&(T.callback=d),gr(o,T),a=ai(o,S,_),a!==null&&gl(a,o,S)},enqueueReplaceState:function(o,a,d){o=o._reactInternals;var _=Ln(),S=yr(o),T=qi(_,S);T.tag=1,T.payload=a,d!=null&&(T.callback=d),gr(o,T),a=ai(o,S,_),a!==null&&gl(a,o,S)},enqueueForceUpdate:function(o,a){o=o._reactInternals;var d=Ln(),_=yr(o),S=qi(d,_);S.tag=2,a!=null&&(S.callback=a),gr(o,S),a=ai(o,_,d),a!==null&&gl(a,o,_)}};function Dp(o,a,d,_,S,T,O){return o=o.stateNode,typeof o.shouldComponentUpdate=="function"?o.shouldComponentUpdate(_,T,O):a.prototype&&a.prototype.isPureReactComponent?!dl(d,_)||!dl(S,T):!0}function Np(o,a,d){var _=!1,S=vn,T=a.contextType;return typeof T=="object"&&T!==null?T=ni(T):(S=Vt(a)?pi:on.current,_=a.contextTypes,T=(_=_!=null)?Ht(o,S):vn),a=new a(d,T),o.memoizedState=a.state!==null&&a.state!==void 0?a.state:null,a.updater=vl,o.stateNode=a,a._reactInternals=o,_&&(o=o.stateNode,o.__reactInternalMemoizedUnmaskedChildContext=S,o.__reactInternalMemoizedMaskedChildContext=T),a}function Up(o,a,d,_){o=a.state,typeof a.componentWillReceiveProps=="function"&&a.componentWillReceiveProps(d,_),typeof a.UNSAFE_componentWillReceiveProps=="function"&&a.UNSAFE_componentWillReceiveProps(d,_),a.state!==o&&vl.enqueueReplaceState(a,a.state,null)}function ih(o,a,d,_){var S=o.stateNode;S.props=d,S.state=o.memoizedState,S.refs=Lp,th(o);var T=a.contextType;typeof T=="object"&&T!==null?S.context=ni(T):(T=Vt(a)?pi:on.current,S.context=Ht(o,T)),S.state=o.memoizedState,T=a.getDerivedStateFromProps,typeof T=="function"&&(nh(o,a,T,d),S.state=o.memoizedState),typeof a.getDerivedStateFromProps=="function"||typeof S.getSnapshotBeforeUpdate=="function"||typeof S.UNSAFE_componentWillMount!="function"&&typeof S.componentWillMount!="function"||(a=S.state,typeof S.componentWillMount=="function"&&S.componentWillMount(),typeof S.UNSAFE_componentWillMount=="function"&&S.UNSAFE_componentWillMount(),a!==S.state&&vl.enqueueReplaceState(S,S.state,null),_l(o,d,S,_),S.state=o.memoizedState),typeof S.componentDidMount=="function"&&(o.flags|=4194308)}var zs=[],Bs=0,yl=null,xl=0,ii=[],ri=0,kr=null,Zi=1,ji="";function Hr(o,a){zs[Bs++]=xl,zs[Bs++]=yl,yl=o,xl=a}function Op(o,a,d){ii[ri++]=Zi,ii[ri++]=ji,ii[ri++]=kr,kr=o;var _=Zi;o=ji;var S=32-mi(_)-1;_&=~(1<<S),d+=1;var T=32-mi(a)+S;if(30<T){var O=S-S%5;T=(_&(1<<O)-1).toString(32),_>>=O,S-=O,Zi=1<<32-mi(a)+S|d<<S|_,ji=T+o}else Zi=1<<T|d<<S|_,ji=o}function rh(o){o.return!==null&&(Hr(o,1),Op(o,1,0))}function sh(o){for(;o===yl;)yl=zs[--Bs],zs[Bs]=null,xl=zs[--Bs],zs[Bs]=null;for(;o===kr;)kr=ii[--ri],ii[ri]=null,ji=ii[--ri],ii[ri]=null,Zi=ii[--ri],ii[ri]=null}var Yn=null,qn=null,Bt=!1,Go=!1,_i=null;function Fp(o,a){var d=li(5,null,null,0);d.elementType="DELETED",d.stateNode=a,d.return=o,a=o.deletions,a===null?(o.deletions=[d],o.flags|=16):a.push(d)}function zp(o,a){switch(o.tag){case 5:return a=Ci(a,o.type,o.pendingProps),a!==null?(o.stateNode=a,Yn=o,qn=al(a),!0):!1;case 6:return a=zn(a,o.pendingProps),a!==null?(o.stateNode=a,Yn=o,qn=null,!0):!1;case 13:if(a=Ri(a),a!==null){var d=kr!==null?{id:Zi,overflow:ji}:null;return o.memoizedState={dehydrated:a,treeContext:d,retryLane:1073741824},d=li(18,null,null,0),d.stateNode=a,d.return=o,o.child=d,Yn=o,qn=null,!0}return!1;default:return!1}}function oh(o){return(o.mode&1)!==0&&(o.flags&128)===0}function ah(o){if(Bt){var a=qn;if(a){var d=a;if(!zp(o,a)){if(oh(o))throw Error(l(418));a=dr(d);var _=Yn;a&&zp(o,a)?Fp(_,d):(o.flags=o.flags&-4097|2,Bt=!1,Yn=o)}}else{if(oh(o))throw Error(l(418));o.flags=o.flags&-4097|2,Bt=!1,Yn=o}}}function Bp(o){for(o=o.return;o!==null&&o.tag!==5&&o.tag!==3&&o.tag!==13;)o=o.return;Yn=o}function Wo(o){if(!pe||o!==Yn)return!1;if(!Bt)return Bp(o),Bt=!0,!1;if(o.tag!==3&&(o.tag!==5||Ge(o.type)&&!_e(o.type,o.memoizedProps))){var a=qn;if(a){if(oh(o)){for(o=qn;o;)o=dr(o);throw Error(l(418))}for(;a;)Fp(o,a),a=dr(a)}}if(Bp(o),o.tag===13){if(!pe)throw Error(l(316));if(o=o.memoizedState,o=o!==null?o.dehydrated:null,!o)throw Error(l(317));qn=ie(o)}else qn=Yn?dr(o.stateNode):null;return!0}function ks(){pe&&(qn=Yn=null,Go=Bt=!1)}function lh(o){_i===null?_i=[o]:_i.push(o)}function Xo(o,a,d){if(o=d.ref,o!==null&&typeof o!="function"&&typeof o!="object"){if(d._owner){if(d=d._owner,d){if(d.tag!==1)throw Error(l(309));var _=d.stateNode}if(!_)throw Error(l(147,o));var S=_,T=""+o;return a!==null&&a.ref!==null&&typeof a.ref=="function"&&a.ref._stringRef===T?a.ref:(a=function(O){var V=S.refs;V===Lp&&(V=S.refs={}),O===null?delete V[T]:V[T]=O},a._stringRef=T,a)}if(typeof o!="string")throw Error(l(284));if(!d._owner)throw Error(l(290,o))}return o}function Sl(o,a){throw o=Object.prototype.toString.call(a),Error(l(31,o==="[object Object]"?"object with keys {"+Object.keys(a).join(", ")+"}":o))}function kp(o){var a=o._init;return a(o._payload)}function Hp(o){function a(Q,G){if(o){var re=Q.deletions;re===null?(Q.deletions=[G],Q.flags|=16):re.push(G)}}function d(Q,G){if(!o)return null;for(;G!==null;)a(Q,G),G=G.sibling;return null}function _(Q,G){for(Q=new Map;G!==null;)G.key!==null?Q.set(G.key,G):Q.set(G.index,G),G=G.sibling;return Q}function S(Q,G){return Q=Sr(Q,G),Q.index=0,Q.sibling=null,Q}function T(Q,G,re){return Q.index=re,o?(re=Q.alternate,re!==null?(re=re.index,re<G?(Q.flags|=2,G):re):(Q.flags|=2,G)):(Q.flags|=1048576,G)}function O(Q){return o&&Q.alternate===null&&(Q.flags|=2),Q}function V(Q,G,re,De){return G===null||G.tag!==6?(G=Xh(re,Q.mode,De),G.return=Q,G):(G=S(G,re),G.return=Q,G)}function oe(Q,G,re,De){var We=re.type;return We===f?ze(Q,G,re.props.children,De,re.key):G!==null&&(G.elementType===We||typeof We=="object"&&We!==null&&We.$$typeof===w&&kp(We)===G.type)?(De=S(G,re.props),De.ref=Xo(Q,G,re),De.return=Q,De):(De=Ql(re.type,re.key,re.props,null,Q.mode,De),De.ref=Xo(Q,G,re),De.return=Q,De)}function Se(Q,G,re,De){return G===null||G.tag!==4||G.stateNode.containerInfo!==re.containerInfo||G.stateNode.implementation!==re.implementation?(G=Yh(re,Q.mode,De),G.return=Q,G):(G=S(G,re.children||[]),G.return=Q,G)}function ze(Q,G,re,De,We){return G===null||G.tag!==7?(G=Zr(re,Q.mode,De,We),G.return=Q,G):(G=S(G,re),G.return=Q,G)}function ut(Q,G,re){if(typeof G=="string"&&G!==""||typeof G=="number")return G=Xh(""+G,Q.mode,re),G.return=Q,G;if(typeof G=="object"&&G!==null){switch(G.$$typeof){case u:return re=Ql(G.type,G.key,G.props,null,Q.mode,re),re.ref=Xo(Q,null,G),re.return=Q,re;case h:return G=Yh(G,Q.mode,re),G.return=Q,G;case w:var De=G._init;return ut(Q,De(G._payload),re)}if(se(G)||I(G))return G=Zr(G,Q.mode,re,null),G.return=Q,G;Sl(Q,G)}return null}function je(Q,G,re,De){var We=G!==null?G.key:null;if(typeof re=="string"&&re!==""||typeof re=="number")return We!==null?null:V(Q,G,""+re,De);if(typeof re=="object"&&re!==null){switch(re.$$typeof){case u:return re.key===We?oe(Q,G,re,De):null;case h:return re.key===We?Se(Q,G,re,De):null;case w:return We=re._init,je(Q,G,We(re._payload),De)}if(se(re)||I(re))return We!==null?null:ze(Q,G,re,De,null);Sl(Q,re)}return null}function Nt(Q,G,re,De,We){if(typeof De=="string"&&De!==""||typeof De=="number")return Q=Q.get(re)||null,V(G,Q,""+De,We);if(typeof De=="object"&&De!==null){switch(De.$$typeof){case u:return Q=Q.get(De.key===null?re:De.key)||null,oe(G,Q,De,We);case h:return Q=Q.get(De.key===null?re:De.key)||null,Se(G,Q,De,We);case w:var yt=De._init;return Nt(Q,G,re,yt(De._payload),We)}if(se(De)||I(De))return Q=Q.get(re)||null,ze(G,Q,De,We,null);Sl(G,De)}return null}function Ye(Q,G,re,De){for(var We=null,yt=null,ht=G,Tt=G=0,fn=null;ht!==null&&Tt<re.length;Tt++){ht.index>Tt?(fn=ht,ht=null):fn=ht.sibling;var At=je(Q,ht,re[Tt],De);if(At===null){ht===null&&(ht=fn);break}o&&ht&&At.alternate===null&&a(Q,ht),G=T(At,G,Tt),yt===null?We=At:yt.sibling=At,yt=At,ht=fn}if(Tt===re.length)return d(Q,ht),Bt&&Hr(Q,Tt),We;if(ht===null){for(;Tt<re.length;Tt++)ht=ut(Q,re[Tt],De),ht!==null&&(G=T(ht,G,Tt),yt===null?We=ht:yt.sibling=ht,yt=ht);return Bt&&Hr(Q,Tt),We}for(ht=_(Q,ht);Tt<re.length;Tt++)fn=Nt(ht,Q,Tt,re[Tt],De),fn!==null&&(o&&fn.alternate!==null&&ht.delete(fn.key===null?Tt:fn.key),G=T(fn,G,Tt),yt===null?We=fn:yt.sibling=fn,yt=fn);return o&&ht.forEach(function(Mr){return a(Q,Mr)}),Bt&&Hr(Q,Tt),We}function Mn(Q,G,re,De){var We=I(re);if(typeof We!="function")throw Error(l(150));if(re=We.call(re),re==null)throw Error(l(151));for(var yt=We=null,ht=G,Tt=G=0,fn=null,At=re.next();ht!==null&&!At.done;Tt++,At=re.next()){ht.index>Tt?(fn=ht,ht=null):fn=ht.sibling;var Mr=je(Q,ht,At.value,De);if(Mr===null){ht===null&&(ht=fn);break}o&&ht&&Mr.alternate===null&&a(Q,ht),G=T(Mr,G,Tt),yt===null?We=Mr:yt.sibling=Mr,yt=Mr,ht=fn}if(At.done)return d(Q,ht),Bt&&Hr(Q,Tt),We;if(ht===null){for(;!At.done;Tt++,At=re.next())At=ut(Q,At.value,De),At!==null&&(G=T(At,G,Tt),yt===null?We=At:yt.sibling=At,yt=At);return Bt&&Hr(Q,Tt),We}for(ht=_(Q,ht);!At.done;Tt++,At=re.next())At=Nt(ht,Q,Tt,At.value,De),At!==null&&(o&&At.alternate!==null&&ht.delete(At.key===null?Tt:At.key),G=T(At,G,Tt),yt===null?We=At:yt.sibling=At,yt=At);return o&&ht.forEach(function(Ox){return a(Q,Ox)}),Bt&&Hr(Q,Tt),We}function ci(Q,G,re,De){if(typeof re=="object"&&re!==null&&re.type===f&&re.key===null&&(re=re.props.children),typeof re=="object"&&re!==null){switch(re.$$typeof){case u:e:{for(var We=re.key,yt=G;yt!==null;){if(yt.key===We){if(We=re.type,We===f){if(yt.tag===7){d(Q,yt.sibling),G=S(yt,re.props.children),G.return=Q,Q=G;break e}}else if(yt.elementType===We||typeof We=="object"&&We!==null&&We.$$typeof===w&&kp(We)===yt.type){d(Q,yt.sibling),G=S(yt,re.props),G.ref=Xo(Q,yt,re),G.return=Q,Q=G;break e}d(Q,yt);break}else a(Q,yt);yt=yt.sibling}re.type===f?(G=Zr(re.props.children,Q.mode,De,re.key),G.return=Q,Q=G):(De=Ql(re.type,re.key,re.props,null,Q.mode,De),De.ref=Xo(Q,G,re),De.return=Q,Q=De)}return O(Q);case h:e:{for(yt=re.key;G!==null;){if(G.key===yt)if(G.tag===4&&G.stateNode.containerInfo===re.containerInfo&&G.stateNode.implementation===re.implementation){d(Q,G.sibling),G=S(G,re.children||[]),G.return=Q,Q=G;break e}else{d(Q,G);break}else a(Q,G);G=G.sibling}G=Yh(re,Q.mode,De),G.return=Q,Q=G}return O(Q);case w:return yt=re._init,ci(Q,G,yt(re._payload),De)}if(se(re))return Ye(Q,G,re,De);if(I(re))return Mn(Q,G,re,De);Sl(Q,re)}return typeof re=="string"&&re!==""||typeof re=="number"?(re=""+re,G!==null&&G.tag===6?(d(Q,G.sibling),G=S(G,re),G.return=Q,Q=G):(d(Q,G),G=Xh(re,Q.mode,De),G.return=Q,Q=G),O(Q)):d(Q,G)}return ci}var Hs=Hp(!0),Vp=Hp(!1),Yo={},si=Je(Yo),qo=Je(Yo),Vs=Je(Yo);function Ni(o){if(o===Yo)throw Error(l(174));return o}function ch(o,a){Ke(Vs,a),Ke(qo,o),Ke(si,Yo),o=xe(a),Ct(si),Ke(si,o)}function Gs(){Ct(si),Ct(qo),Ct(Vs)}function Gp(o){var a=Ni(Vs.current),d=Ni(si.current);a=H(d,o.type,a),d!==a&&(Ke(qo,o),Ke(si,a))}function uh(o){qo.current===o&&(Ct(si),Ct(qo))}var Gt=Je(0);function Ml(o){for(var a=o;a!==null;){if(a.tag===13){var d=a.memoizedState;if(d!==null&&(d=d.dehydrated,d===null||ti(d)||Xi(d)))return a}else if(a.tag===19&&a.memoizedProps.revealOrder!==void 0){if(a.flags&128)return a}else if(a.child!==null){a.child.return=a,a=a.child;continue}if(a===o)break;for(;a.sibling===null;){if(a.return===null||a.return===o)return null;a=a.return}a.sibling.return=a.return,a=a.sibling}return null}var hh=[];function fh(){for(var o=0;o<hh.length;o++){var a=hh[o];W?a._workInProgressVersionPrimary=null:a._workInProgressVersionSecondary=null}hh.length=0}var wl=c.ReactCurrentDispatcher,oi=c.ReactCurrentBatchConfig,Ws=0,Yt=null,yn=null,hn=null,El=!1,Zo=!1,jo=0,ax=0;function xn(){throw Error(l(321))}function dh(o,a){if(a===null)return!1;for(var d=0;d<a.length&&d<o.length;d++)if(!Ii(o[d],a[d]))return!1;return!0}function ph(o,a,d,_,S,T){if(Ws=T,Yt=a,a.memoizedState=null,a.updateQueue=null,a.lanes=0,wl.current=o===null||o.memoizedState===null?hx:fx,o=d(_,S),Zo){T=0;do{if(Zo=!1,jo=0,25<=T)throw Error(l(301));T+=1,hn=yn=null,a.updateQueue=null,wl.current=dx,o=d(_,S)}while(Zo)}if(wl.current=Rl,a=yn!==null&&yn.next!==null,Ws=0,hn=yn=Yt=null,El=!1,a)throw Error(l(300));return o}function mh(){var o=jo!==0;return jo=0,o}function Ji(){var o={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return hn===null?Yt.memoizedState=hn=o:hn=hn.next=o,hn}function Ui(){if(yn===null){var o=Yt.alternate;o=o!==null?o.memoizedState:null}else o=yn.next;var a=hn===null?Yt.memoizedState:hn.next;if(a!==null)hn=a,yn=o;else{if(o===null)throw Error(l(310));yn=o,o={memoizedState:yn.memoizedState,baseState:yn.baseState,baseQueue:yn.baseQueue,queue:yn.queue,next:null},hn===null?Yt.memoizedState=hn=o:hn=hn.next=o}return hn}function Vr(o,a){return typeof a=="function"?a(o):a}function Tl(o){var a=Ui(),d=a.queue;if(d===null)throw Error(l(311));d.lastRenderedReducer=o;var _=yn,S=_.baseQueue,T=d.pending;if(T!==null){if(S!==null){var O=S.next;S.next=T.next,T.next=O}_.baseQueue=S=T,d.pending=null}if(S!==null){T=S.next,_=_.baseState;var V=O=null,oe=null,Se=T;do{var ze=Se.lane;if((Ws&ze)===ze)oe!==null&&(oe=oe.next={lane:0,action:Se.action,hasEagerState:Se.hasEagerState,eagerState:Se.eagerState,next:null}),_=Se.hasEagerState?Se.eagerState:o(_,Se.action);else{var ut={lane:ze,action:Se.action,hasEagerState:Se.hasEagerState,eagerState:Se.eagerState,next:null};oe===null?(V=oe=ut,O=_):oe=oe.next=ut,Yt.lanes|=ze,Ys|=ze}Se=Se.next}while(Se!==null&&Se!==T);oe===null?O=_:oe.next=V,Ii(_,a.memoizedState)||(Zn=!0),a.memoizedState=_,a.baseState=O,a.baseQueue=oe,d.lastRenderedState=_}if(o=d.interleaved,o!==null){S=o;do T=S.lane,Yt.lanes|=T,Ys|=T,S=S.next;while(S!==o)}else S===null&&(d.lanes=0);return[a.memoizedState,d.dispatch]}function Al(o){var a=Ui(),d=a.queue;if(d===null)throw Error(l(311));d.lastRenderedReducer=o;var _=d.dispatch,S=d.pending,T=a.memoizedState;if(S!==null){d.pending=null;var O=S=S.next;do T=o(T,O.action),O=O.next;while(O!==S);Ii(T,a.memoizedState)||(Zn=!0),a.memoizedState=T,a.baseQueue===null&&(a.baseState=T),d.lastRenderedState=T}return[T,_]}function Wp(){}function Xp(o,a){var d=Yt,_=Ui(),S=a(),T=!Ii(_.memoizedState,S);if(T&&(_.memoizedState=S,Zn=!0),_=_.queue,Ko(Zp.bind(null,d,_,o),[o]),_.getSnapshot!==a||T||hn!==null&&hn.memoizedState.tag&1){if(d.flags|=2048,Jo(9,qp.bind(null,d,_,S,a),void 0,null),en===null)throw Error(l(349));Ws&30||Yp(d,a,S)}return S}function Yp(o,a,d){o.flags|=16384,o={getSnapshot:a,value:d},a=Yt.updateQueue,a===null?(a={lastEffect:null,stores:null},Yt.updateQueue=a,a.stores=[o]):(d=a.stores,d===null?a.stores=[o]:d.push(o))}function qp(o,a,d,_){a.value=d,a.getSnapshot=_,jp(a)&&ai(o,1,-1)}function Zp(o,a,d){return d(function(){jp(a)&&ai(o,1,-1)})}function jp(o){var a=o.getSnapshot;o=o.value;try{var d=a();return!Ii(o,d)}catch{return!0}}function gh(o){var a=Ji();return typeof o=="function"&&(o=o()),a.memoizedState=a.baseState=o,o={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Vr,lastRenderedState:o},a.queue=o,o=o.dispatch=ux.bind(null,Yt,o),[a.memoizedState,o]}function Jo(o,a,d,_){return o={tag:o,create:a,destroy:d,deps:_,next:null},a=Yt.updateQueue,a===null?(a={lastEffect:null,stores:null},Yt.updateQueue=a,a.lastEffect=o.next=o):(d=a.lastEffect,d===null?a.lastEffect=o.next=o:(_=d.next,d.next=o,o.next=_,a.lastEffect=o)),o}function Jp(){return Ui().memoizedState}function bl(o,a,d,_){var S=Ji();Yt.flags|=o,S.memoizedState=Jo(1|a,d,void 0,_===void 0?null:_)}function Cl(o,a,d,_){var S=Ui();_=_===void 0?null:_;var T=void 0;if(yn!==null){var O=yn.memoizedState;if(T=O.destroy,_!==null&&dh(_,O.deps)){S.memoizedState=Jo(a,d,T,_);return}}Yt.flags|=o,S.memoizedState=Jo(1|a,d,T,_)}function _h(o,a){return bl(8390656,8,o,a)}function Ko(o,a){return Cl(2048,8,o,a)}function Kp(o,a){return Cl(4,2,o,a)}function Qp(o,a){return Cl(4,4,o,a)}function $p(o,a){if(typeof a=="function")return o=o(),a(o),function(){a(null)};if(a!=null)return o=o(),a.current=o,function(){a.current=null}}function em(o,a,d){return d=d!=null?d.concat([o]):null,Cl(4,4,$p.bind(null,a,o),d)}function vh(){}function tm(o,a){var d=Ui();a=a===void 0?null:a;var _=d.memoizedState;return _!==null&&a!==null&&dh(a,_[1])?_[0]:(d.memoizedState=[o,a],o)}function nm(o,a){var d=Ui();a=a===void 0?null:a;var _=d.memoizedState;return _!==null&&a!==null&&dh(a,_[1])?_[0]:(o=o(),d.memoizedState=[o,a],o)}function lx(o,a){var d=Et;Et=d!==0&&4>d?d:4,o(!0);var _=oi.transition;oi.transition={};try{o(!1),a()}finally{Et=d,oi.transition=_}}function im(){return Ui().memoizedState}function cx(o,a,d){var _=yr(o);d={lane:_,action:d,hasEagerState:!1,eagerState:null,next:null},rm(o)?sm(a,d):(om(o,a,d),d=Ln(),o=ai(o,_,d),o!==null&&am(o,a,_))}function ux(o,a,d){var _=yr(o),S={lane:_,action:d,hasEagerState:!1,eagerState:null,next:null};if(rm(o))sm(a,S);else{om(o,a,S);var T=o.alternate;if(o.lanes===0&&(T===null||T.lanes===0)&&(T=a.lastRenderedReducer,T!==null))try{var O=a.lastRenderedState,V=T(O,d);if(S.hasEagerState=!0,S.eagerState=V,Ii(V,O))return}catch{}finally{}d=Ln(),o=ai(o,_,d),o!==null&&am(o,a,_)}}function rm(o){var a=o.alternate;return o===Yt||a!==null&&a===Yt}function sm(o,a){Zo=El=!0;var d=o.pending;d===null?a.next=a:(a.next=d.next,d.next=a),o.pending=a}function om(o,a,d){en!==null&&o.mode&1&&!(xt&2)?(o=a.interleaved,o===null?(d.next=d,Di===null?Di=[a]:Di.push(a)):(d.next=o.next,o.next=d),a.interleaved=d):(o=a.pending,o===null?d.next=d:(d.next=o.next,o.next=d),a.pending=d)}function am(o,a,d){if(d&4194240){var _=a.lanes;_&=o.pendingLanes,d|=_,a.lanes=d,Yu(o,d)}}var Rl={readContext:ni,useCallback:xn,useContext:xn,useEffect:xn,useImperativeHandle:xn,useInsertionEffect:xn,useLayoutEffect:xn,useMemo:xn,useReducer:xn,useRef:xn,useState:xn,useDebugValue:xn,useDeferredValue:xn,useTransition:xn,useMutableSource:xn,useSyncExternalStore:xn,useId:xn,unstable_isNewReconciler:!1},hx={readContext:ni,useCallback:function(o,a){return Ji().memoizedState=[o,a===void 0?null:a],o},useContext:ni,useEffect:_h,useImperativeHandle:function(o,a,d){return d=d!=null?d.concat([o]):null,bl(4194308,4,$p.bind(null,a,o),d)},useLayoutEffect:function(o,a){return bl(4194308,4,o,a)},useInsertionEffect:function(o,a){return bl(4,2,o,a)},useMemo:function(o,a){var d=Ji();return a=a===void 0?null:a,o=o(),d.memoizedState=[o,a],o},useReducer:function(o,a,d){var _=Ji();return a=d!==void 0?d(a):a,_.memoizedState=_.baseState=a,o={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:o,lastRenderedState:a},_.queue=o,o=o.dispatch=cx.bind(null,Yt,o),[_.memoizedState,o]},useRef:function(o){var a=Ji();return o={current:o},a.memoizedState=o},useState:gh,useDebugValue:vh,useDeferredValue:function(o){var a=gh(o),d=a[0],_=a[1];return _h(function(){var S=oi.transition;oi.transition={};try{_(o)}finally{oi.transition=S}},[o]),d},useTransition:function(){var o=gh(!1),a=o[0];return o=lx.bind(null,o[1]),Ji().memoizedState=o,[a,o]},useMutableSource:function(){},useSyncExternalStore:function(o,a,d){var _=Yt,S=Ji();if(Bt){if(d===void 0)throw Error(l(407));d=d()}else{if(d=a(),en===null)throw Error(l(349));Ws&30||Yp(_,a,d)}S.memoizedState=d;var T={value:d,getSnapshot:a};return S.queue=T,_h(Zp.bind(null,_,T,o),[o]),_.flags|=2048,Jo(9,qp.bind(null,_,T,d,a),void 0,null),d},useId:function(){var o=Ji(),a=en.identifierPrefix;if(Bt){var d=ji,_=Zi;d=(_&~(1<<32-mi(_)-1)).toString(32)+d,a=":"+a+"R"+d,d=jo++,0<d&&(a+="H"+d.toString(32)),a+=":"}else d=ax++,a=":"+a+"r"+d.toString(32)+":";return o.memoizedState=a},unstable_isNewReconciler:!1},fx={readContext:ni,useCallback:tm,useContext:ni,useEffect:Ko,useImperativeHandle:em,useInsertionEffect:Kp,useLayoutEffect:Qp,useMemo:nm,useReducer:Tl,useRef:Jp,useState:function(){return Tl(Vr)},useDebugValue:vh,useDeferredValue:function(o){var a=Tl(Vr),d=a[0],_=a[1];return Ko(function(){var S=oi.transition;oi.transition={};try{_(o)}finally{oi.transition=S}},[o]),d},useTransition:function(){var o=Tl(Vr)[0],a=Ui().memoizedState;return[o,a]},useMutableSource:Wp,useSyncExternalStore:Xp,useId:im,unstable_isNewReconciler:!1},dx={readContext:ni,useCallback:tm,useContext:ni,useEffect:Ko,useImperativeHandle:em,useInsertionEffect:Kp,useLayoutEffect:Qp,useMemo:nm,useReducer:Al,useRef:Jp,useState:function(){return Al(Vr)},useDebugValue:vh,useDeferredValue:function(o){var a=Al(Vr),d=a[0],_=a[1];return Ko(function(){var S=oi.transition;oi.transition={};try{_(o)}finally{oi.transition=S}},[o]),d},useTransition:function(){var o=Al(Vr)[0],a=Ui().memoizedState;return[o,a]},useMutableSource:Wp,useSyncExternalStore:Xp,useId:im,unstable_isNewReconciler:!1};function yh(o,a){try{var d="",_=a;do d+=ox(_),_=_.return;while(_);var S=d}catch(T){S=`
Error generating stack: `+T.message+`
`+T.stack}return{value:o,source:a,stack:S}}function xh(o,a){try{}catch(d){setTimeout(function(){throw d})}}var px=typeof WeakMap=="function"?WeakMap:Map;function lm(o,a,d){d=qi(-1,d),d.tag=3,d.payload={element:null};var _=a.value;return d.callback=function(){Xl||(Xl=!0,zh=_),xh(o,a)},d}function cm(o,a,d){d=qi(-1,d),d.tag=3;var _=o.type.getDerivedStateFromError;if(typeof _=="function"){var S=a.value;d.payload=function(){return _(S)},d.callback=function(){xh(o,a)}}var T=o.stateNode;return T!==null&&typeof T.componentDidCatch=="function"&&(d.callback=function(){xh(o,a),typeof _!="function"&&(_r===null?_r=new Set([this]):_r.add(this));var O=a.stack;this.componentDidCatch(a.value,{componentStack:O!==null?O:""})}),d}function um(o,a,d){var _=o.pingCache;if(_===null){_=o.pingCache=new px;var S=new Set;_.set(a,S)}else S=_.get(a),S===void 0&&(S=new Set,_.set(a,S));S.has(d)||(S.add(d),o=Cx.bind(null,o,a,d),a.then(o,o))}function hm(o){do{var a;if((a=o.tag===13)&&(a=o.memoizedState,a=a!==null?a.dehydrated!==null:!0),a)return o;o=o.return}while(o!==null);return null}function fm(o,a,d,_,S){return o.mode&1?(o.flags|=65536,o.lanes=S,o):(o===a?o.flags|=65536:(o.flags|=128,d.flags|=131072,d.flags&=-52805,d.tag===1&&(d.alternate===null?d.tag=17:(a=qi(-1,1),a.tag=2,gr(d,a))),d.lanes|=1),o)}function Oi(o){o.flags|=4}function dm(o,a){if(o!==null&&o.child===a.child)return!0;if(a.flags&16)return!1;for(o=a.child;o!==null;){if(o.flags&12854||o.subtreeFlags&12854)return!1;o=o.sibling}return!0}var Qo,$o,Pl,Il;if(Qe)Qo=function(o,a){for(var d=a.child;d!==null;){if(d.tag===5||d.tag===6)Le(o,d.stateNode);else if(d.tag!==4&&d.child!==null){d.child.return=d,d=d.child;continue}if(d===a)break;for(;d.sibling===null;){if(d.return===null||d.return===a)return;d=d.return}d.sibling.return=d.return,d=d.sibling}},$o=function(){},Pl=function(o,a,d,_,S){if(o=o.memoizedProps,o!==_){var T=a.stateNode,O=Ni(si.current);d=ne(T,d,o,_,S,O),(a.updateQueue=d)&&Oi(a)}},Il=function(o,a,d,_){d!==_&&Oi(a)};else if(ae){Qo=function(o,a,d,_){for(var S=a.child;S!==null;){if(S.tag===5){var T=S.stateNode;d&&_&&(T=kt(T,S.type,S.memoizedProps,S)),Le(o,T)}else if(S.tag===6)T=S.stateNode,d&&_&&(T=Dt(T,S.memoizedProps,S)),Le(o,T);else if(S.tag!==4){if(S.tag===22&&S.memoizedState!==null)T=S.child,T!==null&&(T.return=S),Qo(o,S,!0,!0);else if(S.child!==null){S.child.return=S,S=S.child;continue}}if(S===a)break;for(;S.sibling===null;){if(S.return===null||S.return===a)return;S=S.return}S.sibling.return=S.return,S=S.sibling}};var pm=function(o,a,d,_){for(var S=a.child;S!==null;){if(S.tag===5){var T=S.stateNode;d&&_&&(T=kt(T,S.type,S.memoizedProps,S)),Ut(o,T)}else if(S.tag===6)T=S.stateNode,d&&_&&(T=Dt(T,S.memoizedProps,S)),Ut(o,T);else if(S.tag!==4){if(S.tag===22&&S.memoizedState!==null)T=S.child,T!==null&&(T.return=S),pm(o,S,!0,!0);else if(S.child!==null){S.child.return=S,S=S.child;continue}}if(S===a)break;for(;S.sibling===null;){if(S.return===null||S.return===a)return;S=S.return}S.sibling.return=S.return,S=S.sibling}};$o=function(o,a){var d=a.stateNode;if(!dm(o,a)){o=d.containerInfo;var _=mt(o);pm(_,a,!1,!1),d.pendingChildren=_,Oi(a),Kt(o,_)}},Pl=function(o,a,d,_,S){var T=o.stateNode,O=o.memoizedProps;if((o=dm(o,a))&&O===_)a.stateNode=T;else{var V=a.stateNode,oe=Ni(si.current),Se=null;O!==_&&(Se=ne(V,d,O,_,S,oe)),o&&Se===null?a.stateNode=T:(T=ct(T,Se,d,O,_,a,o,V),Be(T,d,_,S,oe)&&Oi(a),a.stateNode=T,o?Oi(a):Qo(T,a,!1,!1))}},Il=function(o,a,d,_){d!==_?(o=Ni(Vs.current),d=Ni(si.current),a.stateNode=Re(_,o,d,a),Oi(a)):a.stateNode=o.stateNode}}else $o=function(){},Pl=function(){},Il=function(){};function ea(o,a){if(!Bt)switch(o.tailMode){case"hidden":a=o.tail;for(var d=null;a!==null;)a.alternate!==null&&(d=a),a=a.sibling;d===null?o.tail=null:d.sibling=null;break;case"collapsed":d=o.tail;for(var _=null;d!==null;)d.alternate!==null&&(_=d),d=d.sibling;_===null?a||o.tail===null?o.tail=null:o.tail.sibling=null:_.sibling=null}}function Sn(o){var a=o.alternate!==null&&o.alternate.child===o.child,d=0,_=0;if(a)for(var S=o.child;S!==null;)d|=S.lanes|S.childLanes,_|=S.subtreeFlags&14680064,_|=S.flags&14680064,S.return=o,S=S.sibling;else for(S=o.child;S!==null;)d|=S.lanes|S.childLanes,_|=S.subtreeFlags,_|=S.flags,S.return=o,S=S.sibling;return o.subtreeFlags|=_,o.childLanes=d,a}function mx(o,a,d){var _=a.pendingProps;switch(sh(a),a.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return Sn(a),null;case 1:return Vt(a.type)&&pr(),Sn(a),null;case 3:return _=a.stateNode,Gs(),Ct($t),Ct(on),fh(),_.pendingContext&&(_.context=_.pendingContext,_.pendingContext=null),(o===null||o.child===null)&&(Wo(a)?Oi(a):o===null||o.memoizedState.isDehydrated&&!(a.flags&256)||(a.flags|=1024,_i!==null&&(Hh(_i),_i=null))),$o(o,a),Sn(a),null;case 5:uh(a),d=Ni(Vs.current);var S=a.type;if(o!==null&&a.stateNode!=null)Pl(o,a,S,_,d),o.ref!==a.ref&&(a.flags|=512,a.flags|=2097152);else{if(!_){if(a.stateNode===null)throw Error(l(166));return Sn(a),null}if(o=Ni(si.current),Wo(a)){if(!pe)throw Error(l(175));o=Gu(a.stateNode,a.type,a.memoizedProps,d,o,a,!Go),a.updateQueue=o,o!==null&&Oi(a)}else{var T=fe(S,_,d,o,a);Qo(T,a,!1,!1),a.stateNode=T,Be(T,S,_,d,o)&&Oi(a)}a.ref!==null&&(a.flags|=512,a.flags|=2097152)}return Sn(a),null;case 6:if(o&&a.stateNode!=null)Il(o,a,o.memoizedProps,_);else{if(typeof _!="string"&&a.stateNode===null)throw Error(l(166));if(o=Ni(Vs.current),d=Ni(si.current),Wo(a)){if(!pe)throw Error(l(176));if(o=a.stateNode,_=a.memoizedProps,(d=D(o,_,a,!Go))&&(S=Yn,S!==null))switch(T=(S.mode&1)!==0,S.tag){case 3:$e(S.stateNode.containerInfo,o,_,T);break;case 5:rt(S.type,S.memoizedProps,S.stateNode,o,_,T)}d&&Oi(a)}else a.stateNode=Re(_,o,d,a)}return Sn(a),null;case 13:if(Ct(Gt),_=a.memoizedState,Bt&&qn!==null&&a.mode&1&&!(a.flags&128)){for(o=qn;o;)o=dr(o);return ks(),a.flags|=98560,a}if(_!==null&&_.dehydrated!==null){if(_=Wo(a),o===null){if(!_)throw Error(l(318));if(!pe)throw Error(l(344));if(o=a.memoizedState,o=o!==null?o.dehydrated:null,!o)throw Error(l(317));q(o,a)}else ks(),!(a.flags&128)&&(a.memoizedState=null),a.flags|=4;return Sn(a),null}return _i!==null&&(Hh(_i),_i=null),a.flags&128?(a.lanes=d,a):(_=_!==null,d=!1,o===null?Wo(a):d=o.memoizedState!==null,_&&!d&&(a.child.flags|=8192,a.mode&1&&(o===null||Gt.current&1?an===0&&(an=3):Gh())),a.updateQueue!==null&&(a.flags|=4),Sn(a),null);case 4:return Gs(),$o(o,a),o===null&&we(a.stateNode.containerInfo),Sn(a),null;case 10:return $u(a.type._context),Sn(a),null;case 17:return Vt(a.type)&&pr(),Sn(a),null;case 19:if(Ct(Gt),S=a.memoizedState,S===null)return Sn(a),null;if(_=(a.flags&128)!==0,T=S.rendering,T===null)if(_)ea(S,!1);else{if(an!==0||o!==null&&o.flags&128)for(o=a.child;o!==null;){if(T=Ml(o),T!==null){for(a.flags|=128,ea(S,!1),o=T.updateQueue,o!==null&&(a.updateQueue=o,a.flags|=4),a.subtreeFlags=0,o=d,_=a.child;_!==null;)d=_,S=o,d.flags&=14680066,T=d.alternate,T===null?(d.childLanes=0,d.lanes=S,d.child=null,d.subtreeFlags=0,d.memoizedProps=null,d.memoizedState=null,d.updateQueue=null,d.dependencies=null,d.stateNode=null):(d.childLanes=T.childLanes,d.lanes=T.lanes,d.child=T.child,d.subtreeFlags=0,d.deletions=null,d.memoizedProps=T.memoizedProps,d.memoizedState=T.memoizedState,d.updateQueue=T.updateQueue,d.type=T.type,S=T.dependencies,d.dependencies=S===null?null:{lanes:S.lanes,firstContext:S.firstContext}),_=_.sibling;return Ke(Gt,Gt.current&1|2),a.child}o=o.sibling}S.tail!==null&&un()>Fh&&(a.flags|=128,_=!0,ea(S,!1),a.lanes=4194304)}else{if(!_)if(o=Ml(T),o!==null){if(a.flags|=128,_=!0,o=o.updateQueue,o!==null&&(a.updateQueue=o,a.flags|=4),ea(S,!0),S.tail===null&&S.tailMode==="hidden"&&!T.alternate&&!Bt)return Sn(a),null}else 2*un()-S.renderingStartTime>Fh&&d!==1073741824&&(a.flags|=128,_=!0,ea(S,!1),a.lanes=4194304);S.isBackwards?(T.sibling=a.child,a.child=T):(o=S.last,o!==null?o.sibling=T:a.child=T,S.last=T)}return S.tail!==null?(a=S.tail,S.rendering=a,S.tail=a.sibling,S.renderingStartTime=un(),a.sibling=null,o=Gt.current,Ke(Gt,_?o&1|2:o&1),a):(Sn(a),null);case 22:case 23:return Vh(),_=a.memoizedState!==null,o!==null&&o.memoizedState!==null!==_&&(a.flags|=8192),_&&a.mode&1?jn&1073741824&&(Sn(a),Qe&&a.subtreeFlags&6&&(a.flags|=8192)):Sn(a),null;case 24:return null;case 25:return null}throw Error(l(156,a.tag))}var gx=c.ReactCurrentOwner,Zn=!1;function In(o,a,d,_){a.child=o===null?Vp(a,null,d,_):Hs(a,o.child,d,_)}function mm(o,a,d,_,S){d=d.render;var T=a.ref;return Fs(a,S),_=ph(o,a,d,_,T,S),d=mh(),o!==null&&!Zn?(a.updateQueue=o.updateQueue,a.flags&=-2053,o.lanes&=~S,Ki(o,a,S)):(Bt&&d&&rh(a),a.flags|=1,In(o,a,_,S),a.child)}function gm(o,a,d,_,S){if(o===null){var T=d.type;return typeof T=="function"&&!Wh(T)&&T.defaultProps===void 0&&d.compare===null&&d.defaultProps===void 0?(a.tag=15,a.type=T,_m(o,a,T,_,S)):(o=Ql(d.type,null,_,a,a.mode,S),o.ref=a.ref,o.return=a,a.child=o)}if(T=o.child,!(o.lanes&S)){var O=T.memoizedProps;if(d=d.compare,d=d!==null?d:dl,d(O,_)&&o.ref===a.ref)return Ki(o,a,S)}return a.flags|=1,o=Sr(T,_),o.ref=a.ref,o.return=a,a.child=o}function _m(o,a,d,_,S){if(o!==null&&dl(o.memoizedProps,_)&&o.ref===a.ref)if(Zn=!1,(o.lanes&S)!==0)o.flags&131072&&(Zn=!0);else return a.lanes=o.lanes,Ki(o,a,S);return Sh(o,a,d,_,S)}function vm(o,a,d){var _=a.pendingProps,S=_.children,T=o!==null?o.memoizedState:null;if(_.mode==="hidden")if(!(a.mode&1))a.memoizedState={baseLanes:0,cachePool:null},Ke(Xs,jn),jn|=d;else if(d&1073741824)a.memoizedState={baseLanes:0,cachePool:null},_=T!==null?T.baseLanes:d,Ke(Xs,jn),jn|=_;else return o=T!==null?T.baseLanes|d:d,a.lanes=a.childLanes=1073741824,a.memoizedState={baseLanes:o,cachePool:null},a.updateQueue=null,Ke(Xs,jn),jn|=o,null;else T!==null?(_=T.baseLanes|d,a.memoizedState=null):_=d,Ke(Xs,jn),jn|=_;return In(o,a,S,d),a.child}function ym(o,a){var d=a.ref;(o===null&&d!==null||o!==null&&o.ref!==d)&&(a.flags|=512,a.flags|=2097152)}function Sh(o,a,d,_,S){var T=Vt(d)?pi:on.current;return T=Ht(a,T),Fs(a,S),d=ph(o,a,d,_,T,S),_=mh(),o!==null&&!Zn?(a.updateQueue=o.updateQueue,a.flags&=-2053,o.lanes&=~S,Ki(o,a,S)):(Bt&&_&&rh(a),a.flags|=1,In(o,a,d,S),a.child)}function xm(o,a,d,_,S){if(Vt(d)){var T=!0;Us(a)}else T=!1;if(Fs(a,S),a.stateNode===null)o!==null&&(o.alternate=null,a.alternate=null,a.flags|=2),Np(a,d,_),ih(a,d,_,S),_=!0;else if(o===null){var O=a.stateNode,V=a.memoizedProps;O.props=V;var oe=O.context,Se=d.contextType;typeof Se=="object"&&Se!==null?Se=ni(Se):(Se=Vt(d)?pi:on.current,Se=Ht(a,Se));var ze=d.getDerivedStateFromProps,ut=typeof ze=="function"||typeof O.getSnapshotBeforeUpdate=="function";ut||typeof O.UNSAFE_componentWillReceiveProps!="function"&&typeof O.componentWillReceiveProps!="function"||(V!==_||oe!==Se)&&Up(a,O,_,Se),mr=!1;var je=a.memoizedState;O.state=je,_l(a,_,O,S),oe=a.memoizedState,V!==_||je!==oe||$t.current||mr?(typeof ze=="function"&&(nh(a,d,ze,_),oe=a.memoizedState),(V=mr||Dp(a,d,V,_,je,oe,Se))?(ut||typeof O.UNSAFE_componentWillMount!="function"&&typeof O.componentWillMount!="function"||(typeof O.componentWillMount=="function"&&O.componentWillMount(),typeof O.UNSAFE_componentWillMount=="function"&&O.UNSAFE_componentWillMount()),typeof O.componentDidMount=="function"&&(a.flags|=4194308)):(typeof O.componentDidMount=="function"&&(a.flags|=4194308),a.memoizedProps=_,a.memoizedState=oe),O.props=_,O.state=oe,O.context=Se,_=V):(typeof O.componentDidMount=="function"&&(a.flags|=4194308),_=!1)}else{O=a.stateNode,Rp(o,a),V=a.memoizedProps,Se=a.type===a.elementType?V:gi(a.type,V),O.props=Se,ut=a.pendingProps,je=O.context,oe=d.contextType,typeof oe=="object"&&oe!==null?oe=ni(oe):(oe=Vt(d)?pi:on.current,oe=Ht(a,oe));var Nt=d.getDerivedStateFromProps;(ze=typeof Nt=="function"||typeof O.getSnapshotBeforeUpdate=="function")||typeof O.UNSAFE_componentWillReceiveProps!="function"&&typeof O.componentWillReceiveProps!="function"||(V!==ut||je!==oe)&&Up(a,O,_,oe),mr=!1,je=a.memoizedState,O.state=je,_l(a,_,O,S);var Ye=a.memoizedState;V!==ut||je!==Ye||$t.current||mr?(typeof Nt=="function"&&(nh(a,d,Nt,_),Ye=a.memoizedState),(Se=mr||Dp(a,d,Se,_,je,Ye,oe)||!1)?(ze||typeof O.UNSAFE_componentWillUpdate!="function"&&typeof O.componentWillUpdate!="function"||(typeof O.componentWillUpdate=="function"&&O.componentWillUpdate(_,Ye,oe),typeof O.UNSAFE_componentWillUpdate=="function"&&O.UNSAFE_componentWillUpdate(_,Ye,oe)),typeof O.componentDidUpdate=="function"&&(a.flags|=4),typeof O.getSnapshotBeforeUpdate=="function"&&(a.flags|=1024)):(typeof O.componentDidUpdate!="function"||V===o.memoizedProps&&je===o.memoizedState||(a.flags|=4),typeof O.getSnapshotBeforeUpdate!="function"||V===o.memoizedProps&&je===o.memoizedState||(a.flags|=1024),a.memoizedProps=_,a.memoizedState=Ye),O.props=_,O.state=Ye,O.context=oe,_=Se):(typeof O.componentDidUpdate!="function"||V===o.memoizedProps&&je===o.memoizedState||(a.flags|=4),typeof O.getSnapshotBeforeUpdate!="function"||V===o.memoizedProps&&je===o.memoizedState||(a.flags|=1024),_=!1)}return Mh(o,a,d,_,T,S)}function Mh(o,a,d,_,S,T){ym(o,a);var O=(a.flags&128)!==0;if(!_&&!O)return S&&ko(a,d,!1),Ki(o,a,T);_=a.stateNode,gx.current=a;var V=O&&typeof d.getDerivedStateFromError!="function"?null:_.render();return a.flags|=1,o!==null&&O?(a.child=Hs(a,o.child,null,T),a.child=Hs(a,null,V,T)):In(o,a,V,T),a.memoizedState=_.state,S&&ko(a,d,!0),a.child}function Sm(o){var a=o.stateNode;a.pendingContext?Pn(o,a.pendingContext,a.pendingContext!==a.context):a.context&&Pn(o,a.context,!1),ch(o,a.containerInfo)}function Mm(o,a,d,_,S){return ks(),lh(S),a.flags|=256,In(o,a,d,_),a.child}var Ll={dehydrated:null,treeContext:null,retryLane:0};function Dl(o){return{baseLanes:o,cachePool:null}}function wm(o,a,d){var _=a.pendingProps,S=Gt.current,T=!1,O=(a.flags&128)!==0,V;if((V=O)||(V=o!==null&&o.memoizedState===null?!1:(S&2)!==0),V?(T=!0,a.flags&=-129):(o===null||o.memoizedState!==null)&&(S|=1),Ke(Gt,S&1),o===null)return ah(a),o=a.memoizedState,o!==null&&(o=o.dehydrated,o!==null)?(a.mode&1?Xi(o)?a.lanes=8:a.lanes=1073741824:a.lanes=1,null):(S=_.children,o=_.fallback,T?(_=a.mode,T=a.child,S={mode:"hidden",children:S},!(_&1)&&T!==null?(T.childLanes=0,T.pendingProps=S):T=$l(S,_,0,null),o=Zr(o,_,d,null),T.return=a,o.return=a,T.sibling=o,a.child=T,a.child.memoizedState=Dl(d),a.memoizedState=Ll,o):wh(a,S));if(S=o.memoizedState,S!==null){if(V=S.dehydrated,V!==null){if(O)return a.flags&256?(a.flags&=-257,Nl(o,a,d,Error(l(422)))):a.memoizedState!==null?(a.child=o.child,a.flags|=128,null):(T=_.fallback,S=a.mode,_=$l({mode:"visible",children:_.children},S,0,null),T=Zr(T,S,d,null),T.flags|=2,_.return=a,T.return=a,_.sibling=T,a.child=_,a.mode&1&&Hs(a,o.child,null,d),a.child.memoizedState=Dl(d),a.memoizedState=Ll,T);if(!(a.mode&1))a=Nl(o,a,d,null);else if(Xi(V))a=Nl(o,a,d,Error(l(419)));else if(_=(d&o.childLanes)!==0,Zn||_){if(_=en,_!==null){switch(d&-d){case 4:T=2;break;case 16:T=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:T=32;break;case 536870912:T=268435456;break;default:T=0}_=T&(_.suspendedLanes|d)?0:T,_!==0&&_!==S.retryLane&&(S.retryLane=_,ai(o,_,-1))}Gh(),a=Nl(o,a,d,Error(l(421)))}else ti(V)?(a.flags|=128,a.child=o.child,a=Rx.bind(null,o),Ds(V,a),a=null):(d=S.treeContext,pe&&(qn=Vu(V),Yn=a,Bt=!0,_i=null,Go=!1,d!==null&&(ii[ri++]=Zi,ii[ri++]=ji,ii[ri++]=kr,Zi=d.id,ji=d.overflow,kr=a)),a=wh(a,a.pendingProps.children),a.flags|=4096);return a}return T?(_=Tm(o,a,_.children,_.fallback,d),T=a.child,S=o.child.memoizedState,T.memoizedState=S===null?Dl(d):{baseLanes:S.baseLanes|d,cachePool:null},T.childLanes=o.childLanes&~d,a.memoizedState=Ll,_):(d=Em(o,a,_.children,d),a.memoizedState=null,d)}return T?(_=Tm(o,a,_.children,_.fallback,d),T=a.child,S=o.child.memoizedState,T.memoizedState=S===null?Dl(d):{baseLanes:S.baseLanes|d,cachePool:null},T.childLanes=o.childLanes&~d,a.memoizedState=Ll,_):(d=Em(o,a,_.children,d),a.memoizedState=null,d)}function wh(o,a){return a=$l({mode:"visible",children:a},o.mode,0,null),a.return=o,o.child=a}function Em(o,a,d,_){var S=o.child;return o=S.sibling,d=Sr(S,{mode:"visible",children:d}),!(a.mode&1)&&(d.lanes=_),d.return=a,d.sibling=null,o!==null&&(_=a.deletions,_===null?(a.deletions=[o],a.flags|=16):_.push(o)),a.child=d}function Tm(o,a,d,_,S){var T=a.mode;o=o.child;var O=o.sibling,V={mode:"hidden",children:d};return!(T&1)&&a.child!==o?(d=a.child,d.childLanes=0,d.pendingProps=V,a.deletions=null):(d=Sr(o,V),d.subtreeFlags=o.subtreeFlags&14680064),O!==null?_=Sr(O,_):(_=Zr(_,T,S,null),_.flags|=2),_.return=a,d.return=a,d.sibling=_,a.child=d,_}function Nl(o,a,d,_){return _!==null&&lh(_),Hs(a,o.child,null,d),o=wh(a,a.pendingProps.children),o.flags|=2,a.memoizedState=null,o}function Am(o,a,d){o.lanes|=a;var _=o.alternate;_!==null&&(_.lanes|=a),eh(o.return,a,d)}function Eh(o,a,d,_,S){var T=o.memoizedState;T===null?o.memoizedState={isBackwards:a,rendering:null,renderingStartTime:0,last:_,tail:d,tailMode:S}:(T.isBackwards=a,T.rendering=null,T.renderingStartTime=0,T.last=_,T.tail=d,T.tailMode=S)}function bm(o,a,d){var _=a.pendingProps,S=_.revealOrder,T=_.tail;if(In(o,a,_.children,d),_=Gt.current,_&2)_=_&1|2,a.flags|=128;else{if(o!==null&&o.flags&128)e:for(o=a.child;o!==null;){if(o.tag===13)o.memoizedState!==null&&Am(o,d,a);else if(o.tag===19)Am(o,d,a);else if(o.child!==null){o.child.return=o,o=o.child;continue}if(o===a)break e;for(;o.sibling===null;){if(o.return===null||o.return===a)break e;o=o.return}o.sibling.return=o.return,o=o.sibling}_&=1}if(Ke(Gt,_),!(a.mode&1))a.memoizedState=null;else switch(S){case"forwards":for(d=a.child,S=null;d!==null;)o=d.alternate,o!==null&&Ml(o)===null&&(S=d),d=d.sibling;d=S,d===null?(S=a.child,a.child=null):(S=d.sibling,d.sibling=null),Eh(a,!1,S,d,T);break;case"backwards":for(d=null,S=a.child,a.child=null;S!==null;){if(o=S.alternate,o!==null&&Ml(o)===null){a.child=S;break}o=S.sibling,S.sibling=d,d=S,S=o}Eh(a,!0,d,null,T);break;case"together":Eh(a,!1,null,null,void 0);break;default:a.memoizedState=null}return a.child}function Ki(o,a,d){if(o!==null&&(a.dependencies=o.dependencies),Ys|=a.lanes,!(d&a.childLanes))return null;if(o!==null&&a.child!==o.child)throw Error(l(153));if(a.child!==null){for(o=a.child,d=Sr(o,o.pendingProps),a.child=d,d.return=a;o.sibling!==null;)o=o.sibling,d=d.sibling=Sr(o,o.pendingProps),d.return=a;d.sibling=null}return a.child}function _x(o,a,d){switch(a.tag){case 3:Sm(a),ks();break;case 5:Gp(a);break;case 1:Vt(a.type)&&Us(a);break;case 4:ch(a,a.stateNode.containerInfo);break;case 10:Cp(a,a.type._context,a.memoizedProps.value);break;case 13:var _=a.memoizedState;if(_!==null)return _.dehydrated!==null?(Ke(Gt,Gt.current&1),a.flags|=128,null):d&a.child.childLanes?wm(o,a,d):(Ke(Gt,Gt.current&1),o=Ki(o,a,d),o!==null?o.sibling:null);Ke(Gt,Gt.current&1);break;case 19:if(_=(d&a.childLanes)!==0,o.flags&128){if(_)return bm(o,a,d);a.flags|=128}var S=a.memoizedState;if(S!==null&&(S.rendering=null,S.tail=null,S.lastEffect=null),Ke(Gt,Gt.current),_)break;return null;case 22:case 23:return a.lanes=0,vm(o,a,d)}return Ki(o,a,d)}function vx(o,a){switch(sh(a),a.tag){case 1:return Vt(a.type)&&pr(),o=a.flags,o&65536?(a.flags=o&-65537|128,a):null;case 3:return Gs(),Ct($t),Ct(on),fh(),o=a.flags,o&65536&&!(o&128)?(a.flags=o&-65537|128,a):null;case 5:return uh(a),null;case 13:if(Ct(Gt),o=a.memoizedState,o!==null&&o.dehydrated!==null){if(a.alternate===null)throw Error(l(340));ks()}return o=a.flags,o&65536?(a.flags=o&-65537|128,a):null;case 19:return Ct(Gt),null;case 4:return Gs(),null;case 10:return $u(a.type._context),null;case 22:case 23:return Vh(),null;case 24:return null;default:return null}}var Ul=!1,Gr=!1,yx=typeof WeakSet=="function"?WeakSet:Set,Ie=null;function Ol(o,a){var d=o.ref;if(d!==null)if(typeof d=="function")try{d(null)}catch(_){Hn(o,a,_)}else d.current=null}function Th(o,a,d){try{d()}catch(_){Hn(o,a,_)}}var Cm=!1;function xx(o,a){for(te(o.containerInfo),Ie=a;Ie!==null;)if(o=Ie,a=o.child,(o.subtreeFlags&1028)!==0&&a!==null)a.return=o,Ie=a;else for(;Ie!==null;){o=Ie;try{var d=o.alternate;if(o.flags&1024)switch(o.tag){case 0:case 11:case 15:break;case 1:if(d!==null){var _=d.memoizedProps,S=d.memoizedState,T=o.stateNode,O=T.getSnapshotBeforeUpdate(o.elementType===o.type?_:gi(o.type,_),S);T.__reactInternalSnapshotBeforeUpdate=O}break;case 3:Qe&&Ee(o.stateNode.containerInfo);break;case 5:case 6:case 4:case 17:break;default:throw Error(l(163))}}catch(V){Hn(o,o.return,V)}if(a=o.sibling,a!==null){a.return=o.return,Ie=a;break}Ie=o.return}return d=Cm,Cm=!1,d}function Wr(o,a,d){var _=a.updateQueue;if(_=_!==null?_.lastEffect:null,_!==null){var S=_=_.next;do{if((S.tag&o)===o){var T=S.destroy;S.destroy=void 0,T!==void 0&&Th(a,d,T)}S=S.next}while(S!==_)}}function ta(o,a){if(a=a.updateQueue,a=a!==null?a.lastEffect:null,a!==null){var d=a=a.next;do{if((d.tag&o)===o){var _=d.create;d.destroy=_()}d=d.next}while(d!==a)}}function Ah(o){var a=o.ref;if(a!==null){var d=o.stateNode;switch(o.tag){case 5:o=le(d);break;default:o=d}typeof a=="function"?a(o):a.current=o}}function Rm(o,a,d){if(Pi&&typeof Pi.onCommitFiberUnmount=="function")try{Pi.onCommitFiberUnmount(hl,a)}catch{}switch(a.tag){case 0:case 11:case 14:case 15:if(o=a.updateQueue,o!==null&&(o=o.lastEffect,o!==null)){var _=o=o.next;do{var S=_,T=S.destroy;S=S.tag,T!==void 0&&(S&2||S&4)&&Th(a,d,T),_=_.next}while(_!==o)}break;case 1:if(Ol(a,d),o=a.stateNode,typeof o.componentWillUnmount=="function")try{o.props=a.memoizedProps,o.state=a.memoizedState,o.componentWillUnmount()}catch(O){Hn(a,d,O)}break;case 5:Ol(a,d);break;case 4:Qe?Um(o,a,d):ae&&ae&&(a=a.stateNode.containerInfo,d=mt(a),Mt(a,d))}}function Pm(o,a,d){for(var _=a;;)if(Rm(o,_,d),_.child===null||Qe&&_.tag===4){if(_===a)break;for(;_.sibling===null;){if(_.return===null||_.return===a)return;_=_.return}_.sibling.return=_.return,_=_.sibling}else _.child.return=_,_=_.child}function Im(o){var a=o.alternate;a!==null&&(o.alternate=null,Im(a)),o.child=null,o.deletions=null,o.sibling=null,o.tag===5&&(a=o.stateNode,a!==null&&Ne(a)),o.stateNode=null,o.return=null,o.dependencies=null,o.memoizedProps=null,o.memoizedState=null,o.pendingProps=null,o.stateNode=null,o.updateQueue=null}function Lm(o){return o.tag===5||o.tag===3||o.tag===4}function Dm(o){e:for(;;){for(;o.sibling===null;){if(o.return===null||Lm(o.return))return null;o=o.return}for(o.sibling.return=o.return,o=o.sibling;o.tag!==5&&o.tag!==6&&o.tag!==18;){if(o.flags&2||o.child===null||o.tag===4)continue e;o.child.return=o,o=o.child}if(!(o.flags&2))return o.stateNode}}function Nm(o){if(Qe){e:{for(var a=o.return;a!==null;){if(Lm(a))break e;a=a.return}throw Error(l(160))}var d=a;switch(d.tag){case 5:a=d.stateNode,d.flags&32&&(lt(a),d.flags&=-33),d=Dm(o),Ch(o,d,a);break;case 3:case 4:a=d.stateNode.containerInfo,d=Dm(o),bh(o,d,a);break;default:throw Error(l(161))}}}function bh(o,a,d){var _=o.tag;if(_===5||_===6)o=o.stateNode,a?at(d,o,a):Me(d,o);else if(_!==4&&(o=o.child,o!==null))for(bh(o,a,d),o=o.sibling;o!==null;)bh(o,a,d),o=o.sibling}function Ch(o,a,d){var _=o.tag;if(_===5||_===6)o=o.stateNode,a?Fe(d,o,a):tt(d,o);else if(_!==4&&(o=o.child,o!==null))for(Ch(o,a,d),o=o.sibling;o!==null;)Ch(o,a,d),o=o.sibling}function Um(o,a,d){for(var _=a,S=!1,T,O;;){if(!S){S=_.return;e:for(;;){if(S===null)throw Error(l(160));switch(T=S.stateNode,S.tag){case 5:O=!1;break e;case 3:T=T.containerInfo,O=!0;break e;case 4:T=T.containerInfo,O=!0;break e}S=S.return}S=!0}if(_.tag===5||_.tag===6)Pm(o,_,d),O?Rt(T,_.stateNode):vt(T,_.stateNode);else if(_.tag===18)O?He(T,_.stateNode):Pe(T,_.stateNode);else if(_.tag===4){if(_.child!==null){T=_.stateNode.containerInfo,O=!0,_.child.return=_,_=_.child;continue}}else if(Rm(o,_,d),_.child!==null){_.child.return=_,_=_.child;continue}if(_===a)break;for(;_.sibling===null;){if(_.return===null||_.return===a)return;_=_.return,_.tag===4&&(S=!1)}_.sibling.return=_.return,_=_.sibling}}function Rh(o,a){if(Qe){switch(a.tag){case 0:case 11:case 14:case 15:Wr(3,a,a.return),ta(3,a),Wr(5,a,a.return);return;case 1:return;case 5:var d=a.stateNode;if(d!=null){var _=a.memoizedProps;o=o!==null?o.memoizedProps:_;var S=a.type,T=a.updateQueue;a.updateQueue=null,T!==null&&Ze(d,T,S,o,_,a)}return;case 6:if(a.stateNode===null)throw Error(l(162));d=a.memoizedProps,Ve(a.stateNode,o!==null?o.memoizedProps:d,d);return;case 3:pe&&o!==null&&o.memoizedState.isDehydrated&&$(a.stateNode.containerInfo);return;case 12:return;case 13:Fl(a);return;case 19:Fl(a);return;case 17:return}throw Error(l(163))}switch(a.tag){case 0:case 11:case 14:case 15:Wr(3,a,a.return),ta(3,a),Wr(5,a,a.return);return;case 12:return;case 13:Fl(a);return;case 19:Fl(a);return;case 3:pe&&o!==null&&o.memoizedState.isDehydrated&&$(a.stateNode.containerInfo);break;case 22:case 23:return}e:if(ae){switch(a.tag){case 1:case 5:case 6:break e;case 3:case 4:a=a.stateNode,Mt(a.containerInfo,a.pendingChildren);break e}throw Error(l(163))}}function Fl(o){var a=o.updateQueue;if(a!==null){o.updateQueue=null;var d=o.stateNode;d===null&&(d=o.stateNode=new yx),a.forEach(function(_){var S=Px.bind(null,o,_);d.has(_)||(d.add(_),_.then(S,S))})}}function Sx(o,a){for(Ie=a;Ie!==null;){a=Ie;var d=a.deletions;if(d!==null)for(var _=0;_<d.length;_++){var S=d[_];try{var T=o;Qe?Um(T,S,a):Pm(T,S,a);var O=S.alternate;O!==null&&(O.return=null),S.return=null}catch(We){Hn(S,a,We)}}if(d=a.child,a.subtreeFlags&12854&&d!==null)d.return=a,Ie=d;else for(;Ie!==null;){a=Ie;try{var V=a.flags;if(V&32&&Qe&&lt(a.stateNode),V&512){var oe=a.alternate;if(oe!==null){var Se=oe.ref;Se!==null&&(typeof Se=="function"?Se(null):Se.current=null)}}if(V&8192)switch(a.tag){case 13:if(a.memoizedState!==null){var ze=a.alternate;(ze===null||ze.memoizedState===null)&&(Oh=un())}break;case 22:var ut=a.memoizedState!==null,je=a.alternate,Nt=je!==null&&je.memoizedState!==null;if(d=a,Qe){e:if(_=d,S=ut,T=null,Qe)for(var Ye=_;;){if(Ye.tag===5){if(T===null){T=Ye;var Mn=Ye.stateNode;S?C(Mn):K(Ye.stateNode,Ye.memoizedProps)}}else if(Ye.tag===6){if(T===null){var ci=Ye.stateNode;S?X(ci):ge(ci,Ye.memoizedProps)}}else if((Ye.tag!==22&&Ye.tag!==23||Ye.memoizedState===null||Ye===_)&&Ye.child!==null){Ye.child.return=Ye,Ye=Ye.child;continue}if(Ye===_)break;for(;Ye.sibling===null;){if(Ye.return===null||Ye.return===_)break e;T===Ye&&(T=null),Ye=Ye.return}T===Ye&&(T=null),Ye.sibling.return=Ye.return,Ye=Ye.sibling}}if(ut&&!Nt&&d.mode&1){Ie=d;for(var Q=d.child;Q!==null;){for(d=Ie=Q;Ie!==null;){_=Ie;var G=_.child;switch(_.tag){case 0:case 11:case 14:case 15:Wr(4,_,_.return);break;case 1:Ol(_,_.return);var re=_.stateNode;if(typeof re.componentWillUnmount=="function"){var De=_.return;try{re.props=_.memoizedProps,re.state=_.memoizedState,re.componentWillUnmount()}catch(We){Hn(_,De,We)}}break;case 5:Ol(_,_.return);break;case 22:if(_.memoizedState!==null){zm(d);continue}}G!==null?(G.return=_,Ie=G):zm(d)}Q=Q.sibling}}}switch(V&4102){case 2:Nm(a),a.flags&=-3;break;case 6:Nm(a),a.flags&=-3,Rh(a.alternate,a);break;case 4096:a.flags&=-4097;break;case 4100:a.flags&=-4097,Rh(a.alternate,a);break;case 4:Rh(a.alternate,a)}}catch(We){Hn(a,a.return,We)}if(d=a.sibling,d!==null){d.return=a.return,Ie=d;break}Ie=a.return}}}function Mx(o,a,d){Ie=o,Om(o)}function Om(o,a,d){for(var _=(o.mode&1)!==0;Ie!==null;){var S=Ie,T=S.child;if(S.tag===22&&_){var O=S.memoizedState!==null||Ul;if(!O){var V=S.alternate,oe=V!==null&&V.memoizedState!==null||Gr;V=Ul;var Se=Gr;if(Ul=O,(Gr=oe)&&!Se)for(Ie=S;Ie!==null;)O=Ie,oe=O.child,O.tag===22&&O.memoizedState!==null?Bm(S):oe!==null?(oe.return=O,Ie=oe):Bm(S);for(;T!==null;)Ie=T,Om(T),T=T.sibling;Ie=S,Ul=V,Gr=Se}Fm(o)}else S.subtreeFlags&8772&&T!==null?(T.return=S,Ie=T):Fm(o)}}function Fm(o){for(;Ie!==null;){var a=Ie;if(a.flags&8772){var d=a.alternate;try{if(a.flags&8772)switch(a.tag){case 0:case 11:case 15:Gr||ta(5,a);break;case 1:var _=a.stateNode;if(a.flags&4&&!Gr)if(d===null)_.componentDidMount();else{var S=a.elementType===a.type?d.memoizedProps:gi(a.type,d.memoizedProps);_.componentDidUpdate(S,d.memoizedState,_.__reactInternalSnapshotBeforeUpdate)}var T=a.updateQueue;T!==null&&Ip(a,T,_);break;case 3:var O=a.updateQueue;if(O!==null){if(d=null,a.child!==null)switch(a.child.tag){case 5:d=le(a.child.stateNode);break;case 1:d=a.child.stateNode}Ip(a,O,d)}break;case 5:var V=a.stateNode;d===null&&a.flags&4&&pt(V,a.type,a.memoizedProps,a);break;case 6:break;case 4:break;case 12:break;case 13:if(pe&&a.memoizedState===null){var oe=a.alternate;if(oe!==null){var Se=oe.memoizedState;if(Se!==null){var ze=Se.dehydrated;ze!==null&&ee(ze)}}}break;case 19:case 17:case 21:case 22:case 23:break;default:throw Error(l(163))}Gr||a.flags&512&&Ah(a)}catch(ut){Hn(a,a.return,ut)}}if(a===o){Ie=null;break}if(d=a.sibling,d!==null){d.return=a.return,Ie=d;break}Ie=a.return}}function zm(o){for(;Ie!==null;){var a=Ie;if(a===o){Ie=null;break}var d=a.sibling;if(d!==null){d.return=a.return,Ie=d;break}Ie=a.return}}function Bm(o){for(;Ie!==null;){var a=Ie;try{switch(a.tag){case 0:case 11:case 15:var d=a.return;try{ta(4,a)}catch(oe){Hn(a,d,oe)}break;case 1:var _=a.stateNode;if(typeof _.componentDidMount=="function"){var S=a.return;try{_.componentDidMount()}catch(oe){Hn(a,S,oe)}}var T=a.return;try{Ah(a)}catch(oe){Hn(a,T,oe)}break;case 5:var O=a.return;try{Ah(a)}catch(oe){Hn(a,O,oe)}}}catch(oe){Hn(a,a.return,oe)}if(a===o){Ie=null;break}var V=a.sibling;if(V!==null){V.return=a.return,Ie=V;break}Ie=a.return}}var zl=0,Bl=1,kl=2,Hl=3,Vl=4;if(typeof Symbol=="function"&&Symbol.for){var na=Symbol.for;zl=na("selector.component"),Bl=na("selector.has_pseudo_class"),kl=na("selector.role"),Hl=na("selector.test_id"),Vl=na("selector.text")}function Ph(o){var a=he(o);if(a!=null){if(typeof a.memoizedProps["data-testname"]!="string")throw Error(l(364));return a}if(o=Z(o),o===null)throw Error(l(362));return o.stateNode.current}function Ih(o,a){switch(a.$$typeof){case zl:if(o.type===a.value)return!0;break;case Bl:e:{a=a.value,o=[o,0];for(var d=0;d<o.length;){var _=o[d++],S=o[d++],T=a[S];if(_.tag!==5||!de(_)){for(;T!=null&&Ih(_,T);)S++,T=a[S];if(S===a.length){a=!0;break e}else for(_=_.child;_!==null;)o.push(_,S),_=_.sibling}}a=!1}return a;case kl:if(o.tag===5&&Xe(o.stateNode,a.value))return!0;break;case Vl:if((o.tag===5||o.tag===6)&&(o=ve(o),o!==null&&0<=o.indexOf(a.value)))return!0;break;case Hl:if(o.tag===5&&(o=o.memoizedProps["data-testname"],typeof o=="string"&&o.toLowerCase()===a.value.toLowerCase()))return!0;break;default:throw Error(l(365))}return!1}function Lh(o){switch(o.$$typeof){case zl:return"<"+(L(o.value)||"Unknown")+">";case Bl:return":has("+(Lh(o)||"")+")";case kl:return'[role="'+o.value+'"]';case Vl:return'"'+o.value+'"';case Hl:return'[data-testname="'+o.value+'"]';default:throw Error(l(365))}}function km(o,a){var d=[];o=[o,0];for(var _=0;_<o.length;){var S=o[_++],T=o[_++],O=a[T];if(S.tag!==5||!de(S)){for(;O!=null&&Ih(S,O);)T++,O=a[T];if(T===a.length)d.push(S);else for(S=S.child;S!==null;)o.push(S,T),S=S.sibling}}return d}function Dh(o,a){if(!P)throw Error(l(363));o=Ph(o),o=km(o,a),a=[],o=Array.from(o);for(var d=0;d<o.length;){var _=o[d++];if(_.tag===5)de(_)||a.push(_.stateNode);else for(_=_.child;_!==null;)o.push(_),_=_.sibling}return a}var wx=Math.ceil,Gl=c.ReactCurrentDispatcher,Nh=c.ReactCurrentOwner,jt=c.ReactCurrentBatchConfig,xt=0,en=null,tn=null,gn=0,jn=0,Xs=Je(0),an=0,ia=null,Ys=0,Wl=0,Uh=0,ra=null,Bn=null,Oh=0,Fh=1/0;function qs(){Fh=un()+500}var Xl=!1,zh=null,_r=null,Yl=!1,vr=null,ql=0,sa=0,Bh=null,Zl=-1,jl=0;function Ln(){return xt&6?un():Zl!==-1?Zl:Zl=un()}function yr(o){return o.mode&1?xt&2&&gn!==0?gn&-gn:sx.transition!==null?(jl===0&&(o=ll,ll<<=1,!(ll&4194240)&&(ll=64),jl=o),jl):(o=Et,o!==0?o:me()):1}function ai(o,a,d){if(50<sa)throw sa=0,Bh=null,Error(l(185));var _=Jl(o,a);return _===null?null:(Vo(_,a,d),(!(xt&2)||_!==en)&&(_===en&&(!(xt&2)&&(Wl|=a),an===4&&xr(_,gn)),kn(_,d),a===1&&xt===0&&!(o.mode&1)&&(qs(),fl&&Li())),_)}function Jl(o,a){o.lanes|=a;var d=o.alternate;for(d!==null&&(d.lanes|=a),d=o,o=o.return;o!==null;)o.childLanes|=a,d=o.alternate,d!==null&&(d.childLanes|=a),d=o,o=o.return;return d.tag===3?d.stateNode:null}function kn(o,a){var d=o.callbackNode;Jy(o,a);var _=ul(o,o===en?gn:0);if(_===0)d!==null&&Ap(d),o.callbackNode=null,o.callbackPriority=0;else if(a=_&-_,o.callbackPriority!==a){if(d!=null&&Ap(d),a===1)o.tag===0?rx(Vm.bind(null,o)):bp(Vm.bind(null,o)),qe?F(function(){xt===0&&Li()}):qu(Zu,Li),d=null;else{switch(Tp(_)){case 1:d=Zu;break;case 4:d=ex;break;case 16:d=ju;break;case 536870912:d=tx;break;default:d=ju}d=Km(d,Hm.bind(null,o))}o.callbackPriority=a,o.callbackNode=d}}function Hm(o,a){if(Zl=-1,jl=0,xt&6)throw Error(l(327));var d=o.callbackNode;if(qr()&&o.callbackNode!==d)return null;var _=ul(o,o===en?gn:0);if(_===0)return null;if(_&30||_&o.expiredLanes||a)a=Kl(o,_);else{a=_;var S=xt;xt|=2;var T=Xm();(en!==o||gn!==a)&&(qs(),Xr(o,a));do try{Ax();break}catch(V){Wm(o,V)}while(!0);Qu(),Gl.current=T,xt=S,tn!==null?a=0:(en=null,gn=0,a=an)}if(a!==0){if(a===2&&(S=Wu(o),S!==0&&(_=S,a=kh(o,S))),a===1)throw d=ia,Xr(o,0),xr(o,_),kn(o,un()),d;if(a===6)xr(o,_);else{if(S=o.current.alternate,!(_&30)&&!Ex(S)&&(a=Kl(o,_),a===2&&(T=Wu(o),T!==0&&(_=T,a=kh(o,T))),a===1))throw d=ia,Xr(o,0),xr(o,_),kn(o,un()),d;switch(o.finishedWork=S,o.finishedLanes=_,a){case 0:case 1:throw Error(l(345));case 2:Yr(o,Bn);break;case 3:if(xr(o,_),(_&130023424)===_&&(a=Oh+500-un(),10<a)){if(ul(o,0)!==0)break;if(S=o.suspendedLanes,(S&_)!==_){Ln(),o.pingedLanes|=o.suspendedLanes&S;break}o.timeoutHandle=ye(Yr.bind(null,o,Bn),a);break}Yr(o,Bn);break;case 4:if(xr(o,_),(_&4194240)===_)break;for(a=o.eventTimes,S=-1;0<_;){var O=31-mi(_);T=1<<O,O=a[O],O>S&&(S=O),_&=~T}if(_=S,_=un()-_,_=(120>_?120:480>_?480:1080>_?1080:1920>_?1920:3e3>_?3e3:4320>_?4320:1960*wx(_/1960))-_,10<_){o.timeoutHandle=ye(Yr.bind(null,o,Bn),_);break}Yr(o,Bn);break;case 5:Yr(o,Bn);break;default:throw Error(l(329))}}}return kn(o,un()),o.callbackNode===d?Hm.bind(null,o):null}function kh(o,a){var d=ra;return o.current.memoizedState.isDehydrated&&(Xr(o,a).flags|=256),o=Kl(o,a),o!==2&&(a=Bn,Bn=d,a!==null&&Hh(a)),o}function Hh(o){Bn===null?Bn=o:Bn.push.apply(Bn,o)}function Ex(o){for(var a=o;;){if(a.flags&16384){var d=a.updateQueue;if(d!==null&&(d=d.stores,d!==null))for(var _=0;_<d.length;_++){var S=d[_],T=S.getSnapshot;S=S.value;try{if(!Ii(T(),S))return!1}catch{return!1}}}if(d=a.child,a.subtreeFlags&16384&&d!==null)d.return=a,a=d;else{if(a===o)break;for(;a.sibling===null;){if(a.return===null||a.return===o)return!0;a=a.return}a.sibling.return=a.return,a=a.sibling}}return!0}function xr(o,a){for(a&=~Uh,a&=~Wl,o.suspendedLanes|=a,o.pingedLanes&=~a,o=o.expirationTimes;0<a;){var d=31-mi(a),_=1<<d;o[d]=-1,a&=~_}}function Vm(o){if(xt&6)throw Error(l(327));qr();var a=ul(o,0);if(!(a&1))return kn(o,un()),null;var d=Kl(o,a);if(o.tag!==0&&d===2){var _=Wu(o);_!==0&&(a=_,d=kh(o,_))}if(d===1)throw d=ia,Xr(o,0),xr(o,a),kn(o,un()),d;if(d===6)throw Error(l(345));return o.finishedWork=o.current.alternate,o.finishedLanes=a,Yr(o,Bn),kn(o,un()),null}function Gm(o){vr!==null&&vr.tag===0&&!(xt&6)&&qr();var a=xt;xt|=1;var d=jt.transition,_=Et;try{if(jt.transition=null,Et=1,o)return o()}finally{Et=_,jt.transition=d,xt=a,!(xt&6)&&Li()}}function Vh(){jn=Xs.current,Ct(Xs)}function Xr(o,a){o.finishedWork=null,o.finishedLanes=0;var d=o.timeoutHandle;if(d!==it&&(o.timeoutHandle=it,nt(d)),tn!==null)for(d=tn.return;d!==null;){var _=d;switch(sh(_),_.tag){case 1:_=_.type.childContextTypes,_!=null&&pr();break;case 3:Gs(),Ct($t),Ct(on),fh();break;case 5:uh(_);break;case 4:Gs();break;case 13:Ct(Gt);break;case 19:Ct(Gt);break;case 10:$u(_.type._context);break;case 22:case 23:Vh()}d=d.return}if(en=o,tn=o=Sr(o.current,null),gn=jn=a,an=0,ia=null,Uh=Wl=Ys=0,Bn=ra=null,Di!==null){for(a=0;a<Di.length;a++)if(d=Di[a],_=d.interleaved,_!==null){d.interleaved=null;var S=_.next,T=d.pending;if(T!==null){var O=T.next;T.next=S,_.next=O}d.pending=_}Di=null}return o}function Wm(o,a){do{var d=tn;try{if(Qu(),wl.current=Rl,El){for(var _=Yt.memoizedState;_!==null;){var S=_.queue;S!==null&&(S.pending=null),_=_.next}El=!1}if(Ws=0,hn=yn=Yt=null,Zo=!1,jo=0,Nh.current=null,d===null||d.return===null){an=1,ia=a,tn=null;break}e:{var T=o,O=d.return,V=d,oe=a;if(a=gn,V.flags|=32768,oe!==null&&typeof oe=="object"&&typeof oe.then=="function"){var Se=oe,ze=V,ut=ze.tag;if(!(ze.mode&1)&&(ut===0||ut===11||ut===15)){var je=ze.alternate;je?(ze.updateQueue=je.updateQueue,ze.memoizedState=je.memoizedState,ze.lanes=je.lanes):(ze.updateQueue=null,ze.memoizedState=null)}var Nt=hm(O);if(Nt!==null){Nt.flags&=-257,fm(Nt,O,V,T,a),Nt.mode&1&&um(T,Se,a),a=Nt,oe=Se;var Ye=a.updateQueue;if(Ye===null){var Mn=new Set;Mn.add(oe),a.updateQueue=Mn}else Ye.add(oe);break e}else{if(!(a&1)){um(T,Se,a),Gh();break e}oe=Error(l(426))}}else if(Bt&&V.mode&1){var ci=hm(O);if(ci!==null){!(ci.flags&65536)&&(ci.flags|=256),fm(ci,O,V,T,a),lh(oe);break e}}T=oe,an!==4&&(an=2),ra===null?ra=[T]:ra.push(T),oe=yh(oe,V),V=O;do{switch(V.tag){case 3:V.flags|=65536,a&=-a,V.lanes|=a;var Q=lm(V,oe,a);Pp(V,Q);break e;case 1:T=oe;var G=V.type,re=V.stateNode;if(!(V.flags&128)&&(typeof G.getDerivedStateFromError=="function"||re!==null&&typeof re.componentDidCatch=="function"&&(_r===null||!_r.has(re)))){V.flags|=65536,a&=-a,V.lanes|=a;var De=cm(V,T,a);Pp(V,De);break e}}V=V.return}while(V!==null)}qm(d)}catch(We){a=We,tn===d&&d!==null&&(tn=d=d.return);continue}break}while(!0)}function Xm(){var o=Gl.current;return Gl.current=Rl,o===null?Rl:o}function Gh(){(an===0||an===3||an===2)&&(an=4),en===null||!(Ys&268435455)&&!(Wl&268435455)||xr(en,gn)}function Kl(o,a){var d=xt;xt|=2;var _=Xm();en===o&&gn===a||Xr(o,a);do try{Tx();break}catch(S){Wm(o,S)}while(!0);if(Qu(),xt=d,Gl.current=_,tn!==null)throw Error(l(261));return en=null,gn=0,an}function Tx(){for(;tn!==null;)Ym(tn)}function Ax(){for(;tn!==null&&!Qy();)Ym(tn)}function Ym(o){var a=Jm(o.alternate,o,jn);o.memoizedProps=o.pendingProps,a===null?qm(o):tn=a,Nh.current=null}function qm(o){var a=o;do{var d=a.alternate;if(o=a.return,a.flags&32768){if(d=vx(d,a),d!==null){d.flags&=32767,tn=d;return}if(o!==null)o.flags|=32768,o.subtreeFlags=0,o.deletions=null;else{an=6,tn=null;return}}else if(d=mx(d,a,jn),d!==null){tn=d;return}if(a=a.sibling,a!==null){tn=a;return}tn=a=o}while(a!==null);an===0&&(an=5)}function Yr(o,a){var d=Et,_=jt.transition;try{jt.transition=null,Et=1,bx(o,a,d)}finally{jt.transition=_,Et=d}return null}function bx(o,a,d){do qr();while(vr!==null);if(xt&6)throw Error(l(327));var _=o.finishedWork,S=o.finishedLanes;if(_===null)return null;if(o.finishedWork=null,o.finishedLanes=0,_===o.current)throw Error(l(177));o.callbackNode=null,o.callbackPriority=0;var T=_.lanes|_.childLanes;if(Ky(o,T),o===en&&(tn=en=null,gn=0),!(_.subtreeFlags&2064)&&!(_.flags&2064)||Yl||(Yl=!0,Km(ju,function(){return qr(),null})),T=(_.flags&15990)!==0,_.subtreeFlags&15990||T){T=jt.transition,jt.transition=null;var O=Et;Et=1;var V=xt;xt|=4,Nh.current=null,xx(o,_),Sx(o,_),j(o.containerInfo),o.current=_,Mx(_),$y(),xt=V,Et=O,jt.transition=T}else o.current=_;if(Yl&&(Yl=!1,vr=o,ql=S),T=o.pendingLanes,T===0&&(_r=null),nx(_.stateNode),kn(o,un()),a!==null)for(d=o.onRecoverableError,_=0;_<a.length;_++)d(a[_]);if(Xl)throw Xl=!1,o=zh,zh=null,o;return ql&1&&o.tag!==0&&qr(),T=o.pendingLanes,T&1?o===Bh?sa++:(sa=0,Bh=o):sa=0,Li(),null}function qr(){if(vr!==null){var o=Tp(ql),a=jt.transition,d=Et;try{if(jt.transition=null,Et=16>o?16:o,vr===null)var _=!1;else{if(o=vr,vr=null,ql=0,xt&6)throw Error(l(331));var S=xt;for(xt|=4,Ie=o.current;Ie!==null;){var T=Ie,O=T.child;if(Ie.flags&16){var V=T.deletions;if(V!==null){for(var oe=0;oe<V.length;oe++){var Se=V[oe];for(Ie=Se;Ie!==null;){var ze=Ie;switch(ze.tag){case 0:case 11:case 15:Wr(8,ze,T)}var ut=ze.child;if(ut!==null)ut.return=ze,Ie=ut;else for(;Ie!==null;){ze=Ie;var je=ze.sibling,Nt=ze.return;if(Im(ze),ze===Se){Ie=null;break}if(je!==null){je.return=Nt,Ie=je;break}Ie=Nt}}}var Ye=T.alternate;if(Ye!==null){var Mn=Ye.child;if(Mn!==null){Ye.child=null;do{var ci=Mn.sibling;Mn.sibling=null,Mn=ci}while(Mn!==null)}}Ie=T}}if(T.subtreeFlags&2064&&O!==null)O.return=T,Ie=O;else e:for(;Ie!==null;){if(T=Ie,T.flags&2048)switch(T.tag){case 0:case 11:case 15:Wr(9,T,T.return)}var Q=T.sibling;if(Q!==null){Q.return=T.return,Ie=Q;break e}Ie=T.return}}var G=o.current;for(Ie=G;Ie!==null;){O=Ie;var re=O.child;if(O.subtreeFlags&2064&&re!==null)re.return=O,Ie=re;else e:for(O=G;Ie!==null;){if(V=Ie,V.flags&2048)try{switch(V.tag){case 0:case 11:case 15:ta(9,V)}}catch(We){Hn(V,V.return,We)}if(V===O){Ie=null;break e}var De=V.sibling;if(De!==null){De.return=V.return,Ie=De;break e}Ie=V.return}}if(xt=S,Li(),Pi&&typeof Pi.onPostCommitFiberRoot=="function")try{Pi.onPostCommitFiberRoot(hl,o)}catch{}_=!0}return _}finally{Et=d,jt.transition=a}}return!1}function Zm(o,a,d){a=yh(d,a),a=lm(o,a,1),gr(o,a),a=Ln(),o=Jl(o,1),o!==null&&(Vo(o,1,a),kn(o,a))}function Hn(o,a,d){if(o.tag===3)Zm(o,o,d);else for(;a!==null;){if(a.tag===3){Zm(a,o,d);break}else if(a.tag===1){var _=a.stateNode;if(typeof a.type.getDerivedStateFromError=="function"||typeof _.componentDidCatch=="function"&&(_r===null||!_r.has(_))){o=yh(d,o),o=cm(a,o,1),gr(a,o),o=Ln(),a=Jl(a,1),a!==null&&(Vo(a,1,o),kn(a,o));break}}a=a.return}}function Cx(o,a,d){var _=o.pingCache;_!==null&&_.delete(a),a=Ln(),o.pingedLanes|=o.suspendedLanes&d,en===o&&(gn&d)===d&&(an===4||an===3&&(gn&130023424)===gn&&500>un()-Oh?Xr(o,0):Uh|=d),kn(o,a)}function jm(o,a){a===0&&(o.mode&1?(a=cl,cl<<=1,!(cl&130023424)&&(cl=4194304)):a=1);var d=Ln();o=Jl(o,a),o!==null&&(Vo(o,a,d),kn(o,d))}function Rx(o){var a=o.memoizedState,d=0;a!==null&&(d=a.retryLane),jm(o,d)}function Px(o,a){var d=0;switch(o.tag){case 13:var _=o.stateNode,S=o.memoizedState;S!==null&&(d=S.retryLane);break;case 19:_=o.stateNode;break;default:throw Error(l(314))}_!==null&&_.delete(a),jm(o,d)}var Jm;Jm=function(o,a,d){if(o!==null)if(o.memoizedProps!==a.pendingProps||$t.current)Zn=!0;else{if(!(o.lanes&d)&&!(a.flags&128))return Zn=!1,_x(o,a,d);Zn=!!(o.flags&131072)}else Zn=!1,Bt&&a.flags&1048576&&Op(a,xl,a.index);switch(a.lanes=0,a.tag){case 2:var _=a.type;o!==null&&(o.alternate=null,a.alternate=null,a.flags|=2),o=a.pendingProps;var S=Ht(a,on.current);Fs(a,d),S=ph(null,a,_,o,S,d);var T=mh();return a.flags|=1,typeof S=="object"&&S!==null&&typeof S.render=="function"&&S.$$typeof===void 0?(a.tag=1,a.memoizedState=null,a.updateQueue=null,Vt(_)?(T=!0,Us(a)):T=!1,a.memoizedState=S.state!==null&&S.state!==void 0?S.state:null,th(a),S.updater=vl,a.stateNode=S,S._reactInternals=a,ih(a,_,o,d),a=Mh(null,a,_,!0,T,d)):(a.tag=0,Bt&&T&&rh(a),In(null,a,S,d),a=a.child),a;case 16:_=a.elementType;e:{switch(o!==null&&(o.alternate=null,a.alternate=null,a.flags|=2),o=a.pendingProps,S=_._init,_=S(_._payload),a.type=_,S=a.tag=Lx(_),o=gi(_,o),S){case 0:a=Sh(null,a,_,o,d);break e;case 1:a=xm(null,a,_,o,d);break e;case 11:a=mm(null,a,_,o,d);break e;case 14:a=gm(null,a,_,gi(_.type,o),d);break e}throw Error(l(306,_,""))}return a;case 0:return _=a.type,S=a.pendingProps,S=a.elementType===_?S:gi(_,S),Sh(o,a,_,S,d);case 1:return _=a.type,S=a.pendingProps,S=a.elementType===_?S:gi(_,S),xm(o,a,_,S,d);case 3:e:{if(Sm(a),o===null)throw Error(l(387));_=a.pendingProps,T=a.memoizedState,S=T.element,Rp(o,a),_l(a,_,null,d);var O=a.memoizedState;if(_=O.element,pe&&T.isDehydrated)if(T={element:_,isDehydrated:!1,cache:O.cache,transitions:O.transitions},a.updateQueue.baseState=T,a.memoizedState=T,a.flags&256){S=Error(l(423)),a=Mm(o,a,_,d,S);break e}else if(_!==S){S=Error(l(424)),a=Mm(o,a,_,d,S);break e}else for(pe&&(qn=Hu(a.stateNode.containerInfo),Yn=a,Bt=!0,_i=null,Go=!1),d=Vp(a,null,_,d),a.child=d;d;)d.flags=d.flags&-3|4096,d=d.sibling;else{if(ks(),_===S){a=Ki(o,a,d);break e}In(o,a,_,d)}a=a.child}return a;case 5:return Gp(a),o===null&&ah(a),_=a.type,S=a.pendingProps,T=o!==null?o.memoizedProps:null,O=S.children,_e(_,S)?O=null:T!==null&&_e(_,T)&&(a.flags|=32),ym(o,a),In(o,a,O,d),a.child;case 6:return o===null&&ah(a),null;case 13:return wm(o,a,d);case 4:return ch(a,a.stateNode.containerInfo),_=a.pendingProps,o===null?a.child=Hs(a,null,_,d):In(o,a,_,d),a.child;case 11:return _=a.type,S=a.pendingProps,S=a.elementType===_?S:gi(_,S),mm(o,a,_,S,d);case 7:return In(o,a,a.pendingProps,d),a.child;case 8:return In(o,a,a.pendingProps.children,d),a.child;case 12:return In(o,a,a.pendingProps.children,d),a.child;case 10:e:{if(_=a.type._context,S=a.pendingProps,T=a.memoizedProps,O=S.value,Cp(a,_,O),T!==null)if(Ii(T.value,O)){if(T.children===S.children&&!$t.current){a=Ki(o,a,d);break e}}else for(T=a.child,T!==null&&(T.return=a);T!==null;){var V=T.dependencies;if(V!==null){O=T.child;for(var oe=V.firstContext;oe!==null;){if(oe.context===_){if(T.tag===1){oe=qi(-1,d&-d),oe.tag=2;var Se=T.updateQueue;if(Se!==null){Se=Se.shared;var ze=Se.pending;ze===null?oe.next=oe:(oe.next=ze.next,ze.next=oe),Se.pending=oe}}T.lanes|=d,oe=T.alternate,oe!==null&&(oe.lanes|=d),eh(T.return,d,a),V.lanes|=d;break}oe=oe.next}}else if(T.tag===10)O=T.type===a.type?null:T.child;else if(T.tag===18){if(O=T.return,O===null)throw Error(l(341));O.lanes|=d,V=O.alternate,V!==null&&(V.lanes|=d),eh(O,d,a),O=T.sibling}else O=T.child;if(O!==null)O.return=T;else for(O=T;O!==null;){if(O===a){O=null;break}if(T=O.sibling,T!==null){T.return=O.return,O=T;break}O=O.return}T=O}In(o,a,S.children,d),a=a.child}return a;case 9:return S=a.type,_=a.pendingProps.children,Fs(a,d),S=ni(S),_=_(S),a.flags|=1,In(o,a,_,d),a.child;case 14:return _=a.type,S=gi(_,a.pendingProps),S=gi(_.type,S),gm(o,a,_,S,d);case 15:return _m(o,a,a.type,a.pendingProps,d);case 17:return _=a.type,S=a.pendingProps,S=a.elementType===_?S:gi(_,S),o!==null&&(o.alternate=null,a.alternate=null,a.flags|=2),a.tag=1,Vt(_)?(o=!0,Us(a)):o=!1,Fs(a,d),Np(a,_,S),ih(a,_,S,d),Mh(null,a,_,!0,o,d);case 19:return bm(o,a,d);case 22:return vm(o,a,d)}throw Error(l(156,a.tag))};function Km(o,a){return qu(o,a)}function Ix(o,a,d,_){this.tag=o,this.key=d,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=a,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=_,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function li(o,a,d,_){return new Ix(o,a,d,_)}function Wh(o){return o=o.prototype,!(!o||!o.isReactComponent)}function Lx(o){if(typeof o=="function")return Wh(o)?1:0;if(o!=null){if(o=o.$$typeof,o===M)return 11;if(o===E)return 14}return 2}function Sr(o,a){var d=o.alternate;return d===null?(d=li(o.tag,a,o.key,o.mode),d.elementType=o.elementType,d.type=o.type,d.stateNode=o.stateNode,d.alternate=o,o.alternate=d):(d.pendingProps=a,d.type=o.type,d.flags=0,d.subtreeFlags=0,d.deletions=null),d.flags=o.flags&14680064,d.childLanes=o.childLanes,d.lanes=o.lanes,d.child=o.child,d.memoizedProps=o.memoizedProps,d.memoizedState=o.memoizedState,d.updateQueue=o.updateQueue,a=o.dependencies,d.dependencies=a===null?null:{lanes:a.lanes,firstContext:a.firstContext},d.sibling=o.sibling,d.index=o.index,d.ref=o.ref,d}function Ql(o,a,d,_,S,T){var O=2;if(_=o,typeof o=="function")Wh(o)&&(O=1);else if(typeof o=="string")O=5;else e:switch(o){case f:return Zr(d.children,S,T,a);case p:O=8,S|=8;break;case g:return o=li(12,d,a,S|2),o.elementType=g,o.lanes=T,o;case x:return o=li(13,d,a,S),o.elementType=x,o.lanes=T,o;case v:return o=li(19,d,a,S),o.elementType=v,o.lanes=T,o;case A:return $l(d,S,T,a);default:if(typeof o=="object"&&o!==null)switch(o.$$typeof){case m:O=10;break e;case y:O=9;break e;case M:O=11;break e;case E:O=14;break e;case w:O=16,_=null;break e}throw Error(l(130,o==null?o:typeof o,""))}return a=li(O,d,a,S),a.elementType=o,a.type=_,a.lanes=T,a}function Zr(o,a,d,_){return o=li(7,o,_,a),o.lanes=d,o}function $l(o,a,d,_){return o=li(22,o,_,a),o.elementType=A,o.lanes=d,o.stateNode={},o}function Xh(o,a,d){return o=li(6,o,null,a),o.lanes=d,o}function Yh(o,a,d){return a=li(4,o.children!==null?o.children:[],o.key,a),a.lanes=d,a.stateNode={containerInfo:o.containerInfo,pendingChildren:null,implementation:o.implementation},a}function Dx(o,a,d,_,S){this.tag=a,this.containerInfo=o,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=it,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=Xu(0),this.expirationTimes=Xu(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=Xu(0),this.identifierPrefix=_,this.onRecoverableError=S,pe&&(this.mutableSourceEagerHydrationData=null)}function Qm(o,a,d,_,S,T,O,V,oe){return o=new Dx(o,a,d,V,oe),a===1?(a=1,T===!0&&(a|=8)):a=0,T=li(3,null,null,a),o.current=T,T.stateNode=o,T.memoizedState={element:_,isDehydrated:d,cache:null,transitions:null},th(T),o}function $m(o){if(!o)return vn;o=o._reactInternals;e:{if(R(o)!==o||o.tag!==1)throw Error(l(170));var a=o;do{switch(a.tag){case 3:a=a.stateNode.context;break e;case 1:if(Vt(a.type)){a=a.stateNode.__reactInternalMemoizedMergedChildContext;break e}}a=a.return}while(a!==null);throw Error(l(171))}if(o.tag===1){var d=o.type;if(Vt(d))return Ns(o,d,a)}return a}function eg(o){var a=o._reactInternals;if(a===void 0)throw typeof o.render=="function"?Error(l(188)):(o=Object.keys(o).join(","),Error(l(268,o)));return o=Y(a),o===null?null:o.stateNode}function tg(o,a){if(o=o.memoizedState,o!==null&&o.dehydrated!==null){var d=o.retryLane;o.retryLane=d!==0&&d<a?d:a}}function qh(o,a){tg(o,a),(o=o.alternate)&&tg(o,a)}function Nx(o){return o=Y(o),o===null?null:o.stateNode}function Ux(){return null}return t.attemptContinuousHydration=function(o){if(o.tag===13){var a=Ln();ai(o,134217728,a),qh(o,134217728)}},t.attemptHydrationAtCurrentPriority=function(o){if(o.tag===13){var a=Ln(),d=yr(o);ai(o,d,a),qh(o,d)}},t.attemptSynchronousHydration=function(o){switch(o.tag){case 3:var a=o.stateNode;if(a.current.memoizedState.isDehydrated){var d=Ho(a.pendingLanes);d!==0&&(Yu(a,d|1),kn(a,un()),!(xt&6)&&(qs(),Li()))}break;case 13:var _=Ln();Gm(function(){return ai(o,1,_)}),qh(o,1)}},t.batchedUpdates=function(o,a){var d=xt;xt|=1;try{return o(a)}finally{xt=d,xt===0&&(qs(),fl&&Li())}},t.createComponentSelector=function(o){return{$$typeof:zl,value:o}},t.createContainer=function(o,a,d,_,S,T,O){return Qm(o,a,!1,null,d,_,S,T,O)},t.createHasPseudoClassSelector=function(o){return{$$typeof:Bl,value:o}},t.createHydrationContainer=function(o,a,d,_,S,T,O,V,oe){return o=Qm(d,_,!0,o,S,T,O,V,oe),o.context=$m(null),d=o.current,_=Ln(),S=yr(d),T=qi(_,S),T.callback=a??null,gr(d,T),o.current.lanes=S,Vo(o,S,_),kn(o,_),o},t.createPortal=function(o,a,d){var _=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:h,key:_==null?null:""+_,children:o,containerInfo:a,implementation:d}},t.createRoleSelector=function(o){return{$$typeof:kl,value:o}},t.createTestNameSelector=function(o){return{$$typeof:Hl,value:o}},t.createTextSelector=function(o){return{$$typeof:Vl,value:o}},t.deferredUpdates=function(o){var a=Et,d=jt.transition;try{return jt.transition=null,Et=16,o()}finally{Et=a,jt.transition=d}},t.discreteUpdates=function(o,a,d,_,S){var T=Et,O=jt.transition;try{return jt.transition=null,Et=1,o(a,d,_,S)}finally{Et=T,jt.transition=O,xt===0&&qs()}},t.findAllNodes=Dh,t.findBoundingRects=function(o,a){if(!P)throw Error(l(363));a=Dh(o,a),o=[];for(var d=0;d<a.length;d++)o.push(ue(a[d]));for(a=o.length-1;0<a;a--){d=o[a];for(var _=d.x,S=_+d.width,T=d.y,O=T+d.height,V=a-1;0<=V;V--)if(a!==V){var oe=o[V],Se=oe.x,ze=Se+oe.width,ut=oe.y,je=ut+oe.height;if(_>=Se&&T>=ut&&S<=ze&&O<=je){o.splice(a,1);break}else if(_!==Se||d.width!==oe.width||je<T||ut>O){if(!(T!==ut||d.height!==oe.height||ze<_||Se>S)){Se>_&&(oe.width+=Se-_,oe.x=_),ze<S&&(oe.width=S-Se),o.splice(a,1);break}}else{ut>T&&(oe.height+=ut-T,oe.y=T),je<O&&(oe.height=O-ut),o.splice(a,1);break}}}return o},t.findHostInstance=eg,t.findHostInstanceWithNoPortals=function(o){return o=z(o),o=o!==null?J(o):null,o===null?null:o.stateNode},t.findHostInstanceWithWarning=function(o){return eg(o)},t.flushControlled=function(o){var a=xt;xt|=1;var d=jt.transition,_=Et;try{jt.transition=null,Et=1,o()}finally{Et=_,jt.transition=d,xt=a,xt===0&&(qs(),Li())}},t.flushPassiveEffects=qr,t.flushSync=Gm,t.focusWithin=function(o,a){if(!P)throw Error(l(363));for(o=Ph(o),a=km(o,a),a=Array.from(a),o=0;o<a.length;){var d=a[o++];if(!de(d)){if(d.tag===5&&Ae(d.stateNode))return!0;for(d=d.child;d!==null;)a.push(d),d=d.sibling}}return!1},t.getCurrentUpdatePriority=function(){return Et},t.getFindAllNodesFailureDescription=function(o,a){if(!P)throw Error(l(363));var d=0,_=[];o=[Ph(o),0];for(var S=0;S<o.length;){var T=o[S++],O=o[S++],V=a[O];if((T.tag!==5||!de(T))&&(Ih(T,V)&&(_.push(Lh(V)),O++,O>d&&(d=O)),O<a.length))for(T=T.child;T!==null;)o.push(T,O),T=T.sibling}if(d<a.length){for(o=[];d<a.length;d++)o.push(Lh(a[d]));return`findAllNodes was able to match part of the selector:
  `+(_.join(" > ")+`

No matching component was found for:
  `)+o.join(" > ")}return null},t.getPublicRootInstance=function(o){if(o=o.current,!o.child)return null;switch(o.child.tag){case 5:return le(o.child.stateNode);default:return o.child.stateNode}},t.injectIntoDevTools=function(o){if(o={bundleType:o.bundleType,version:o.version,rendererPackageName:o.rendererPackageName,rendererConfig:o.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:c.ReactCurrentDispatcher,findHostInstanceByFiber:Nx,findFiberByHostInstance:o.findFiberByHostInstance||Ux,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.0.0-fc46dba67-20220329"},typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u")o=!1;else{var a=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(a.isDisabled||!a.supportsFiber)o=!0;else{try{hl=a.inject(o),Pi=a}catch{}o=!!a.checkDCE}}return o},t.isAlreadyRendering=function(){return!1},t.observeVisibleRects=function(o,a,d,_){if(!P)throw Error(l(363));o=Dh(o,a);var S=Te(o,d,_).disconnect;return{disconnect:function(){S()}}},t.registerMutableSourceForHydration=function(o,a){var d=a._getVersion;d=d(a._source),o.mutableSourceEagerHydrationData==null?o.mutableSourceEagerHydrationData=[a,d]:o.mutableSourceEagerHydrationData.push(a,d)},t.runWithPriority=function(o,a){var d=Et;try{return Et=o,a()}finally{Et=d}},t.shouldError=function(){return null},t.shouldSuspend=function(){return!1},t.updateContainer=function(o,a,d,_){var S=a.current,T=Ln(),O=yr(S);return d=$m(d),a.context===null?a.context=d:a.pendingContext=d,a=qi(T,O),a.payload={element:o},_=_===void 0?null:_,_!==null&&(a.callback=_),gr(S,a),o=ai(S,O,T),o!==null&&gl(o,S,O),O},t};My.exports=kb;var Hb=My.exports;const Vb=e_(Hb),Gb=r=>typeof r=="object"&&typeof r.then=="function",ms=[];function Ty(r,e,t=(n,i)=>n===i){if(r===e)return!0;if(!r||!e)return!1;const n=r.length;if(e.length!==n)return!1;for(let i=0;i<n;i++)if(!t(r[i],e[i]))return!1;return!0}function Ay(r,e=null,t=!1,n={}){e===null&&(e=[r]);for(const s of ms)if(Ty(e,s.keys,s.equal)){if(t)return;if(Object.prototype.hasOwnProperty.call(s,"error"))throw s.error;if(Object.prototype.hasOwnProperty.call(s,"response"))return n.lifespan&&n.lifespan>0&&(s.timeout&&clearTimeout(s.timeout),s.timeout=setTimeout(s.remove,n.lifespan)),s.response;if(!t)throw s.promise}const i={keys:e,equal:n.equal,remove:()=>{const s=ms.indexOf(i);s!==-1&&ms.splice(s,1)},promise:(Gb(r)?r:r(...e)).then(s=>{i.response=s,n.lifespan&&n.lifespan>0&&(i.timeout=setTimeout(i.remove,n.lifespan))}).catch(s=>i.error=s)};if(ms.push(i),!t)throw i.promise}const Wb=(r,e,t)=>Ay(r,e,!1,t),Xb=(r,e,t)=>void Ay(r,e,!0,t),Yb=r=>{if(r===void 0||r.length===0)ms.splice(0,ms.length);else{const e=ms.find(t=>Ty(r,t.keys,t.equal));e&&e.remove()}},wp={},qb=r=>void Object.assign(wp,r);function Zb(r,e){function t(f,{args:p=[],attach:g,...m},y){let M=`${f[0].toUpperCase()}${f.slice(1)}`,x;if(f==="primitive"){if(m.object===void 0)throw new Error("R3F: Primitives without 'object' are invalid!");const v=m.object;x=yo(v,{type:f,root:y,attach:g,primitive:!0})}else{const v=wp[M];if(!v)throw new Error(`R3F: ${M} is not part of the THREE namespace! Did you forget to extend? See: https://docs.pmnd.rs/react-three-fiber/api/objects#using-3rd-party-objects-declaratively`);if(!Array.isArray(p))throw new Error("R3F: The args prop must be an array!");x=yo(new v(...p),{type:f,root:y,attach:g,memoizedProps:{args:p}})}return x.__r3f.attach===void 0&&(x instanceof _t?x.__r3f.attach="geometry":x instanceof _n&&(x.__r3f.attach="material")),M!=="inject"&&Of(x,m),x}function n(f,p){let g=!1;if(p){var m,y;(m=p.__r3f)!=null&&m.attach?Uf(f,p,p.__r3f.attach):p.isObject3D&&f.isObject3D&&(f.add(p),g=!0),g||(y=f.__r3f)==null||y.objects.push(p),p.__r3f||yo(p,{}),p.__r3f.parent=f,Nd(p),xo(p)}}function i(f,p,g){let m=!1;if(p){var y,M;if((y=p.__r3f)!=null&&y.attach)Uf(f,p,p.__r3f.attach);else if(p.isObject3D&&f.isObject3D){p.parent=f,p.dispatchEvent({type:"added"}),f.dispatchEvent({type:"childadded",child:p});const x=f.children.filter(E=>E!==p),v=x.indexOf(g);f.children=[...x.slice(0,v),p,...x.slice(v)],m=!0}m||(M=f.__r3f)==null||M.objects.push(p),p.__r3f||yo(p,{}),p.__r3f.parent=f,Nd(p),xo(p)}}function s(f,p,g=!1){f&&[...f].forEach(m=>l(p,m,g))}function l(f,p,g){if(p){var m,y,M;if(p.__r3f&&(p.__r3f.parent=null),(m=f.__r3f)!=null&&m.objects&&(f.__r3f.objects=f.__r3f.objects.filter(A=>A!==p)),(y=p.__r3f)!=null&&y.attach)B0(f,p,p.__r3f.attach);else if(p.isObject3D&&f.isObject3D){var x;f.remove(p),(x=p.__r3f)!=null&&x.root&&iC(ru(p),p)}const E=(M=p.__r3f)==null?void 0:M.primitive,w=!E&&(g===void 0?p.dispose!==null:g);if(!E){var v;s((v=p.__r3f)==null?void 0:v.objects,p,w),s(p.children,p,w)}if(delete p.__r3f,w&&p.dispose&&p.type!=="Scene"){const A=()=>{try{p.dispose()}catch{}};typeof IS_REACT_ACT_ENVIRONMENT>"u"?Ld.unstable_scheduleCallback(Ld.unstable_IdlePriority,A):A()}xo(f)}}function c(f,p,g,m){var y;const M=(y=f.__r3f)==null?void 0:y.parent;if(!M)return;const x=t(p,g,f.__r3f.root);if(f.children){for(const v of f.children)v.__r3f&&n(x,v);f.children=f.children.filter(v=>!v.__r3f)}f.__r3f.objects.forEach(v=>n(x,v)),f.__r3f.objects=[],f.__r3f.autoRemovedBeforeAppend||l(M,f),x.parent&&(x.__r3f.autoRemovedBeforeAppend=!0),n(M,x),x.raycast&&x.__r3f.eventCount&&ru(x).getState().internal.interaction.push(x),[m,m.alternate].forEach(v=>{v!==null&&(v.stateNode=x,v.ref&&(typeof v.ref=="function"?v.ref(x):v.ref.current=x))})}const u=()=>{};return{reconciler:Vb({createInstance:t,removeChild:l,appendChild:n,appendInitialChild:n,insertBefore:i,supportsMutation:!0,isPrimaryRenderer:!1,supportsPersistence:!1,supportsHydration:!1,noTimeout:-1,appendChildToContainer:(f,p)=>{if(!p)return;const g=f.getState().scene;g.__r3f&&(g.__r3f.root=f,n(g,p))},removeChildFromContainer:(f,p)=>{p&&l(f.getState().scene,p)},insertInContainerBefore:(f,p,g)=>{if(!p||!g)return;const m=f.getState().scene;m.__r3f&&i(m,p,g)},getRootHostContext:()=>null,getChildHostContext:f=>f,finalizeInitialChildren(f){var p;return!!((p=f==null?void 0:f.__r3f)!=null?p:{}).handlers},prepareUpdate(f,p,g,m){var y;if(((y=f==null?void 0:f.__r3f)!=null?y:{}).primitive&&m.object&&m.object!==f)return[!0];{const{args:x=[],children:v,...E}=m,{args:w=[],children:A,...U}=g;if(!Array.isArray(x))throw new Error("R3F: the args prop must be an array!");if(x.some((L,B)=>L!==w[B]))return[!0];const I=Dy(f,E,U,!0);return I.changes.length?[!1,I]:null}},commitUpdate(f,[p,g],m,y,M,x){p?c(f,m,M,x):Of(f,g)},commitMount(f,p,g,m){var y;const M=(y=f.__r3f)!=null?y:{};f.raycast&&M.handlers&&M.eventCount&&ru(f).getState().internal.interaction.push(f)},getPublicInstance:f=>f,prepareForCommit:()=>null,preparePortalMount:f=>yo(f.getState().scene),resetAfterCommit:()=>{},shouldSetTextContent:()=>!1,clearContainer:()=>!1,hideInstance(f){var p;const{attach:g,parent:m}=(p=f.__r3f)!=null?p:{};g&&m&&B0(m,f,g),f.isObject3D&&(f.visible=!1),xo(f)},unhideInstance(f,p){var g;const{attach:m,parent:y}=(g=f.__r3f)!=null?g:{};m&&y&&Uf(y,f,m),(f.isObject3D&&p.visible==null||p.visible)&&(f.visible=!0),xo(f)},createTextInstance:u,hideTextInstance:u,unhideTextInstance:u,getCurrentEventPriority:()=>e?e():bo.DefaultEventPriority,beforeActiveInstanceBlur:()=>{},afterActiveInstanceBlur:()=>{},detachDeletedInstance:()=>{},now:typeof performance<"u"&&Ft.fun(performance.now)?performance.now:Ft.fun(Date.now)?Date.now:()=>0,scheduleTimeout:Ft.fun(setTimeout)?setTimeout:void 0,cancelTimeout:Ft.fun(clearTimeout)?clearTimeout:void 0}),applyProps:Of}}var U0,O0;const Nf=r=>"colorSpace"in r||"outputColorSpace"in r,by=()=>{var r;return(r=wp.ColorManagement)!=null?r:null},Cy=r=>r&&r.isOrthographicCamera,jb=r=>r&&r.hasOwnProperty("current"),ol=typeof window<"u"&&((U0=window.document)!=null&&U0.createElement||((O0=window.navigator)==null?void 0:O0.product)==="ReactNative")?be.useLayoutEffect:be.useEffect;function Ry(r){const e=be.useRef(r);return ol(()=>void(e.current=r),[r]),e}function Jb({set:r}){return ol(()=>(r(new Promise(()=>null)),()=>r(!1)),[r]),null}class Py extends be.Component{constructor(...e){super(...e),this.state={error:!1}}componentDidCatch(e){this.props.set(e)}render(){return this.state.error?null:this.props.children}}Py.getDerivedStateFromError=()=>({error:!0});const Iy="__default",F0=new Map,Kb=r=>r&&!!r.memoized&&!!r.changes;function Ly(r){var e;const t=typeof window<"u"?(e=window.devicePixelRatio)!=null?e:2:1;return Array.isArray(r)?Math.min(Math.max(r[0],t),r[1]):r}const va=r=>{var e;return(e=r.__r3f)==null?void 0:e.root.getState()};function ru(r){let e=r.__r3f.root;for(;e.getState().previousRoot;)e=e.getState().previousRoot;return e}const Ft={obj:r=>r===Object(r)&&!Ft.arr(r)&&typeof r!="function",fun:r=>typeof r=="function",str:r=>typeof r=="string",num:r=>typeof r=="number",boo:r=>typeof r=="boolean",und:r=>r===void 0,arr:r=>Array.isArray(r),equ(r,e,{arrays:t="shallow",objects:n="reference",strict:i=!0}={}){if(typeof r!=typeof e||!!r!=!!e)return!1;if(Ft.str(r)||Ft.num(r))return r===e;const s=Ft.obj(r);if(s&&n==="reference")return r===e;const l=Ft.arr(r);if(l&&t==="reference")return r===e;if((l||s)&&r===e)return!0;let c;for(c in r)if(!(c in e))return!1;if(s&&t==="shallow"&&n==="shallow"){for(c in i?e:r)if(!Ft.equ(r[c],e[c],{strict:i,objects:"reference"}))return!1}else for(c in i?e:r)if(r[c]!==e[c])return!1;if(Ft.und(c)){if(l&&r.length===0&&e.length===0||s&&Object.keys(r).length===0&&Object.keys(e).length===0)return!0;if(r!==e)return!1}return!0}};function Qb(r){const e={nodes:{},materials:{}};return r&&r.traverse(t=>{t.name&&(e.nodes[t.name]=t),t.material&&!e.materials[t.material.name]&&(e.materials[t.material.name]=t.material)}),e}function $b(r){r.dispose&&r.type!=="Scene"&&r.dispose();for(const e in r)e.dispose==null||e.dispose(),delete r[e]}function yo(r,e){const t=r;return t.__r3f={type:"",root:null,previousAttach:null,memoizedProps:{},eventCount:0,handlers:{},objects:[],parent:null,...e},r}function Dd(r,e){let t=r;if(e.includes("-")){const n=e.split("-"),i=n.pop();return t=n.reduce((s,l)=>s[l],r),{target:t,key:i}}else return{target:t,key:e}}const z0=/-\d+$/;function Uf(r,e,t){if(Ft.str(t)){if(z0.test(t)){const s=t.replace(z0,""),{target:l,key:c}=Dd(r,s);Array.isArray(l[c])||(l[c]=[])}const{target:n,key:i}=Dd(r,t);e.__r3f.previousAttach=n[i],n[i]=e}else e.__r3f.previousAttach=t(r,e)}function B0(r,e,t){var n,i;if(Ft.str(t)){const{target:s,key:l}=Dd(r,t),c=e.__r3f.previousAttach;c===void 0?delete s[l]:s[l]=c}else(n=e.__r3f)==null||n.previousAttach==null||n.previousAttach(r,e);(i=e.__r3f)==null||delete i.previousAttach}function Dy(r,{children:e,key:t,ref:n,...i},{children:s,key:l,ref:c,...u}={},h=!1){var f;const p=(f=r==null?void 0:r.__r3f)!=null?f:{},g=Object.entries(i),m=[];if(h){const M=Object.keys(u);for(let x=0;x<M.length;x++)i.hasOwnProperty(M[x])||g.unshift([M[x],Iy+"remove"])}g.forEach(([M,x])=>{var v;if((v=r.__r3f)!=null&&v.primitive&&M==="object"||Ft.equ(x,u[M]))return;if(/^on(Pointer|Click|DoubleClick|ContextMenu|Wheel)/.test(M))return m.push([M,x,!0,[]]);let E=[];M.includes("-")&&(E=M.split("-")),m.push([M,x,!1,E]);for(const w in i){const A=i[w];w.startsWith(`${M}-`)&&m.push([w,A,!1,w.split("-")])}});const y={...i};return p.memoizedProps&&p.memoizedProps.args&&(y.args=p.memoizedProps.args),p.memoizedProps&&p.memoizedProps.attach&&(y.attach=p.memoizedProps.attach),{memoized:y,changes:m}}const eC=typeof process<"u"&&!1;function Of(r,e){var t,n,i;const s=(t=r.__r3f)!=null?t:{},l=s.root,c=(n=l==null||l.getState==null?void 0:l.getState())!=null?n:{},{memoized:u,changes:h}=Kb(e)?e:Dy(r,e),f=s.eventCount;r.__r3f&&(r.__r3f.memoizedProps=u);for(let g=0;g<h.length;g++){let[m,y,M,x]=h[g];if(Nf(r)){const A="srgb",U="srgb-linear";m==="encoding"?(m="colorSpace",y=y===3001?A:U):m==="outputEncoding"&&(m="outputColorSpace",y=y===3001?A:U)}let v=r,E=v[m];if(x.length&&(E=x.reduce((w,A)=>w[A],r),!(E&&E.set))){const[w,...A]=x.reverse();v=A.reverse().reduce((U,I)=>U[I],r),m=w}if(y===Iy+"remove")if(v.constructor){let w=F0.get(v.constructor);w||(w=new v.constructor,F0.set(v.constructor,w)),y=w[m]}else y=0;if(M)y?s.handlers[m]=y:delete s.handlers[m],s.eventCount=Object.keys(s.handlers).length;else if(E&&E.set&&(E.copy||E instanceof Ss)){if(Array.isArray(y))E.fromArray?E.fromArray(y):E.set(...y);else if(E.copy&&y&&y.constructor&&(eC?E.constructor.name===y.constructor.name:E.constructor===y.constructor))E.copy(y);else if(y!==void 0){const w=E instanceof Oe;!w&&E.setScalar?E.setScalar(y):E instanceof Ss&&y instanceof Ss?E.mask=y.mask:E.set(y),!by()&&!c.linear&&w&&E.convertSRGBToLinear()}}else if(v[m]=y,v[m]instanceof Xt&&v[m].format===Gn&&v[m].type===Vi){const w=v[m];Nf(w)&&Nf(c.gl)?w.colorSpace=c.gl.outputColorSpace:w.encoding=c.gl.outputEncoding}xo(r)}if(s.parent&&r.raycast&&f!==s.eventCount){const g=ru(r).getState().internal,m=g.interaction.indexOf(r);m>-1&&g.interaction.splice(m,1),s.eventCount&&g.interaction.push(r)}return!(h.length===1&&h[0][0]==="onUpdate")&&h.length&&(i=r.__r3f)!=null&&i.parent&&Nd(r),r}function xo(r){var e,t;const n=(e=r.__r3f)==null||(t=e.root)==null||t.getState==null?void 0:t.getState();n&&n.internal.frames===0&&n.invalidate()}function Nd(r){r.onUpdate==null||r.onUpdate(r)}function tC(r,e){r.manual||(Cy(r)?(r.left=e.width/-2,r.right=e.width/2,r.top=e.height/2,r.bottom=e.height/-2):r.aspect=e.width/e.height,r.updateProjectionMatrix(),r.updateMatrixWorld())}function qc(r){return(r.eventObject||r.object).uuid+"/"+r.index+r.instanceId}function nC(){var r;const e=typeof self<"u"&&self||typeof window<"u"&&window;if(!e)return bo.DefaultEventPriority;switch((r=e.event)==null?void 0:r.type){case"click":case"contextmenu":case"dblclick":case"pointercancel":case"pointerdown":case"pointerup":return bo.DiscreteEventPriority;case"pointermove":case"pointerout":case"pointerover":case"pointerenter":case"pointerleave":case"wheel":return bo.ContinuousEventPriority;default:return bo.DefaultEventPriority}}function Ny(r,e,t,n){const i=t.get(e);i&&(t.delete(e),t.size===0&&(r.delete(n),i.target.releasePointerCapture(n)))}function iC(r,e){const{internal:t}=r.getState();t.interaction=t.interaction.filter(n=>n!==e),t.initialHits=t.initialHits.filter(n=>n!==e),t.hovered.forEach((n,i)=>{(n.eventObject===e||n.object===e)&&t.hovered.delete(i)}),t.capturedMap.forEach((n,i)=>{Ny(t.capturedMap,e,n,i)})}function rC(r){function e(u){const{internal:h}=r.getState(),f=u.offsetX-h.initialClick[0],p=u.offsetY-h.initialClick[1];return Math.round(Math.sqrt(f*f+p*p))}function t(u){return u.filter(h=>["Move","Over","Enter","Out","Leave"].some(f=>{var p;return(p=h.__r3f)==null?void 0:p.handlers["onPointer"+f]}))}function n(u,h){const f=r.getState(),p=new Set,g=[],m=h?h(f.internal.interaction):f.internal.interaction;for(let v=0;v<m.length;v++){const E=va(m[v]);E&&(E.raycaster.camera=void 0)}f.previousRoot||f.events.compute==null||f.events.compute(u,f);function y(v){const E=va(v);if(!E||!E.events.enabled||E.raycaster.camera===null)return[];if(E.raycaster.camera===void 0){var w;E.events.compute==null||E.events.compute(u,E,(w=E.previousRoot)==null?void 0:w.getState()),E.raycaster.camera===void 0&&(E.raycaster.camera=null)}return E.raycaster.camera?E.raycaster.intersectObject(v,!0):[]}let M=m.flatMap(y).sort((v,E)=>{const w=va(v.object),A=va(E.object);return!w||!A?v.distance-E.distance:A.events.priority-w.events.priority||v.distance-E.distance}).filter(v=>{const E=qc(v);return p.has(E)?!1:(p.add(E),!0)});f.events.filter&&(M=f.events.filter(M,f));for(const v of M){let E=v.object;for(;E;){var x;(x=E.__r3f)!=null&&x.eventCount&&g.push({...v,eventObject:E}),E=E.parent}}if("pointerId"in u&&f.internal.capturedMap.has(u.pointerId))for(let v of f.internal.capturedMap.get(u.pointerId).values())p.has(qc(v.intersection))||g.push(v.intersection);return g}function i(u,h,f,p){const g=r.getState();if(u.length){const m={stopped:!1};for(const y of u){const M=va(y.object)||g,{raycaster:x,pointer:v,camera:E,internal:w}=M,A=new N(v.x,v.y,0).unproject(E),U=b=>{var z,Y;return(z=(Y=w.capturedMap.get(b))==null?void 0:Y.has(y.eventObject))!=null?z:!1},I=b=>{const z={intersection:y,target:h.target};w.capturedMap.has(b)?w.capturedMap.get(b).set(y.eventObject,z):w.capturedMap.set(b,new Map([[y.eventObject,z]])),h.target.setPointerCapture(b)},L=b=>{const z=w.capturedMap.get(b);z&&Ny(w.capturedMap,y.eventObject,z,b)};let B={};for(let b in h){let z=h[b];typeof z!="function"&&(B[b]=z)}let R={...y,...B,pointer:v,intersections:u,stopped:m.stopped,delta:f,unprojectedPoint:A,ray:x.ray,camera:E,stopPropagation(){const b="pointerId"in h&&w.capturedMap.get(h.pointerId);if((!b||b.has(y.eventObject))&&(R.stopped=m.stopped=!0,w.hovered.size&&Array.from(w.hovered.values()).find(z=>z.eventObject===y.eventObject))){const z=u.slice(0,u.indexOf(y));s([...z,y])}},target:{hasPointerCapture:U,setPointerCapture:I,releasePointerCapture:L},currentTarget:{hasPointerCapture:U,setPointerCapture:I,releasePointerCapture:L},nativeEvent:h};if(p(R),m.stopped===!0)break}}return u}function s(u){const{internal:h}=r.getState();for(const f of h.hovered.values())if(!u.length||!u.find(p=>p.object===f.object&&p.index===f.index&&p.instanceId===f.instanceId)){const g=f.eventObject.__r3f,m=g==null?void 0:g.handlers;if(h.hovered.delete(qc(f)),g!=null&&g.eventCount){const y={...f,intersections:u};m.onPointerOut==null||m.onPointerOut(y),m.onPointerLeave==null||m.onPointerLeave(y)}}}function l(u,h){for(let f=0;f<h.length;f++){const p=h[f].__r3f;p==null||p.handlers.onPointerMissed==null||p.handlers.onPointerMissed(u)}}function c(u){switch(u){case"onPointerLeave":case"onPointerCancel":return()=>s([]);case"onLostPointerCapture":return h=>{const{internal:f}=r.getState();"pointerId"in h&&f.capturedMap.has(h.pointerId)&&requestAnimationFrame(()=>{f.capturedMap.has(h.pointerId)&&(f.capturedMap.delete(h.pointerId),s([]))})}}return function(f){const{onPointerMissed:p,internal:g}=r.getState();g.lastEvent.current=f;const m=u==="onPointerMove",y=u==="onClick"||u==="onContextMenu"||u==="onDoubleClick",x=n(f,m?t:void 0),v=y?e(f):0;u==="onPointerDown"&&(g.initialClick=[f.offsetX,f.offsetY],g.initialHits=x.map(w=>w.eventObject)),y&&!x.length&&v<=2&&(l(f,g.interaction),p&&p(f)),m&&s(x);function E(w){const A=w.eventObject,U=A.__r3f,I=U==null?void 0:U.handlers;if(U!=null&&U.eventCount)if(m){if(I.onPointerOver||I.onPointerEnter||I.onPointerOut||I.onPointerLeave){const L=qc(w),B=g.hovered.get(L);B?B.stopped&&w.stopPropagation():(g.hovered.set(L,w),I.onPointerOver==null||I.onPointerOver(w),I.onPointerEnter==null||I.onPointerEnter(w))}I.onPointerMove==null||I.onPointerMove(w)}else{const L=I[u];L?(!y||g.initialHits.includes(A))&&(l(f,g.interaction.filter(B=>!g.initialHits.includes(B))),L(w)):y&&g.initialHits.includes(A)&&l(f,g.interaction.filter(B=>!g.initialHits.includes(B)))}}i(x,f,v,E)}}return{handlePointer:c}}const Uy=r=>!!(r!=null&&r.render),Oy=be.createContext(null),sC=(r,e)=>{const t=Bb((c,u)=>{const h=new N,f=new N,p=new N;function g(v=u().camera,E=f,w=u().size){const{width:A,height:U,top:I,left:L}=w,B=A/U;E instanceof N?p.copy(E):p.set(...E);const R=v.getWorldPosition(h).distanceTo(p);if(Cy(v))return{width:A/v.zoom,height:U/v.zoom,top:I,left:L,factor:1,distance:R,aspect:B};{const b=v.fov*Math.PI/180,z=2*Math.tan(b/2)*R,Y=z*(A/U);return{width:Y,height:z,top:I,left:L,factor:A/Y,distance:R,aspect:B}}}let m;const y=v=>c(E=>({performance:{...E.performance,current:v}})),M=new ce;return{set:c,get:u,gl:null,camera:null,raycaster:null,events:{priority:1,enabled:!0,connected:!1},xr:null,scene:null,invalidate:(v=1)=>r(u(),v),advance:(v,E)=>e(v,E,u()),legacy:!1,linear:!1,flat:!1,controls:null,clock:new yp,pointer:M,mouse:M,frameloop:"always",onPointerMissed:void 0,performance:{current:1,min:.5,max:1,debounce:200,regress:()=>{const v=u();m&&clearTimeout(m),v.performance.current!==v.performance.min&&y(v.performance.min),m=setTimeout(()=>y(u().performance.max),v.performance.debounce)}},size:{width:0,height:0,top:0,left:0,updateStyle:!1},viewport:{initialDpr:0,dpr:0,width:0,height:0,top:0,left:0,aspect:0,distance:0,factor:0,getCurrentViewport:g},setEvents:v=>c(E=>({...E,events:{...E.events,...v}})),setSize:(v,E,w,A,U)=>{const I=u().camera,L={width:v,height:E,top:A||0,left:U||0,updateStyle:w};c(B=>({size:L,viewport:{...B.viewport,...g(I,f,L)}}))},setDpr:v=>c(E=>{const w=Ly(v);return{viewport:{...E.viewport,dpr:w,initialDpr:E.viewport.initialDpr||w}}}),setFrameloop:(v="always")=>{const E=u().clock;E.stop(),E.elapsedTime=0,v!=="never"&&(E.start(),E.elapsedTime=0),c(()=>({frameloop:v}))},previousRoot:void 0,internal:{active:!1,priority:0,frames:0,lastEvent:be.createRef(),interaction:[],hovered:new Map,subscribers:[],initialClick:[0,0],initialHits:[],capturedMap:new Map,subscribe:(v,E,w)=>{const A=u().internal;return A.priority=A.priority+(E>0?1:0),A.subscribers.push({ref:v,priority:E,store:w}),A.subscribers=A.subscribers.sort((U,I)=>U.priority-I.priority),()=>{const U=u().internal;U!=null&&U.subscribers&&(U.priority=U.priority-(E>0?1:0),U.subscribers=U.subscribers.filter(I=>I.ref!==v))}}}}}),n=t.getState();let i=n.size,s=n.viewport.dpr,l=n.camera;return t.subscribe(()=>{const{camera:c,size:u,viewport:h,gl:f,set:p}=t.getState();if(u.width!==i.width||u.height!==i.height||h.dpr!==s){var g;i=u,s=h.dpr,tC(c,u),f.setPixelRatio(h.dpr);const m=(g=u.updateStyle)!=null?g:typeof HTMLCanvasElement<"u"&&f.domElement instanceof HTMLCanvasElement;f.setSize(u.width,u.height,m)}c!==l&&(l=c,p(m=>({viewport:{...m.viewport,...m.viewport.getCurrentViewport(c)}})))}),t.subscribe(c=>r(c)),t};let Zc,oC=new Set,aC=new Set,lC=new Set;function Ff(r,e){if(r.size)for(const{callback:t}of r.values())t(e)}function ya(r,e){switch(r){case"before":return Ff(oC,e);case"after":return Ff(aC,e);case"tail":return Ff(lC,e)}}let zf,Bf;function kf(r,e,t){let n=e.clock.getDelta();for(e.frameloop==="never"&&typeof r=="number"&&(n=r-e.clock.elapsedTime,e.clock.oldTime=e.clock.elapsedTime,e.clock.elapsedTime=r),zf=e.internal.subscribers,Zc=0;Zc<zf.length;Zc++)Bf=zf[Zc],Bf.ref.current(Bf.store.getState(),n,t);return!e.internal.priority&&e.gl.render&&e.gl.render(e.scene,e.camera),e.internal.frames=Math.max(0,e.internal.frames-1),e.frameloop==="always"?1:e.internal.frames}function cC(r){let e=!1,t=!1,n,i,s;function l(h){i=requestAnimationFrame(l),e=!0,n=0,ya("before",h),t=!0;for(const p of r.values()){var f;s=p.store.getState(),s.internal.active&&(s.frameloop==="always"||s.internal.frames>0)&&!((f=s.gl.xr)!=null&&f.isPresenting)&&(n+=kf(h,s))}if(t=!1,ya("after",h),n===0)return ya("tail",h),e=!1,cancelAnimationFrame(i)}function c(h,f=1){var p;if(!h)return r.forEach(g=>c(g.store.getState(),f));(p=h.gl.xr)!=null&&p.isPresenting||!h.internal.active||h.frameloop==="never"||(f>1?h.internal.frames=Math.min(60,h.internal.frames+f):t?h.internal.frames=2:h.internal.frames=1,e||(e=!0,requestAnimationFrame(l)))}function u(h,f=!0,p,g){if(f&&ya("before",h),p)kf(h,p,g);else for(const m of r.values())kf(h,m.store.getState());f&&ya("after",h)}return{loop:l,invalidate:c,advance:u}}function Fy(){const r=be.useContext(Oy);if(!r)throw new Error("R3F: Hooks can only be used within the Canvas component!");return r}function uC(r=t=>t,e){return Fy()(r,e)}function zy(r,e=0){const t=Fy(),n=t.getState().internal.subscribe,i=Ry(r);return ol(()=>n(i,e,t),[e,n,t]),null}const k0=new WeakMap;function By(r,e){return function(t,...n){let i=k0.get(t);return i||(i=new t,k0.set(t,i)),r&&r(i),Promise.all(n.map(s=>new Promise((l,c)=>i.load(s,u=>{u.scene&&Object.assign(u,Qb(u.scene)),l(u)},e,u=>c(new Error(`Could not load ${s}: ${u==null?void 0:u.message}`))))))}}function fu(r,e,t,n){const i=Array.isArray(e)?e:[e],s=Wb(By(t,n),[r,...i],{equal:Ft.equ});return Array.isArray(e)?s:s[0]}fu.preload=function(r,e,t){const n=Array.isArray(e)?e:[e];return Xb(By(t),[r,...n])};fu.clear=function(r,e){const t=Array.isArray(e)?e:[e];return Yb([r,...t])};const Do=new Map,{invalidate:H0,advance:V0}=cC(Do),{reconciler:du,applyProps:_o}=Zb(Do,nC),vo={objects:"shallow",strict:!1},hC=(r,e)=>{const t=typeof r=="function"?r(e):r;return Uy(t)?t:new Av({powerPreference:"high-performance",canvas:e,antialias:!0,alpha:!0,...r})};function fC(r,e){const t=typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement;if(e){const{width:n,height:i,top:s,left:l,updateStyle:c=t}=e;return{width:n,height:i,top:s,left:l,updateStyle:c}}else if(typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement&&r.parentElement){const{width:n,height:i,top:s,left:l}=r.parentElement.getBoundingClientRect();return{width:n,height:i,top:s,left:l,updateStyle:t}}else if(typeof OffscreenCanvas<"u"&&r instanceof OffscreenCanvas)return{width:r.width,height:r.height,top:0,left:0,updateStyle:t};return{width:0,height:0,top:0,left:0}}function dC(r){const e=Do.get(r),t=e==null?void 0:e.fiber,n=e==null?void 0:e.store,i=typeof reportError=="function"?reportError:console.error,s=n||sC(H0,V0),l=t||du.createContainer(s,bo.ConcurrentRoot,null,!1,null,"",i,null);e||Do.set(r,{fiber:l,store:s});let c,u=!1,h;return{configure(f={}){let{gl:p,size:g,scene:m,events:y,onCreated:M,shadows:x=!1,linear:v=!1,flat:E=!1,legacy:w=!1,orthographic:A=!1,frameloop:U="always",dpr:I=[1,2],performance:L,raycaster:B,camera:R,onPointerMissed:b}=f,z=s.getState(),Y=z.gl;z.gl||z.set({gl:Y=hC(p,r)});let k=z.raycaster;k||z.set({raycaster:k=new yy});const{params:J,...se}=B||{};if(Ft.equ(se,k,vo)||_o(k,{...se}),Ft.equ(J,k.params,vo)||_o(k,{params:{...k.params,...J}}),!z.camera||z.camera===h&&!Ft.equ(h,R,vo)){h=R;const j=R instanceof Qa,fe=j?R:A?new tl(0,0,0,0,.1,1e3):new pn(75,0,.1,1e3);j||(fe.position.z=5,R&&(_o(fe,R),("aspect"in R||"left"in R||"right"in R||"bottom"in R||"top"in R)&&(fe.manual=!0,fe.updateProjectionMatrix())),!z.camera&&!(R!=null&&R.rotation)&&fe.lookAt(0,0,0)),z.set({camera:fe}),k.camera=fe}if(!z.scene){let j;m instanceof lu?j=m:(j=new lu,m&&_o(j,m)),z.set({scene:yo(j)})}if(!z.xr){var le;const j=(Be,ne)=>{const _e=s.getState();_e.frameloop!=="never"&&V0(Be,!0,_e,ne)},fe=()=>{const Be=s.getState();Be.gl.xr.enabled=Be.gl.xr.isPresenting,Be.gl.xr.setAnimationLoop(Be.gl.xr.isPresenting?j:null),Be.gl.xr.isPresenting||H0(Be)},Le={connect(){const Be=s.getState().gl;Be.xr.addEventListener("sessionstart",fe),Be.xr.addEventListener("sessionend",fe)},disconnect(){const Be=s.getState().gl;Be.xr.removeEventListener("sessionstart",fe),Be.xr.removeEventListener("sessionend",fe)}};typeof((le=Y.xr)==null?void 0:le.addEventListener)=="function"&&Le.connect(),z.set({xr:Le})}if(Y.shadowMap){const j=Y.shadowMap.enabled,fe=Y.shadowMap.type;if(Y.shadowMap.enabled=!!x,Ft.boo(x))Y.shadowMap.type=Ma;else if(Ft.str(x)){var xe;const Le={basic:r_,percentage:mu,soft:Ma,variance:Si};Y.shadowMap.type=(xe=Le[x])!=null?xe:Ma}else Ft.obj(x)&&Object.assign(Y.shadowMap,x);(j!==Y.shadowMap.enabled||fe!==Y.shadowMap.type)&&(Y.shadowMap.needsUpdate=!0)}const H=by();H&&("enabled"in H?H.enabled=!w:"legacyMode"in H&&(H.legacyMode=w)),u||_o(Y,{outputEncoding:v?3e3:3001,toneMapping:E?ki:Fd}),z.legacy!==w&&z.set(()=>({legacy:w})),z.linear!==v&&z.set(()=>({linear:v})),z.flat!==E&&z.set(()=>({flat:E})),p&&!Ft.fun(p)&&!Uy(p)&&!Ft.equ(p,Y,vo)&&_o(Y,p),y&&!z.events.handlers&&z.set({events:y(s)});const te=fC(r,g);return Ft.equ(te,z.size,vo)||z.setSize(te.width,te.height,te.updateStyle,te.top,te.left),I&&z.viewport.dpr!==Ly(I)&&z.setDpr(I),z.frameloop!==U&&z.setFrameloop(U),z.onPointerMissed||z.set({onPointerMissed:b}),L&&!Ft.equ(L,z.performance,vo)&&z.set(j=>({performance:{...j.performance,...L}})),c=M,u=!0,this},render(f){return u||this.configure(),du.updateContainer(be.createElement(pC,{store:s,children:f,onCreated:c,rootElement:r}),l,null,()=>{}),s},unmount(){ky(r)}}}function pC({store:r,children:e,onCreated:t,rootElement:n}){return ol(()=>{const i=r.getState();i.set(s=>({internal:{...s.internal,active:!0}})),t&&t(i),r.getState().events.connected||i.events.connect==null||i.events.connect(n)},[]),be.createElement(Oy.Provider,{value:r},e)}function ky(r,e){const t=Do.get(r),n=t==null?void 0:t.fiber;if(n){const i=t==null?void 0:t.store.getState();i&&(i.internal.active=!1),du.updateContainer(null,n,null,()=>{i&&setTimeout(()=>{try{var s,l,c,u;i.events.disconnect==null||i.events.disconnect(),(s=i.gl)==null||(l=s.renderLists)==null||l.dispose==null||l.dispose(),(c=i.gl)==null||c.forceContextLoss==null||c.forceContextLoss(),(u=i.gl)!=null&&u.xr&&i.xr.disconnect(),$b(i),Do.delete(r)}catch{}},500)})}}du.injectIntoDevTools({bundleType:0,rendererPackageName:"@react-three/fiber",version:be.version});function Ud(r,e,t){var n,i,s,l,c;e==null&&(e=100);function u(){var f=Date.now()-l;f<e&&f>=0?n=setTimeout(u,e-f):(n=null,t||(c=r.apply(s,i),s=i=null))}var h=function(){s=this,i=arguments,l=Date.now();var f=t&&!n;return n||(n=setTimeout(u,e)),f&&(c=r.apply(s,i),s=i=null),c};return h.clear=function(){n&&(clearTimeout(n),n=null)},h.flush=function(){n&&(c=r.apply(s,i),s=i=null,clearTimeout(n),n=null)},h}Ud.debounce=Ud;var mC=Ud;const G0=e_(mC);function gC(r){let{debounce:e,scroll:t,polyfill:n,offsetSize:i}=r===void 0?{debounce:0,scroll:!1,offsetSize:!1}:r;const s=n||(typeof window>"u"?class{}:window.ResizeObserver);if(!s)throw new Error("This browser does not support ResizeObserver out of the box. See: https://github.com/react-spring/react-use-measure/#resize-observer-polyfills");const[l,c]=be.useState({left:0,top:0,width:0,height:0,bottom:0,right:0,x:0,y:0}),u=be.useRef({element:null,scrollContainers:null,resizeObserver:null,lastBounds:l}),h=e?typeof e=="number"?e:e.scroll:null,f=e?typeof e=="number"?e:e.resize:null,p=be.useRef(!1);be.useEffect(()=>(p.current=!0,()=>void(p.current=!1)));const[g,m,y]=be.useMemo(()=>{const E=()=>{if(!u.current.element)return;const{left:w,top:A,width:U,height:I,bottom:L,right:B,x:R,y:b}=u.current.element.getBoundingClientRect(),z={left:w,top:A,width:U,height:I,bottom:L,right:B,x:R,y:b};u.current.element instanceof HTMLElement&&i&&(z.height=u.current.element.offsetHeight,z.width=u.current.element.offsetWidth),Object.freeze(z),p.current&&!xC(u.current.lastBounds,z)&&c(u.current.lastBounds=z)};return[E,f?G0(E,f):E,h?G0(E,h):E]},[c,i,h,f]);function M(){u.current.scrollContainers&&(u.current.scrollContainers.forEach(E=>E.removeEventListener("scroll",y,!0)),u.current.scrollContainers=null),u.current.resizeObserver&&(u.current.resizeObserver.disconnect(),u.current.resizeObserver=null)}function x(){u.current.element&&(u.current.resizeObserver=new s(y),u.current.resizeObserver.observe(u.current.element),t&&u.current.scrollContainers&&u.current.scrollContainers.forEach(E=>E.addEventListener("scroll",y,{capture:!0,passive:!0})))}const v=E=>{!E||E===u.current.element||(M(),u.current.element=E,u.current.scrollContainers=Hy(E),x())};return vC(y,!!t),_C(m),be.useEffect(()=>{M(),x()},[t,y,m]),be.useEffect(()=>M,[]),[v,l,g]}function _C(r){be.useEffect(()=>{const e=r;return window.addEventListener("resize",e),()=>void window.removeEventListener("resize",e)},[r])}function vC(r,e){be.useEffect(()=>{if(e){const t=r;return window.addEventListener("scroll",t,{capture:!0,passive:!0}),()=>void window.removeEventListener("scroll",t,!0)}},[r,e])}function Hy(r){const e=[];if(!r||r===document.body)return e;const{overflow:t,overflowX:n,overflowY:i}=window.getComputedStyle(r);return[t,n,i].some(s=>s==="auto"||s==="scroll")&&e.push(r),[...e,...Hy(r.parentElement)]}const yC=["x","y","top","bottom","left","right","width","height"],xC=(r,e)=>yC.every(t=>r[t]===e[t]);var SC=Object.defineProperty,MC=Object.defineProperties,wC=Object.getOwnPropertyDescriptors,W0=Object.getOwnPropertySymbols,EC=Object.prototype.hasOwnProperty,TC=Object.prototype.propertyIsEnumerable,X0=(r,e,t)=>e in r?SC(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,Y0=(r,e)=>{for(var t in e||(e={}))EC.call(e,t)&&X0(r,t,e[t]);if(W0)for(var t of W0(e))TC.call(e,t)&&X0(r,t,e[t]);return r},AC=(r,e)=>MC(r,wC(e));function Vy(r,e,t){if(!r)return;if(t(r)===!0)return r;let n=r.child;for(;n;){const i=Vy(n,e,t);if(i)return i;n=n.sibling}}function Gy(r){try{return Object.defineProperties(r,{_currentRenderer:{get(){return null},set(){}},_currentRenderer2:{get(){return null},set(){}}})}catch{return r}}const Ep=Gy(be.createContext(null));class Wy extends be.Component{render(){return be.createElement(Ep.Provider,{value:this._reactInternals},this.props.children)}}const{ReactCurrentOwner:q0,ReactCurrentDispatcher:Z0}=be.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;function bC(){const r=be.useContext(Ep);if(r===null)throw new Error("its-fine: useFiber must be called within a <FiberProvider />!");const e=be.useId();return be.useMemo(()=>{for(const n of[q0==null?void 0:q0.current,r,r==null?void 0:r.alternate]){if(!n)continue;const i=Vy(n,!1,s=>{let l=s.memoizedState;for(;l;){if(l.memoizedState===e)return!0;l=l.next}});if(i)return i}},[r,e])}function CC(){var r,e;const t=bC(),[n]=be.useState(()=>new Map);n.clear();let i=t;for(;i;){const s=(r=i.type)==null?void 0:r._context;s&&s!==Ep&&!n.has(s)&&n.set(s,(e=Z0==null?void 0:Z0.current)==null?void 0:e.readContext(Gy(s))),i=i.return}return n}function RC(){const r=CC();return be.useMemo(()=>Array.from(r.keys()).reduce((e,t)=>n=>be.createElement(e,null,be.createElement(t.Provider,AC(Y0({},n),{value:r.get(t)}))),e=>be.createElement(Wy,Y0({},e))),[r])}const Hf={onClick:["click",!1],onContextMenu:["contextmenu",!1],onDoubleClick:["dblclick",!1],onWheel:["wheel",!0],onPointerDown:["pointerdown",!0],onPointerUp:["pointerup",!0],onPointerLeave:["pointerleave",!0],onPointerMove:["pointermove",!0],onPointerCancel:["pointercancel",!0],onLostPointerCapture:["lostpointercapture",!0]};function PC(r){const{handlePointer:e}=rC(r);return{priority:1,enabled:!0,compute(t,n,i){n.pointer.set(t.offsetX/n.size.width*2-1,-(t.offsetY/n.size.height)*2+1),n.raycaster.setFromCamera(n.pointer,n.camera)},connected:void 0,handlers:Object.keys(Hf).reduce((t,n)=>({...t,[n]:e(n)}),{}),update:()=>{var t;const{events:n,internal:i}=r.getState();(t=i.lastEvent)!=null&&t.current&&n.handlers&&n.handlers.onPointerMove(i.lastEvent.current)},connect:t=>{var n;const{set:i,events:s}=r.getState();s.disconnect==null||s.disconnect(),i(l=>({events:{...l.events,connected:t}})),Object.entries((n=s.handlers)!=null?n:[]).forEach(([l,c])=>{const[u,h]=Hf[l];t.addEventListener(u,c,{passive:h})})},disconnect:()=>{const{set:t,events:n}=r.getState();if(n.connected){var i;Object.entries((i=n.handlers)!=null?i:[]).forEach(([s,l])=>{if(n&&n.connected instanceof HTMLElement){const[c]=Hf[s];n.connected.removeEventListener(c,l)}}),t(s=>({events:{...s.events,connected:void 0}}))}}}}const IC=be.forwardRef(function({children:e,fallback:t,resize:n,style:i,gl:s,events:l=PC,eventSource:c,eventPrefix:u,shadows:h,linear:f,flat:p,legacy:g,orthographic:m,frameloop:y,dpr:M,performance:x,raycaster:v,camera:E,scene:w,onPointerMissed:A,onCreated:U,...I},L){be.useMemo(()=>qb(Ob),[]);const B=RC(),[R,b]=gC({scroll:!0,debounce:{scroll:50,resize:0},...n}),z=be.useRef(null),Y=be.useRef(null);be.useImperativeHandle(L,()=>z.current);const k=Ry(A),[J,se]=be.useState(!1),[le,xe]=be.useState(!1);if(J)throw J;if(le)throw le;const H=be.useRef(null);ol(()=>{const j=z.current;b.width>0&&b.height>0&&j&&(H.current||(H.current=dC(j)),H.current.configure({gl:s,events:l,shadows:h,linear:f,flat:p,legacy:g,orthographic:m,frameloop:y,dpr:M,performance:x,raycaster:v,camera:E,scene:w,size:b,onPointerMissed:(...fe)=>k.current==null?void 0:k.current(...fe),onCreated:fe=>{fe.events.connect==null||fe.events.connect(c?jb(c)?c.current:c:Y.current),u&&fe.setEvents({compute:(Le,Be)=>{const ne=Le[u+"X"],_e=Le[u+"Y"];Be.pointer.set(ne/Be.size.width*2-1,-(_e/Be.size.height)*2+1),Be.raycaster.setFromCamera(Be.pointer,Be.camera)}}),U==null||U(fe)}}),H.current.render(be.createElement(B,null,be.createElement(Py,{set:xe},be.createElement(be.Suspense,{fallback:be.createElement(Jb,{set:se})},e)))))}),be.useEffect(()=>{const j=z.current;if(j)return()=>ky(j)},[]);const te=c?"none":"auto";return be.createElement("div",t_({ref:Y,style:{position:"relative",width:"100%",height:"100%",overflow:"hidden",pointerEvents:te,...i}},I),be.createElement("div",{ref:R,style:{width:"100%",height:"100%"}},be.createElement("canvas",{ref:z,style:{display:"block"}},t)))}),LC=be.forwardRef(function(e,t){return be.createElement(Wy,null,be.createElement(IC,t_({},e,{ref:t})))}),{useDebugValue:DC}=Bx,{useSyncExternalStoreWithSelector:NC}=zx,UC=r=>r;function OC(r,e=UC,t){const n=NC(r.subscribe,r.getState,r.getServerState||r.getInitialState,e,t);return DC(n),n}const j0=(r,e)=>{const t=Fx(r),n=(i,s=e)=>OC(t,i,s);return Object.assign(n,t),n},FC=(r,e)=>r?j0(r,e):j0,J0={list:[],tooltip:void 0,popupPoint:void 0,destinationPoints:[],show:!1,move:!1},Ls=FC(r=>({...J0,setList:e=>{r(t=>({...t,list:e}))},moveTo:e=>{r(t=>(t.destinationPoints=[e],t.move=!0,{...t}))},setDestinationStatus:(e,t)=>{r(n=>(n.destinationPoints[e].statusFlag=t,n.destinationPoints=[...n.destinationPoints],{...n}))},setDestinationPoints:(e,t=!1)=>{r(n=>(n.destinationPoints=[...n.destinationPoints,e],t&&(n.move=t),{...n}))},openPopup:e=>{r(t=>(t.popupPoint=e,t.show=!0,t.move=!1,{...t}))},closePopup:()=>{r(e=>({...e,show:!1}))},setTooltip:e=>{r(t=>({...t,tooltip:e}))},resetPoints:()=>{r(e=>(e.destinationPoints=[],{...e}))},reset:()=>{r({...J0})}}),Object.is),Xy={latLngToXYZ:r=>{const e=(90-r.lat)*(Math.PI/180),t=(r.lng+180)*(Math.PI/180),n=_s*-Math.sin(e)*Math.cos(t),i=_s*Math.sin(e)*Math.sin(t),s=_s*Math.cos(e),l=new N;return l.set(n,s,i),l},XYZToLatLng:(r,e,t)=>{const n=Math.asin(t/1),i=Math.atan2(e,r);return{lat:n,lng:i}}},K0={type:"change"},Vf={type:"start"},Q0={type:"end"},jc=new bs,$0=new rr,zC=Math.cos(70*av.DEG2RAD);class BC extends Gi{constructor(e,t){super(),this.object=e,this.domElement=t,this.domElement.style.touchAction="none",this.enabled=!0,this.target=new N,this.cursor=new N,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minTargetRadius=0,this.maxTargetRadius=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.zoomToCursor=!1,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:as.ROTATE,MIDDLE:as.DOLLY,RIGHT:as.PAN},this.touches={ONE:ls.ROTATE,TWO:ls.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this.getPolarAngle=function(){return c.phi},this.getAzimuthalAngle=function(){return c.theta},this.getDistance=function(){return this.object.position.distanceTo(this.target)},this.listenToKeyEvents=function(C){C.addEventListener("keydown",tt),this._domElementKeyEvents=C},this.stopListenToKeyEvents=function(){this._domElementKeyEvents.removeEventListener("keydown",tt),this._domElementKeyEvents=null},this.saveState=function(){n.target0.copy(n.target),n.position0.copy(n.object.position),n.zoom0=n.object.zoom},this.reset=function(){n.target.copy(n.target0),n.object.position.copy(n.position0),n.object.zoom=n.zoom0,n.object.updateProjectionMatrix(),n.dispatchEvent(K0),n.update(),s=i.NONE},this.update=function(){const C=new N,X=new bn().setFromUnitVectors(e.up,new N(0,1,0)),K=X.clone().invert(),ge=new N,Ee=new bn,ct=new N,mt=2*Math.PI;return function(Kt=null){const Mt=n.object.position;C.copy(Mt).sub(n.target),C.applyQuaternion(X),c.setFromVector3(C),n.autoRotate&&s===i.NONE&&Y(b(Kt)),n.enableDamping?(c.theta+=u.theta*n.dampingFactor,c.phi+=u.phi*n.dampingFactor):(c.theta+=u.theta,c.phi+=u.phi);let kt=n.minAzimuthAngle,Dt=n.maxAzimuthAngle;isFinite(kt)&&isFinite(Dt)&&(kt<-Math.PI?kt+=mt:kt>Math.PI&&(kt-=mt),Dt<-Math.PI?Dt+=mt:Dt>Math.PI&&(Dt-=mt),kt<=Dt?c.theta=Math.max(kt,Math.min(Dt,c.theta)):c.theta=c.theta>(kt+Dt)/2?Math.max(kt,c.theta):Math.min(Dt,c.theta)),c.phi=Math.max(n.minPolarAngle,Math.min(n.maxPolarAngle,c.phi)),c.makeSafe(),n.enableDamping===!0?n.target.addScaledVector(f,n.dampingFactor):n.target.add(f),n.target.sub(n.cursor),n.target.clampLength(n.minTargetRadius,n.maxTargetRadius),n.target.add(n.cursor);let Ci=!1;if(n.zoomToCursor&&I||n.object.isOrthographicCamera)c.radius=j(c.radius);else{const zn=c.radius;c.radius=j(c.radius*h),Ci=zn!=c.radius}if(C.setFromSpherical(c),C.applyQuaternion(K),Mt.copy(n.target).add(C),n.object.lookAt(n.target),n.enableDamping===!0?(u.theta*=1-n.dampingFactor,u.phi*=1-n.dampingFactor,f.multiplyScalar(1-n.dampingFactor)):(u.set(0,0,0),f.set(0,0,0)),n.zoomToCursor&&I){let zn=null;if(n.object.isPerspectiveCamera){const Ri=C.length();zn=j(Ri*h);const ti=Ri-zn;n.object.position.addScaledVector(A,ti),n.object.updateMatrixWorld(),Ci=!!ti}else if(n.object.isOrthographicCamera){const Ri=new N(U.x,U.y,0);Ri.unproject(n.object);const ti=n.object.zoom;n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/h)),n.object.updateProjectionMatrix(),Ci=ti!==n.object.zoom;const Xi=new N(U.x,U.y,0);Xi.unproject(n.object),n.object.position.sub(Xi).add(Ri),n.object.updateMatrixWorld(),zn=C.length()}else n.zoomToCursor=!1;zn!==null&&(this.screenSpacePanning?n.target.set(0,0,-1).transformDirection(n.object.matrix).multiplyScalar(zn).add(n.object.position):(jc.origin.copy(n.object.position),jc.direction.set(0,0,-1).transformDirection(n.object.matrix),Math.abs(n.object.up.dot(jc.direction))<zC?e.lookAt(n.target):($0.setFromNormalAndCoplanarPoint(n.object.up,n.target),jc.intersectPlane($0,n.target))))}else if(n.object.isOrthographicCamera){const zn=n.object.zoom;n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/h)),zn!==n.object.zoom&&(n.object.updateProjectionMatrix(),Ci=!0)}return h=1,I=!1,Ci||ge.distanceToSquared(n.object.position)>l||8*(1-Ee.dot(n.object.quaternion))>l||ct.distanceToSquared(n.target)>l?(n.dispatchEvent(K0),ge.copy(n.object.position),Ee.copy(n.object.quaternion),ct.copy(n.target),!0):!1}}(),this.dispose=function(){n.domElement.removeEventListener("contextmenu",pt),n.domElement.removeEventListener("pointerdown",F),n.domElement.removeEventListener("pointercancel",Z),n.domElement.removeEventListener("wheel",de),n.domElement.removeEventListener("pointermove",P),n.domElement.removeEventListener("pointerup",Z),n.domElement.getRootNode().removeEventListener("keydown",Ae,{capture:!0}),n._domElementKeyEvents!==null&&(n._domElementKeyEvents.removeEventListener("keydown",tt),n._domElementKeyEvents=null)};const n=this,i={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6};let s=i.NONE;const l=1e-6,c=new Id,u=new Id;let h=1;const f=new N,p=new ce,g=new ce,m=new ce,y=new ce,M=new ce,x=new ce,v=new ce,E=new ce,w=new ce,A=new N,U=new ce;let I=!1;const L=[],B={};let R=!1;function b(C){return C!==null?2*Math.PI/60*n.autoRotateSpeed*C:2*Math.PI/60/60*n.autoRotateSpeed}function z(C){const X=Math.abs(C*.01);return Math.pow(.95,n.zoomSpeed*X)}function Y(C){u.theta-=C}function k(C){u.phi-=C}const J=function(){const C=new N;return function(K,ge){C.setFromMatrixColumn(ge,0),C.multiplyScalar(-K),f.add(C)}}(),se=function(){const C=new N;return function(K,ge){n.screenSpacePanning===!0?C.setFromMatrixColumn(ge,1):(C.setFromMatrixColumn(ge,0),C.crossVectors(n.object.up,C)),C.multiplyScalar(K),f.add(C)}}(),le=function(){const C=new N;return function(K,ge){const Ee=n.domElement;if(n.object.isPerspectiveCamera){const ct=n.object.position;C.copy(ct).sub(n.target);let mt=C.length();mt*=Math.tan(n.object.fov/2*Math.PI/180),J(2*K*mt/Ee.clientHeight,n.object.matrix),se(2*ge*mt/Ee.clientHeight,n.object.matrix)}else n.object.isOrthographicCamera?(J(K*(n.object.right-n.object.left)/n.object.zoom/Ee.clientWidth,n.object.matrix),se(ge*(n.object.top-n.object.bottom)/n.object.zoom/Ee.clientHeight,n.object.matrix)):n.enablePan=!1}}();function xe(C){n.object.isPerspectiveCamera||n.object.isOrthographicCamera?h/=C:n.enableZoom=!1}function H(C){n.object.isPerspectiveCamera||n.object.isOrthographicCamera?h*=C:n.enableZoom=!1}function te(C,X){if(!n.zoomToCursor)return;I=!0;const K=n.domElement.getBoundingClientRect(),ge=C-K.left,Ee=X-K.top,ct=K.width,mt=K.height;U.x=ge/ct*2-1,U.y=-(Ee/mt)*2+1,A.set(U.x,U.y,1).unproject(n.object).sub(n.object.position).normalize()}function j(C){return Math.max(n.minDistance,Math.min(n.maxDistance,C))}function fe(C){p.set(C.clientX,C.clientY)}function Le(C){te(C.clientX,C.clientX),v.set(C.clientX,C.clientY)}function Be(C){y.set(C.clientX,C.clientY)}function ne(C){g.set(C.clientX,C.clientY),m.subVectors(g,p).multiplyScalar(n.rotateSpeed);const X=n.domElement;Y(2*Math.PI*m.x/X.clientHeight),k(2*Math.PI*m.y/X.clientHeight),p.copy(g),n.update()}function _e(C){E.set(C.clientX,C.clientY),w.subVectors(E,v),w.y>0?xe(z(w.y)):w.y<0&&H(z(w.y)),v.copy(E),n.update()}function Re(C){M.set(C.clientX,C.clientY),x.subVectors(M,y).multiplyScalar(n.panSpeed),le(x.x,x.y),y.copy(M),n.update()}function ye(C){te(C.clientX,C.clientY),C.deltaY<0?H(z(C.deltaY)):C.deltaY>0&&xe(z(C.deltaY)),n.update()}function nt(C){let X=!1;switch(C.code){case n.keys.UP:C.ctrlKey||C.metaKey||C.shiftKey?k(2*Math.PI*n.rotateSpeed/n.domElement.clientHeight):le(0,n.keyPanSpeed),X=!0;break;case n.keys.BOTTOM:C.ctrlKey||C.metaKey||C.shiftKey?k(-2*Math.PI*n.rotateSpeed/n.domElement.clientHeight):le(0,-n.keyPanSpeed),X=!0;break;case n.keys.LEFT:C.ctrlKey||C.metaKey||C.shiftKey?Y(2*Math.PI*n.rotateSpeed/n.domElement.clientHeight):le(n.keyPanSpeed,0),X=!0;break;case n.keys.RIGHT:C.ctrlKey||C.metaKey||C.shiftKey?Y(-2*Math.PI*n.rotateSpeed/n.domElement.clientHeight):le(-n.keyPanSpeed,0),X=!0;break}X&&(C.preventDefault(),n.update())}function it(C){if(L.length===1)p.set(C.pageX,C.pageY);else{const X=Rt(C),K=.5*(C.pageX+X.x),ge=.5*(C.pageY+X.y);p.set(K,ge)}}function W(C){if(L.length===1)y.set(C.pageX,C.pageY);else{const X=Rt(C),K=.5*(C.pageX+X.x),ge=.5*(C.pageY+X.y);y.set(K,ge)}}function Qe(C){const X=Rt(C),K=C.pageX-X.x,ge=C.pageY-X.y,Ee=Math.sqrt(K*K+ge*ge);v.set(0,Ee)}function ae(C){n.enableZoom&&Qe(C),n.enablePan&&W(C)}function pe(C){n.enableZoom&&Qe(C),n.enableRotate&&it(C)}function he(C){if(L.length==1)g.set(C.pageX,C.pageY);else{const K=Rt(C),ge=.5*(C.pageX+K.x),Ee=.5*(C.pageY+K.y);g.set(ge,Ee)}m.subVectors(g,p).multiplyScalar(n.rotateSpeed);const X=n.domElement;Y(2*Math.PI*m.x/X.clientHeight),k(2*Math.PI*m.y/X.clientHeight),p.copy(g)}function we(C){if(L.length===1)M.set(C.pageX,C.pageY);else{const X=Rt(C),K=.5*(C.pageX+X.x),ge=.5*(C.pageY+X.y);M.set(K,ge)}x.subVectors(M,y).multiplyScalar(n.panSpeed),le(x.x,x.y),y.copy(M)}function me(C){const X=Rt(C),K=C.pageX-X.x,ge=C.pageY-X.y,Ee=Math.sqrt(K*K+ge*ge);E.set(0,Ee),w.set(0,Math.pow(E.y/v.y,n.zoomSpeed)),xe(w.y),v.copy(E);const ct=(C.pageX+X.x)*.5,mt=(C.pageY+X.y)*.5;te(ct,mt)}function Ne(C){n.enableZoom&&me(C),n.enablePan&&we(C)}function qe(C){n.enableZoom&&me(C),n.enableRotate&&he(C)}function F(C){n.enabled!==!1&&(L.length===0&&(n.domElement.setPointerCapture(C.pointerId),n.domElement.addEventListener("pointermove",P),n.domElement.addEventListener("pointerup",Z)),!at(C)&&(Ze(C),C.pointerType==="touch"?Me(C):ue(C)))}function P(C){n.enabled!==!1&&(C.pointerType==="touch"?Ve(C):ve(C))}function Z(C){switch(Fe(C),L.length){case 0:n.domElement.releasePointerCapture(C.pointerId),n.domElement.removeEventListener("pointermove",P),n.domElement.removeEventListener("pointerup",Z),n.dispatchEvent(Q0),s=i.NONE;break;case 1:const X=L[0],K=B[X];Me({pointerId:X,pageX:K.x,pageY:K.y});break}}function ue(C){let X;switch(C.button){case 0:X=n.mouseButtons.LEFT;break;case 1:X=n.mouseButtons.MIDDLE;break;case 2:X=n.mouseButtons.RIGHT;break;default:X=-1}switch(X){case as.DOLLY:if(n.enableZoom===!1)return;Le(C),s=i.DOLLY;break;case as.ROTATE:if(C.ctrlKey||C.metaKey||C.shiftKey){if(n.enablePan===!1)return;Be(C),s=i.PAN}else{if(n.enableRotate===!1)return;fe(C),s=i.ROTATE}break;case as.PAN:if(C.ctrlKey||C.metaKey||C.shiftKey){if(n.enableRotate===!1)return;fe(C),s=i.ROTATE}else{if(n.enablePan===!1)return;Be(C),s=i.PAN}break;default:s=i.NONE}s!==i.NONE&&n.dispatchEvent(Vf)}function ve(C){switch(s){case i.ROTATE:if(n.enableRotate===!1)return;ne(C);break;case i.DOLLY:if(n.enableZoom===!1)return;_e(C);break;case i.PAN:if(n.enablePan===!1)return;Re(C);break}}function de(C){n.enabled===!1||n.enableZoom===!1||s!==i.NONE||(C.preventDefault(),n.dispatchEvent(Vf),ye(Xe(C)),n.dispatchEvent(Q0))}function Xe(C){const X=C.deltaMode,K={clientX:C.clientX,clientY:C.clientY,deltaY:C.deltaY};switch(X){case 1:K.deltaY*=16;break;case 2:K.deltaY*=100;break}return C.ctrlKey&&!R&&(K.deltaY*=10),K}function Ae(C){C.key==="Control"&&(R=!0,n.domElement.getRootNode().addEventListener("keyup",Te,{passive:!0,capture:!0}))}function Te(C){C.key==="Control"&&(R=!1,n.domElement.getRootNode().removeEventListener("keyup",Te,{passive:!0,capture:!0}))}function tt(C){n.enabled===!1||n.enablePan===!1||nt(C)}function Me(C){switch(vt(C),L.length){case 1:switch(n.touches.ONE){case ls.ROTATE:if(n.enableRotate===!1)return;it(C),s=i.TOUCH_ROTATE;break;case ls.PAN:if(n.enablePan===!1)return;W(C),s=i.TOUCH_PAN;break;default:s=i.NONE}break;case 2:switch(n.touches.TWO){case ls.DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;ae(C),s=i.TOUCH_DOLLY_PAN;break;case ls.DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;pe(C),s=i.TOUCH_DOLLY_ROTATE;break;default:s=i.NONE}break;default:s=i.NONE}s!==i.NONE&&n.dispatchEvent(Vf)}function Ve(C){switch(vt(C),s){case i.TOUCH_ROTATE:if(n.enableRotate===!1)return;he(C),n.update();break;case i.TOUCH_PAN:if(n.enablePan===!1)return;we(C),n.update();break;case i.TOUCH_DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;Ne(C),n.update();break;case i.TOUCH_DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;qe(C),n.update();break;default:s=i.NONE}}function pt(C){n.enabled!==!1&&C.preventDefault()}function Ze(C){L.push(C.pointerId)}function Fe(C){delete B[C.pointerId];for(let X=0;X<L.length;X++)if(L[X]==C.pointerId){L.splice(X,1);return}}function at(C){for(let X=0;X<L.length;X++)if(L[X]==C.pointerId)return!0;return!1}function vt(C){let X=B[C.pointerId];X===void 0&&(X=new ce,B[C.pointerId]=X),X.set(C.pageX,C.pageY)}function Rt(C){const X=C.pointerId===L[0]?L[1]:L[0];return B[X]}n.domElement.addEventListener("contextmenu",pt),n.domElement.addEventListener("pointerdown",F),n.domElement.addEventListener("pointercancel",Z),n.domElement.addEventListener("wheel",de,{passive:!1}),n.domElement.getRootNode().addEventListener("keydown",Ae,{passive:!0,capture:!0}),this.update()}}function As(r,e){if(Object.is(r,e))return!0;if(typeof r!="object"||r===null||typeof e!="object"||e===null)return!1;if(r instanceof Map&&e instanceof Map){if(r.size!==e.size)return!1;for(const[n,i]of r)if(!Object.is(i,e.get(n)))return!1;return!0}if(r instanceof Set&&e instanceof Set){if(r.size!==e.size)return!1;for(const n of r)if(!e.has(n))return!1;return!0}const t=Object.keys(r);if(t.length!==Object.keys(e).length)return!1;for(const n of t)if(!Object.prototype.hasOwnProperty.call(e,n)||!Object.is(r[n],e[n]))return!1;return!0}const kC=()=>{const{destinationPoints:r,setDestinationStatus:e,move:t,openPopup:n,resetPoints:i}=Ls(m=>({destinationPoints:m.destinationPoints,setDestinationStatus:m.setDestinationStatus,move:m.move,openPopup:m.openPopup,resetPoints:m.resetPoints}),As),{camera:s,gl:l}=uC(m=>({camera:m.camera,gl:m.gl}),As),c=be.useRef(),u=be.useRef(null);be.useEffect(()=>(c.current=new BC(s,l.domElement),c.current.minDistance=window.innerWidth<500?10:6,c.current.maxDistance=10,h(),()=>{var m;(m=c.current)==null||m.dispose()}),[s,l]),zy(()=>{f(),p()});const h=()=>{var m,y;s.position.copy(new N(0,0,(m=c.current)==null?void 0:m.minDistance)),(y=c.current)==null||y.update()},f=()=>{var m;(m=u.current)==null||m.position.copy(s.position)},p=()=>{var E;if(!t||r.length===0)return;const m=r.findIndex(w=>w.statusFlag===Mi.moving?!0:w.statusFlag===Mi.pending);if(m<0)return;r[m].statusFlag!==Mi.moving&&e(m,Mi.moving);const y=Xy.latLngToXYZ(r[m]);if(g(y,m))return;const v=s.position.clone().lerp(y,.08);s.position.copy(v),(E=c.current)==null||E.update()},g=(m,y)=>{var v;const M=s.position.distanceTo(m),x=((v=c.current)==null?void 0:v.minDistance)===10?7.01:3.01;return M<x?(e(y,Mi.passed),r.every(E=>E.statusFlag===Mi.passed)&&(i(),n(r[r.length-1])),!0):!1};return{lightRef:u}},HC=()=>{const{lightRef:r}=kC();return Ue.jsx("pointLight",{ref:r,intensity:2,position:[0,0,5],distance:500,decay:.2})},VC="_div_spot_tooltip_24lim_1",GC="_div_popup_24lim_11",WC="_div_option_24lim_16",XC="_div_panel_24lim_22",YC="_moving_24lim_42",qC="_move_24lim_1",ZC="_pending_24lim_46",jC="_passed_24lim_50",gs={div_spot_tooltip:VC,div_popup:GC,div_option:WC,div_panel:XC,moving:YC,move:qC,pending:ZC,passed:jC},Jc={width:"70px",height:"30px",fontSize:"12px"},JC=()=>{var h;const{popupPoint:r,closePopup:e,destinationPoints:t,show:n,setDestinationPoints:i}=Ls(f=>({popupPoint:f.popupPoint,closePopup:f.closePopup,destinationPoints:f.destinationPoints,show:f.show,setDestinationPoints:f.setDestinationPoints}),As);be.useEffect(()=>{!n&&s&&l(!1)},[n]);const[s,l]=be.useState(!1),c=`/assets/img/flags/${(h=r==null?void 0:r.code)==null?void 0:h.toLocaleLowerCase()}.png`,u=(f=!1)=>{t.length>0&&t[t.length-1].country===(r==null?void 0:r.country)||(i({...r,statusFlag:Mi.pending},f),e())};return Ue.jsx(Ue.Fragment,{children:n&&Ue.jsx(Wx,{closePopup:e,children:Ue.jsxs(Ue.Fragment,{children:[Ue.jsxs("div",{className:gs.div_popup,children:[Ue.jsx("img",{src:c}),Ue.jsxs("p",{children:["Name : ",r.country]}),Ue.jsxs("p",{children:["Latitude : ",r.lat]}),Ue.jsxs("p",{children:["Longitude : ",r.lng]}),Ue.jsxs("div",{className:gs.div_option,children:[t.length===0?Ue.jsx(Ir,{...Jc,backgroundColor:"#64b5f6",onClick:()=>u(),children:"Departure"}):Ue.jsxs(Ue.Fragment,{children:[Ue.jsx(Ir,{...Jc,backgroundColor:"#64b5f6",onClick:()=>u(),children:"Transfer"}),Ue.jsx(Ir,{...Jc,backgroundColor:"#FF9800",onClick:()=>u(!0),children:"Destination"})]}),Ue.jsx(Ir,{...Jc,backgroundColor:s?"#7E57C2":"#9CCC65",onClick:()=>l(!s),children:s?"Hide map":"Show map"})]}),Ue.jsx(Ir,{margin:"10px auto 0",onClick:e,children:"Close"})]}),s&&Ue.jsx(Vx,{latLng:r})]})})})};class KC extends Xx{async getCountryList(){return(await super.get("/assets/data/country.json")).data}}const QC=async()=>await new KC().getCountryList(),$C=be.memo(({model:r})=>{const{openPopup:e,setTooltip:t}=Ls(c=>({openPopup:c.openPopup,setTooltip:c.setTooltip}),As),[n,i]=be.useState(!1),s=be.useMemo(()=>Xy.latLngToXYZ(r),[]),l=(c,u=!0)=>{i(u);const h={show:u,country:r.country,top:c.clientY,left:c.clientX};t(h)};return Ue.jsxs("mesh",{position:s,onClick:()=>e(r),onPointerOver:c=>l(c),onPointerOut:c=>l(c,!1),children:[Ue.jsx("sphereGeometry",{args:[_s/80]}),Ue.jsx("meshStandardMaterial",{color:n?"green":"red"})]})}),eR=be.memo(()=>{const{refetch:r}=Gx("country",QC,!1),{setList:e,list:t,reset:n}=Ls(s=>({setList:s.setList,list:s.list,reset:s.reset}),As);be.useEffect(()=>(i(),()=>{n()}),[]);const i=async()=>{const s=await r();e(s.data??[])};return Ue.jsx(Ue.Fragment,{children:t.map((s,l)=>Ue.jsx($C,{model:s},`spot_${l}`))})}),tR=()=>{const r=Ls(e=>e.tooltip);return Ue.jsx(Ue.Fragment,{children:(r==null?void 0:r.show)&&Ue.jsx("div",{className:gs.div_spot_tooltip,style:{"--top":`${r.top}px`,"--left":`${r.left}px`},children:r.country})})},nR=()=>{const r=be.useRef(null),e=fu(Cd,"/assets/img/earth.jpg"),t=fu(Cd,"/assets/img/cloud.png"),n=`
  varying vec3 vertexNormal;

  void main() {
      vertexNormal = normalize(normalMatrix * normal);
      gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
  }
  `,i=`
  varying vec3 vertexNormal;
  void main() {
      float intensity = pow(0.76 - dot(vertexNormal, vec3(0,0,1.)), 2.0);
      gl_FragColor = vec4(0.3, 0.6, 1.0, 1) * intensity;
  }
  `;return zy(()=>{r.current!==null&&(r.current.rotation.y+=5e-4)}),{earthTexture:e,cloudTexture:t,cloudRef:r,vertexShader:n,fragmentShader:i}},iR=be.memo(()=>{const{earthTexture:r,cloudTexture:e,cloudRef:t,vertexShader:n,fragmentShader:i}=nR();return Ue.jsxs(Ue.Fragment,{children:[Ue.jsxs("mesh",{children:[Ue.jsx("sphereGeometry",{args:[_s]}),Ue.jsx("meshStandardMaterial",{map:r,roughness:.7,metalness:.1})]}),Ue.jsxs("mesh",{ref:t,children:[Ue.jsx("sphereGeometry",{args:[_s+.1]}),Ue.jsx("meshStandardMaterial",{map:e,transparent:!0})]}),Ue.jsxs("mesh",{children:[Ue.jsx("sphereGeometry",{args:[_s*1.1]}),Ue.jsx("shaderMaterial",{vertexShader:n,fragmentShader:i,transparent:!0,blending:su,side:An})]})]})}),rR=()=>{const{destinationPoints:r,move:e}=Ls(i=>({destinationPoints:i.destinationPoints,move:i.move}),As),t=(i,s)=>r.length===1&&e?`Destination : ${i.country}`:s===0?`Departure : ${i.country}`:s===r.length-1?`Destination : ${i.country}`:`Transfer : ${i.country}`,n=i=>{switch(i.statusFlag){case Mi.moving:return gs.moving;case Mi.pending:return gs.pending;case Mi.passed:return gs.passed}};return Ue.jsx(Ue.Fragment,{children:r.length>0&&Ue.jsx("div",{className:gs.div_panel,children:r.map((i,s)=>Ue.jsx("div",{className:n(i),children:t(i,s)},`p_${s}`))})})},sR="_head_nav_6qsqy_1",oR="_div_search_6qsqy_27",aR="_li_selected_6qsqy_64",lR="_div_contact_overlay_6qsqy_72",cR="_div_contact_6qsqy_72",uR="_Overlay_6qsqy_1",Od={head_nav:sR,div_search:oR,li_selected:aR,div_contact_overlay:lR,div_contact:cR,Overlay:uR},hR="_input_componenet_y3hms_1",fR={input_componenet:hR},Gf={none:"none",underline:"underline",outline:"outline"},dR={center:"center",left:"left",right:"right"},pR=r=>{let e;const t=r.borderStyle??"1px solid var(--shadow-color)";switch(r.border){case Gf.underline:e={"--border-top":"none","--border-left":"none","--border-right":"none","--border-bottom":t};break;case Gf.outline:e={"--border-top":t,"--border-left":t,"--border-right":t,"--border-bottom":t};break;case Gf.none:default:e={"--border-top":"none","--border-left":"none","--border-right":"none","--border-bottom":"none"};break}return e={...e,"--background-color":r.backgroundColor??"unset","--color":r.color??"unset","--width":r.width??"unset","--outline":r.outline??"unset","--padding":r.padding??"unset","--font-size":r.fontSize??"16px","--text-align":r.textAlign===void 0?"center":dR[r.textAlign]},Ue.jsx("input",{className:fR.input_componenet,type:r.type,disabled:r.disabled,style:e,placeholder:r.placeHolder,value:r.value,maxLength:r.maxLength,onChange:r.onChange})},mR=()=>{const[r,e]=be.useState(""),{list:t,moveTo:n}=Ls(m=>({list:m.list,moveTo:m.moveTo}),As),[i,s]=be.useState([]),[l,c]=be.useState(-1),u=be.useRef(null),h=m=>{const y=m.target.value;if(e(y),l!==-1&&c(-1),y===""){s([]);return}const M=t.filter(x=>{var v,E;return(E=(v=x.country)==null?void 0:v.toLowerCase())==null?void 0:E.includes(y.toLowerCase())});s(M)},f=m=>{n({...m,statusFlag:Mi.pending}),e(m.country??""),s([]),c(-1)},p=m=>{if(i.length!==0)switch(m.code){case"ArrowDown":l<i.length-1?(c(l+1),g(l+1)):(c(0),g(0));break;case"ArrowUp":l>0?(c(l-1),g(l-1)):(c(i.length-1),g(i.length-1));break;case"Escape":c(-1),s([]);break;case"Enter":l>=0&&f(i[l]);break}},g=m=>{var y,M;(M=(y=u.current)==null?void 0:y.children[m])==null||M.scrollIntoView({block:"nearest"})};return Ue.jsxs("div",{className:Od.div_search,onKeyDown:p,children:[Ue.jsxs("label",{children:[Ue.jsx(pR,{border:"none",placeHolder:"Search country",width:"100%",outline:"none",textAlign:"left",color:"white",padding:"2px 4px",value:r,onChange:h}),Ue.jsx("img",{src:"/assets/icon/search.svg",alt:"search"})]}),i.length>0&&Ue.jsx("ul",{ref:u,children:i.map((m,y)=>Ue.jsx("li",{className:l===y?Od.li_selected:void 0,onClick:()=>f(m),children:m.country},m.country))})]})},gR=()=>{const r=kx(),{pathname:e}=Hx(),t={backgroundColor:"transparent",color:"white",width:"unset",margin:"0 10px",padding:"0 8px"};return Ue.jsxs("header",{className:Od.head_nav,children:[Ue.jsx("div",{}),e===ec.main&&Ue.jsx(mR,{}),Ue.jsxs("div",{children:[Ue.jsx(Ir,{...t,onClick:()=>r(ec.question),children:"Q/A"}),Ue.jsx(Ir,{...t,onClick:()=>r(ec.editor),children:"Editor"}),Ue.jsx(Ir,{...t,onClick:()=>r(ec.portfolio),children:"Portfolio"})]})]})},TR=()=>Ue.jsxs(Ue.Fragment,{children:[Ue.jsx(gR,{}),Ue.jsxs(LC,{children:[Ue.jsx("color",{attach:"background",args:[0]}),Ue.jsx(HC,{}),Ue.jsx(iR,{}),Ue.jsx(eR,{})]}),Ue.jsx(JC,{}),Ue.jsx(tR,{}),Ue.jsx(rR,{})]});export{TR as default};
